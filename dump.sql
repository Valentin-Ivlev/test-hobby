-- phpMyAdmin SQL Dump
-- version 5.0.4
-- https://www.phpmyadmin.net/
--
-- Host: localhost:3306
-- Generation Time: Jul 25, 2022 at 03:44 AM
-- Server version: 5.7.24
-- PHP Version: 7.4.16

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `hobby-test`
--

-- --------------------------------------------------------

--
-- Table structure for table `articles`
--

CREATE TABLE `articles` (
  `id` int(10) UNSIGNED NOT NULL,
  `name` varchar(255) NOT NULL,
  `link` varchar(100) NOT NULL,
  `text` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `articles`
--

INSERT INTO `articles` (`id`, `name`, `link`, `text`) VALUES
(1, 'Дхоль: умнейший хищник Азиатских лесов ', '/ru/post/678528/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><strong>Автор сообщества Фанерозой: териолог Хрис Салатор.</strong></p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/e3c/d0c/c8a/e3cd0cc8a463220c4e9e9dead0d34573.jpg\" alt=\"Хитрая морда\" title=\"Хитрая морда\" width=\"808\" height=\"731\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e3c/d0c/c8a/e3cd0cc8a463220c4e9e9dead0d34573.jpg\" data-blurred=\"true\"/><figcaption>Хитрая морда</figcaption></figure><p>Все континенты в позднем плейстоцене, за исключением Антарктиды и Австралии, были населены разной фауной, но имели очень схожие экосистемы. </p><details class=\"spoiler\"><summary>Не соответствует тематике хабра! Низкий технический материал!</summary><div class=\"spoiler__content\"><p>Просим всех людей, кто считает, что Хабр только для программистов, как например человек на скриншоте, ознакомьтесь, пожалуйста, с мнением администрации на этот счёт в комментариях под нашей статьёй <a href=\"https://habr.com/ru/company/timeweb/blog/585104/comments/#comment_23626360\" rel=\"noopener noreferrer nofollow\">о слепнях</a>. Если Вас это не удовлетворит, то, пожалуйста, не тратьте своё время на прочтение данной статьи!</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/webt/ws/8f/zm/ws8fzm9lhabukm-eqkku-j9luje.png\" alt=\"\" title=\"\" width=\"auto\" height=\"auto\" data-src=\"https://habrastorage.org/r/w1560/webt/ws/8f/zm/ws8fzm9lhabukm-eqkku-j9luje.png\"/><figcaption></figcaption></figure><p>Эта статья абсолютно соответствует тематике всех хабов, в которых она находится (в том числе и коммерческого блога). Не рискуя удивить вечно негодующего и никому не известного ностальгирующего по прошлому критика в комментариях, добавлю, что писать мы можем о чем угодно, если материал качественный и интересен большинству компьютерщиков. И это понятное дело! Поэтому можете сколько угодно называть нас платными авторами, но и обсуждать тогда с платными авторами (только по вашему мнению), а также с коммерческими блогами и с администрацией проблему каких-либо публикаций на хабре, это бороться с ветряными мельницами. Рыцарство это конечно хорошо, но только тогда, когда в этом есть смысл. Но его нет, ибо попытка достучаться до нас в комментариях утонет в этом спойлере и обесценит ваш комментарий.</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/webt/ro/pl/fa/roplfavqx_c_pxsybn5yi07zheu.png\" alt=\"\" title=\"\" width=\"auto\" height=\"auto\" data-src=\"https://habrastorage.org/r/w1560/webt/ro/pl/fa/roplfavqx_c_pxsybn5yi07zheu.png\"/><figcaption></figcaption></figure><p>Помимо того, что данная статья соответствует всем хабам, в которых она находится, отмечу также, что она соответствует и той сложности технического материала, которую требуют от статьи данные хабы. Лучше переходите сразу к прочтению других материалов, которые соответствуют вашим потребительским предпочтениям. Открою вам истину капитана: лента Хабра настраивается так, как захотите вы! Не нравятся наши статьи, читайте те статьи, в которых пишут исключительно по IT! Не портите себе настроения, уважайте мнение других и хорошего Вам дня! Живите дружно!<br/></p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/webt/ls/kx/g8/lskxg8cl1pbw0wpqmfagfm6mph8.png\" alt=\"\" title=\"\" width=\"auto\" height=\"auto\" data-src=\"https://habrastorage.org/r/w1560/webt/ls/kx/g8/lskxg8cl1pbw0wpqmfagfm6mph8.png\"/><figcaption></figcaption></figure><p>  </p></div></details><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/0da/d72/0a5/0dad720a5183c93f376436857b8860d7.jpg\" width=\"1280\" height=\"922\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/0da/d72/0a5/0dad720a5183c93f376436857b8860d7.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>Всюду присутствовали и хоботные, и лошади, и крупные кошки в роли апекс хищников. Не обошлось и без стайных карнивор, т.е. говоря проще, хищных. </p><figure class=\"bordered full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/a06/25c/a3c/a0625ca3c34cbbd79c6249dcbbb24911.jpg\" alt=\"Териодиктис\" title=\"Териодиктис\" width=\"735\" height=\"572\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a06/25c/a3c/a0625ca3c34cbbd79c6249dcbbb24911.jpg\" data-blurred=\"true\"/><figcaption>Териодиктис</figcaption></figure><p>В Южной Америке жили териодиктисы и протоционы, в Северной – ужасные и серые волки, в Европе сосуществовали сразу несколько крупных социальных хищников— жили как крупные пещерные гиены, достигавшие веса в центнер, как «пещерные» серые волки, так и довольно примечательные псовые – европейские дхоли, и лишь Африка с Азией сохранили былое величие. В Африке сейчас обитает пятнистая гиена и гиеновидная собака, а в Азии серый и красный волки. Про последнего и будет наш рассказ.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/f41/e59/60f/f41e5960ff59e1ac29259708b5ea1631.jpg\" alt=\"Дхоль, он же красный волк\" title=\"Дхоль, он же красный волк\" width=\"736\" height=\"1099\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f41/e59/60f/f41e5960ff59e1ac29259708b5ea1631.jpg\" data-blurred=\"true\"/><figcaption>Дхоль, он же красный волк</figcaption></figure><p>Красный волк, гималайский волк, буанзу или дхоль (Cuon alpinus) – это некрупное, быстрое животное, обитающее в Индии, Таиланде, Индонезии и других странах южной и центральной Азии. Что современные, что вымершие дхоли – это невероятно умные и успешные хищники, имеющие сложное социальное поведение и демонстрирующие прекрасные охотничьи качества. Количество особей в клане варьируется от 3 до 15, но так же были зафиксированы кланы, содержащие более 40 особей.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/283/f7b/58e/283f7b58ed73838932c65b6f3d5968bb.jpg\" alt=\"Клан дхолей\" title=\"Клан дхолей\" width=\"1033\" height=\"669\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/283/f7b/58e/283f7b58ed73838932c65b6f3d5968bb.jpg\" data-blurred=\"true\"/><figcaption>Клан дхолей</figcaption></figure><p>Главное отличие клана дхолей от волчьей стаи - это то, что волчья стая, как правило, является семьей с одной доминантной размножающейся парой, их ближайших родственников, а также пришлых волков-одиночек. Кланы дхолей же отличаются не только менее жесткой иерархией, несколькими размножающимися парами, но и тем, что для охоты они могут разделяться на группы по 3-5 особей. </p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/987/4b2/0b2/9874b20b2df59c25aad0a9c7451de4cc.jpg\" alt=\"Щенки дхолей\" title=\"Щенки дхолей\" width=\"1051\" height=\"855\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/987/4b2/0b2/9874b20b2df59c25aad0a9c7451de4cc.jpg\" data-blurred=\"true\"/><figcaption>Щенки дхолей</figcaption></figure><p>Брачный период у дхолей начинается в середине октября, а заканчивается в январе. В кланах этих волков часто имеется более одной размножающейся самки, так как в их среде обитания конкуренция за пищу между особями не такая сильная, как у серых волков. Беременность дхолей длится около 2 месяцев. За год самка может принести 1, редко 2 помета, содержащие около 5 щенков. Детеныши выращиваются в логове, которое зачастую является отобранным и перестроенным логовом дикобраза или полосатой гиены. Иногда исследователи находили целые подземные города, состоящие из нескольких логов и имеющие 6 входов.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/4e2/e2a/e2b/4e2e2ae2b6b7767a5e9cc15885638b21.jpg\" alt=\"То самое логово дхолей\" title=\"То самое логово дхолей\" width=\"1067\" height=\"605\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/4e2/e2a/e2b/4e2e2ae2b6b7767a5e9cc15885638b21.jpg\" data-blurred=\"true\"/><figcaption>То самое логово дхолей</figcaption></figure><p>Период лактации у красных волков длится до 60 дней, после чего щенки еще 2,5 месяца находятся в логове. Уже в возрасте полугода щенки следуют за родителями во время охоты, а к 9 месяцам помогают им охотиться.</p><p>Общаются псовые при помощи разнообразных звуков. Их голосовой аппарат схож с таковым у рыжих лисиц, но позволяет воспроизводить как низкие, так и высокие звуки. Данные животные способны тявкать, визжать, выть и пищать как на высоких, так и на низких частотах. Во время опасности издают предупреждающие вскрики, а громким стрекотом могут отпугивать врагов. Так же, ученые выяснили, что дхоли хоть и общаются в одном спектре, но каждый индивидуум предпочитает общаться со своими сородичами в определенном тоне, что может свидетельствовать об индивидуальности каждой особи.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/591/325/fd3/591325fd3eb582f37034a4030602d8d6.png\" width=\"901\" height=\"564\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/591/325/fd3/591325fd3eb582f37034a4030602d8d6.png\"/><figcaption></figcaption></figure><p>В плане охоты дхоли – настоящие генералисты. Красные волки едят в основном крупных копытных, но иногда разбавляют рацион грызунами, птицами и падалью и довольно часто едят плоды различных растений.  При этом, современные подвиды хоть и достигают всего лишь 15 кг в среднем, но имеют доступ к широкому выбору добычи, предпочитаемый вес которой 30-175 кг. Средний вес добычи дхолей около 43,4 кг, что в среднем больше, чем у леопарда, средний вес добычи которого около 37,6 кг. Также, дхоли охотились на взрослых самцов аксиса, чего не делали леопарды.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/dfa/da4/efe/dfada4efedcaa2e1bb9df1dc756c703c.jpg\" alt=\"Аксис с детёнышем\" title=\"Аксис с детёнышем\" width=\"1200\" height=\"1777\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/dfa/da4/efe/dfada4efedcaa2e1bb9df1dc756c703c.jpg\" data-blurred=\"true\"/><figcaption>Аксис с детёнышем</figcaption></figure><p>Аксис, или же читал занимает важную часть в рационе красных волков, особенно в тех местах, где редко встречаются замбары.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/b26/5ed/aa2/b265edaa23b3239876508f7179720406.jpeg\" alt=\"Замбар\" title=\"Замбар\" width=\"807\" height=\"637\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b26/5ed/aa2/b265edaa23b3239876508f7179720406.jpeg\" data-blurred=\"true\"/><figcaption>Замбар</figcaption></figure><p>Например, на этом видеофрагменте одиночный дхоль задушил крупную самку этого вида оленей, и лишь во время трапезы к нему присоединилась вторая особь. Предупреждаем кадры жестокие:</p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/62dbd9ac9c344d33ecf97714\" data-style=\"\" id=\"62dbd9ac9c344d33ecf97714\" width=\"\"></div><p>Дхоли умеют охотиться не только на комолых самок, но и на рогатых и опасных самцов. На этом <a href=\"https://www.youtube.com/watch?v=QiTYaICMqUM\" rel=\"noopener noreferrer nofollow\">видео</a> пара красных волков загрызла крупного самца замбара, но в трапезе принимала участие только одна особь. Кровожадных роликов с участием красных волков много. Чего стоит <a href=\"https://www.youtube.com/watch?v=FNSNQzHb30I\" rel=\"noopener noreferrer nofollow\">видео</a> с одиночным гималайским волком, который заживо порвал рогачу промежность, посадил его и начал поедать, не дожидаясь смерти копытного. </p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/fac/d44/a1b/facd44a1b12700a2df4fccb2929f2726.png\" alt=\"Вместо видео вот вам безобидная картинка. А видео по ссылке смотрите.\" title=\"Вместо видео вот вам безобидная картинка. А видео по ссылке смотрите.\" width=\"835\" height=\"557\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/fac/d44/a1b/facd44a1b12700a2df4fccb2929f2726.png\"/><figcaption>Вместо видео вот вам безобидная картинка. А видео по ссылке смотрите.</figcaption></figure><p>Но, ни одними аксисами дхоли питаются – львиную долю рациона составляет замбар, один из крупнейших современных оленей в мире, которого по размерам превосходят лишь вапити и лось. Чаще всего дхоли охотятся на замбаров группой, но изредка они могут убивать их и в одиночку, если это самки или детеныши, как в этом видео: </p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/62dbd901d5cd01344c92f14e\" data-style=\"\" id=\"62dbd901d5cd01344c92f14e\" width=\"\"></div><p>Телята в рационе красных волков тоже появляются довольно часто, причем иногда их могут украсть из-под защиты матери! На камеру попал занятный случай, когда одиночный красный волк утащил теленка у водяного буйвола прямо из водоема</p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/62dbd934d5cd01344c92f14f\" data-style=\"\" id=\"62dbd934d5cd01344c92f14f\" width=\"\"></div><p>А вот теленку нильгау повезло меньше, небольшая группа волков была замечена за поеданием детеныша <a href=\"https://www.youtube.com/watch?v=vV_O3VZR9u4&amp;t\" rel=\"noopener noreferrer nofollow\">заживо</a>.<a href=\"https://www.youtube.com/watch?v=vV_O3VZR9u4&amp;t\" rel=\"noopener noreferrer nofollow\"> </a> Ниже на картинке вы можете видеть добычу дхолей  в процентах в различных индийских заповедниках (KMTR; Pakke TR, Pench TR и др.)</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/175/e42/3e3/175e423e358c8181a66a3514e88f71b3.png\" width=\"915\" height=\"363\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/175/e42/3e3/175e423e358c8181a66a3514e88f71b3.png\"/><figcaption></figcaption></figure><p>Несмотря на все вышеперечисленные случаи, дхоли не только умелые охотники, но еще и хитрые, наглые пройдохи, не гнушающиеся украсть добычу у других животных. Например, на этом видео дхоль в одиночку отогнал леопарда от туши некрупной самки замбара:</p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/62dbde0882bb9f348992c5d5\" data-style=\"\" id=\"62dbde0882bb9f348992c5d5\" width=\"\"></div><p>Гималайские волки делят территорию с разнообразными хищниками, начиная от гиперхищных тигров и заканчивая шакалами. Со всеми этими животными дхоли конкурируют за ресурсы и безопасность, например, был описан случай, когда леопард, напав на дхоля моментально получил мощный отпор от его сородичей:</p><blockquote><p><em>«Вчера я наткнулся на интересный случай с пантерой, которая была убита красными волками. Судя по всему, произошло следующее: в каком-то укрытии отдыхала стая дхолей. Одна особь ушла к воде и была немедленно схвачена леопардом. Крик, который издал пес, привлек всю стаю. В последовавшей ожесточенной схватке леопард был разорван, а я не обнаружил никаких красных волков, убитых в драке.»</em></p></blockquote><p><em><br/></em>С шакалами у дхолей отношения более простые. Шакалы регулярно наведываются к убитым красными волками животным и поедают их, за что их прогоняют при любом удобном случае. В отместку шакалы могут убивать щенков гималайских волков, что еще сильнее разжигает вражду:</p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/62dbde789c344d33ecf97715\" data-style=\"\" id=\"62dbde789c344d33ecf97715\" width=\"\"></div><p>Тигры, как высшие хищники азиатских лесов, влияют на численность дхоля куда сильнее, чем леопарды и шакалы. Ученые из Института дикой природы Индии выяснили, что между количеством дхолей в стаях и плотностью заселения территории тиграми есть обратная корреляция. Чем плотнее живут тигры, тем сильнее конкуренция за добычу и сильнее давление на красных волков, что в свою очередь плохо сказывается на численности псовых. Зато на территории, где тигров меньше, красные волки чувствуют себя намного лучше.</p><p>Часто бывают и конфронтации дхолей с тиграми, но в основном, они заканчиваются не в пользу псовых. Тигры прогоняют красных волков от добычи, убивают щенков или даже взрослых особей.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b54/cd4/3a5/b54cd43a5c00827952e544008cdec0aa.png\" width=\"873\" height=\"578\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b54/cd4/3a5/b54cd43a5c00827952e544008cdec0aa.png\"/><figcaption></figcaption></figure><p>Но несмотря на это, главным врагом красных волков является человек. Из-за его деятельности эти уникальные псовые, жившие по всей Евразии на грани вымирания. Вырубка лесов, уничтожение добычи дхоля и урбанизация плохо влияют на их численность.. Но, в мире существует много интересных проектов, которые могли бы спасти этих красивых животных от вымирания, например, Плейстоценовый парк. Создатели этого уникального проекта по воссозданию тундростепных экосистем могли бы использовать некоторые подвиды красных волков для ревайлдинга и тем самым сохранить этот вид диких животных на нашей планете.</p><details class=\"spoiler\"><summary>Список использованных материалов:</summary><div class=\"spoiler__content\"><p><a href=\"http://www.bioacoustica.org/publ/papers/224_Frey_et_al_2016_PLoS.pdf\" rel=\"noopener noreferrer nofollow\"><u>http://www.bioacoustica.org/publ/papers/224_Frey_et_al_2016_PLoS.pdf</u></a></p><p><a href=\"http://www.bioacoustica.org/publ/papers/145_Volodina_et_al_2006_Ethology.pdf\" rel=\"noopener noreferrer nofollow\"><u>http://www.bioacoustica.org/publ/papers/145_Volodina_et_al_2006_Ethology.pdf</u></a></p><p><a href=\"http://www.bioacoustica.org/publ/papers/148_Volodin_et_al_2006_IBAC.pdf\" rel=\"noopener noreferrer nofollow\"><u>http://www.bioacoustica.org/publ/papers/148_Volodin_et_al_2006_IBAC.pdf</u></a></p><p><a href=\"http://www.bioacoustica.org/publ/papers/140_Volodin_et_al_2005_JOB.pdf\" rel=\"noopener noreferrer nofollow\"><u>http://www.bioacoustica.org/publ/papers/140_Volodin_et_al_2005_JOB.pdf</u></a></p><p><a href=\"http://www.bioacoustica.org/publ/papers/126_Volodin&amp;Volodina_2002_Bioacoustics.pdf\" rel=\"noopener noreferrer nofollow\"><u>http://www.bioacoustica.org/publ/papers/126_Volodin&amp;Volodina_2002_Bioacoustics.pdf</u></a></p><p><a href=\"http://www.bioacoustica.org/publ/papers/123_Volodin_et_al_2001_ZJ.pdf\" rel=\"noopener noreferrer nofollow\"><u>http://www.bioacoustica.org/publ/papers/123_Volodin_et_al_2001_ZJ.pdf</u></a></p><p><a href=\"https://vk.com/away.php?to=https%3A%2F%2Fdoi.org%2F10.2307%252F5647&amp;post=-199678174_681&amp;cc_key=\" rel=\"noopener noreferrer nofollow\"><u>https://doi.org/10.2307/5647</u></a></p><p><a href=\"https://www.researchgate.net/figure/Frequency-of-prey-species-in-dhole-scat-in-Indian-subcontinent_tbl1_313112070\" rel=\"noopener noreferrer nofollow\"><u>https://www.researchgate.net/figure/Frequency-of-prey-species-in-dhole-scat-in-Indian-subcontinent_tbl1_313112070</u></a></p><p><a href=\"https://archive.org/stream/journalof363431361936bomb/journalof363431361936bomb_djvu.txt#:~:text=111.%20%E2%80%94%20WILD%20%20DOGS,February%20%2015%2C%20%201933\" rel=\"noopener noreferrer nofollow\"><em><u>https://archive.org/stream/journalof363431361936bomb/journalof363431361936bomb_djvu.txt#:~:text=111.%20%E2%80%94%20WILD%20%20DOGS,February%20%2015%2C%20%201933</u></em></a></p><p><a href=\"https://vk.com/away.php?to=https%3A%2F%2Fonlinelibrary.wiley.com%2Fdoi%2F10.1002%2Fece3.7380&amp;cc_key=\" rel=\"noopener noreferrer nofollow\"><u>https://onlinelibrary.wiley.com/doi/10.1002/ece3.7380</u></a></p></div></details><p></p></div>'),
(2, 'Беспилотник 2.0 ', '/ru/post/678534/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><em>Или как нейронные сети спасут беспилотные автомобили</em></p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/5f6/842/16a/5f684216a02e92d7e0a6f295a08817e7.jpeg\" width=\"704\" height=\"562\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/5f6/842/16a/5f684216a02e92d7e0a6f295a08817e7.jpeg\" data-blurred=\"true\"/><figcaption></figcaption></figure><h3>Что это такое?</h3><p>Autonomy 2.0 - термин, которым в последние пару лет описывают новый подход к созданию беспилотного автомобиля.</p><p>Сегодня я разберу:</p><ul><li><p>Зачем появилась Autonomy 2.0 и в чём она заключается</p></li><li><p>Напомню, как устроен классический подход и с какими проблемами он сталкивается</p></li><li><p>В чём преимущества нового подхода и какие вызовы он несет</p></li><li><p>Насколько разница между подходами четко прослеживается на практике</p></li></ul><h3>Откуда оно появилось и в чём заключается</h3><p>2.0 подход к созданию беспилотника появился как ответ на фрустрацию от медленного прогресса в отрасли. Несмотря на внушительные достижения в создании беспилотного авто и потраченные <a href=\"https://www.cnbc.com/2022/05/21/why-the-first-autonomous-vehicles-winners-wont-be-in-your-driveway.html\" rel=\"noopener noreferrer nofollow\">миллиарды долларов</a> практический прогресс пока скромный. Крупнейшая компания - Waymo (подразделение Google) оперирует только в двух городах: Феникс (с 2019) и Сан-Франциско (с 2021). Следующая за ней Cruise (General Motors) только в Сан-Франциско (с 2022). Tesla, несмотря на регулярные заявления CEO Илона Маска о полной автономности через полгода, пока остаётся продвинутым круиз контролем для хайвэев и автоматической парковки.</p><p>Autonomy 2.0, как сформурованно в <a href=\"https://arxiv.org/abs/2107.08142\" rel=\"noopener noreferrer nofollow\">статье</a> “Директора по науке” (Head of research) компании Lift (Toyota), отличается от привычного подхода:</p><ol><li><p>Большим упором на машинное обучение. А именно, попыткой обучать одну нейронную сеть, на вход которой подаются данные с сенсоров (обычно снимки с камер), а на выходе - траектория движения в ближайшие пару секунд. Такой подход ещё называют end-to-end, потому что вся работа происходит в одной нейросети, без промежуточных этапов реализованных, скажем, на С++.</p></li><li><p>Широким использованием реалистичного симулятора (в противовес тестированию на реальных дорогах в классическом подходе).</p></li><li><p>Облегчённым hardware. Вместо комбинации из нескольких лидаров, камер и радаров - только камеры. Меньше сенсоров - меньше вычислителей - проще электрика и охлаждение. Такое радикальное упрощение системы не только позволяет снизить её стоимость на пару порядков, но и облегчить установку и эксплуатацию, а, значит, позволяет сделать “беспилотными” намного больше машин и собирать данные, необходимые для обучения сети, в гораздо большем масштабе.</p></li></ol><p></p><p>Чтобы лучше понять логику и последствия такого выбора, стоит вспомнить, как устроены беспилотники лидирующих компаний (если для вас этот раздел очевиден - смело пропускайте)</p><h3>А как был устроен классический подход?</h3><p>Классический подход (инженерный) - разбить большую задачу на много подзадач, четко прописав, что каждая система получает на вход и производит на выходе. Затем подсистемы соединялись (в основном последовательно) в так называемый “пайплайн”.</p><p>Нейронные сети и вообще машинное обучение, конечно, использовались, но их сфера применения была ограничена четко поставленными подзадачами. Условно, больше кода написано на С++, чем на TensorFlow/Pytorch.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/c81/082/e46/c81082e461cf7ce399d77ca721cbc42f.jpeg\" width=\"900\" height=\"816\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c81/082/e46/c81082e461cf7ce399d77ca721cbc42f.jpeg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>Схематичное описание пайплайна:</p><p><strong>HD map.</strong> Сверхточные карты города сантиметровой точности и указанием всех полос, светофоров, ограничений скорости и т.д. Изначально карты вообще создавались вручную, позже на помощь пришла автоматика (те же нейронные сети). Карты, строго говоря, не являются частью пайплайна, так как создаются не во время поездки.</p><p><strong>Localisation.</strong> Первый этап пайплайна - понять, где точно находится беспилотник.При наличии HD-карты не нужен ML, подойдут намного более надёжные методы оптимизации.</p><p><strong>Perception</strong>. Следующий этап - распознать все объекты вокруг беспилотника, начиная с пешеходов, машин и сигналов светофоров на дороге, и заканчивая дорожными работниками, аварийкой и типом автомобиля. Вся информация, которая позже потребуется для принятия решения, как ехать, должна быть четко сформулирована и извлечена на этом этапе. Зачастую для каждого типа объектов существует отдельная команда, и если вы хотите, например, начать по-разному реагировать на велосипеды и самокаты, то вам придётся ждать месяцы пока новый тип объектов станет доступен далее по пайплайну. В классическом подходе perception это, по сути, единственная подзадача, решаемая с помощью машинного обучения.</p><p><strong>Prediction</strong>. Распознать всех участников дорожного движения недостаточно, в реальном городе нужно ещё предсказать их будущее поведение. Поскольку изначально беспилотники тестировались в простых условиях, то задаче предсказания будущего уделялось мало внимания. Достаточно было предположить, что пешеходы продолжат движение по прямой, а машины - согласно своей кинематике. В последние годы в результате тестирования в больших городах оказалось, что так называемый “motion prediction” - это чуть ли не <a href=\"https://blog.waymo.com/2021/03/expanding-waymo-open-dataset-with-interactive-scenario-data-and-new-challenges.html\" rel=\"noopener noreferrer nofollow\">самая сложная задача в беспилотном авто</a> и на неё обрушилась вся мощь Deep Learning (нейронных сетей).</p><p><strong>Planning.</strong> Имея полную картину об окружающем мире и гипотезы о возможном развитии событий, следующий этап - спланировать безопасную траекторию, которая не нарушает ПДД и, что самое сложное, с наибольшей скоростью. Стоять на парковке - максимально безопасно и не нарушает ПДД, но беспилотник, который не решается выехать на дорогу, никому не нужен. Можно сказать, что вся “бизнес-логика” заключена именно в этом этапе. В классическом подходе - никакого машинного обучения, только перебор вариантов и проверка условий.</p><p><strong>Control</strong>. Последний этап - это исполнение запланированной траектории с максимальным комфортом для пассажиров и предсказуемо для других участников дорожного движения. Эта подзадача в чем-то похожа на автопилот самолёта (удержание курса, скорости и высоты) и решается тоже классическими методами.</p><h3>Чем end-to-end подход лучше?</h3><p><strong>Больше информации</strong>. Поток данных в сети принципиально никак не ограничен. Если вдруг окажется что цвет машины позволяет лучше предсказать её поведение, то сеть, имея достаточно большую обучающую выборку, успешно выучит это зависимость. Например, что водители красных спорткаров ведут себя более агрессивно. В классическом же подходе - придется переписывать все протоколы общения между подсистемами, чтобы пробросить признак “цвет” дальше по пайплайну.</p><p><strong>Атомарность задач</strong>. Некоторые задачи вообще нельзя решить поодиночке. Например, задача предсказания движения других водителей не решается отдельно от планирования собственного движения, так как решение беспилотника, пропускать или нет другого водителя, очевидно, влияет на будущую траекторию. Но исторически сложилось, что задачу предсказания решают отдельно. Можно, конечно, позволить модулю планирования и предсказания обмениваться информацией в обе стороны, но это значительно замедляет время реакции беспилотника, поэтому всё больше исследователей пытаются решить задачу предсказания и планирования совместно, например, <a href=\"https://arxiv.org/abs/2101.06679\" rel=\"noopener noreferrer nofollow\">статья</a> бывшей инженерки Uber, a теперь CEO своего autonomy 2.0 стартапа <a href=\"https://waabi.ai/\" rel=\"noopener noreferrer nofollow\">Waabi</a>.</p><p><strong>Масштабируемый сбор данных</strong>. Надежда на машинное обучение и его способность извлечь всю необходимую информацию из камер (примерно как человек), позволяет “облегчить” набор сенсоров и отказаться от дорогих, ненадёжных и сложных в обслуживании лидаров. А, значит, переделать под беспилотник на порядок больше машин и собирать данные эффективнее.</p><p><strong>Отказ от HD карт.</strong> Тоже упрощает задачу масштабирования, особенно в те регионы, где проблемно развернуть хабы, которые необходимы для кадрирования городов.</p><h3>Недостатки end-to-end подхода</h3><p>К end-to-end подходу, конечно, много вопросов:</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/1c0/b85/a48/1c0b85a48c2598f6ec3f4abca8c4c7c3.jpeg\" width=\"560\" height=\"440\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1c0/b85/a48/1c0b85a48c2598f6ec3f4abca8c4c7c3.jpeg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p><strong>Интерпретируемость</strong>. Точнее, её отсутствие. Лучше всего это заметно, если прокатиться на  беспилотниках разных типов. В классическом беспилотнике во время поездки внутреннее состояние визуализируется: можно наблюдать, например, каких пешеходов беспилотник видит хорошо, а каких не очень, каким автомобилям будущее предсказывается корректно, а каким нет, и т.д. В результате, когда система ошибается, то обычно понятно, что пошло не так и какая подсистема нуждается в доработке. На контрасте, при поездке в беспилотнике 2.0. происходящее ощущается как магия, беспилотник просто вертит рулём по одному ему известному закону, который сеть выучила, наблюдая за вождением экспертов.</p><p>Такое отсутствие понятного объяснения проблематично сразу с нескольких сторон. Во-первых, к такому беспилотнику меньше доверия. Пассажиру нужно сесть в машину, работу которой не понимает не только он, но и даже её создатели. И проблема не только с недоверием потенциальных пассажиров, но и с чиновниками, которые принимают законы, регулирующие отрасль.</p><p>Во-вторых, выстроить работу по итеративному улучшению беспилотника намного сложнее.  Банально непонятно, какой баг фиксить или какую фичу пилить, чтобы беспилотник, например, перестал проезжать на красный свет светофора.</p><p>Такую проблему интерпретируемости часто называют ключевой сторонники классического подхода. Но на самом деле, она в последнее время всё чаще возникает и в инженерном подходе тоже. Дело в том, что современные беспилотники настолько сложны и над ними работает так много людей (тысячи в топовых компаниях), что сказать, что кто-то “понимает”, как работает классический беспилотник, уже нельзя. Аналогично и с ошибками, часто они происходят на стыке подзадач: например, беспилотник поздно среагировал на пешехода, потому что заметил его на долю секунды позже необходимого или потому что предсказание будущей траектории было неточным? Или потому что не стоило по этой улице изначально ехать с большой скоростью или, вообще, потому что камера была слегка грязная? Скорее всего, небольшая ошибка на каждой стадии внесла свой вклад и “не повезло”, что эти ошибки сложились, а не усреднились в данном случае.</p><p>Ещё одна сложность, на которую редко обращают внимание - <strong>симуляция</strong>. Вообще, активное использование виртуального мира для тестирования беспилотника, выглядит как правильная стратегия и сторонники autonomy 2.0 возлагают неё <a href=\"https://waabi.ai/how-waabi-world-works\" rel=\"noopener noreferrer nofollow\">большие надежды</a> Потенциальные преимущества симулятора перед тестированием на реальных дорогах очевидны: это безопасность, воспроизводимость и, конечно, стоимость. Главная же сложность в создании такого симулятора заключается в том, что всё богатство и разнообразие реального мира крайне сложно (и дорого) симулировать. И, как ни странно, для классического беспилотника это сделать проще: достаточно симулировать внутреннее представление, получаемое на выходе из perception. Для end-to-end подхода такой хак не подойдет, придётся симулировать фотореалистичную картину мира. Конечно, в фотореализме достигнут большой прогресс за счёт объединения традиционных подходов из геймдизайна и <a href=\"https://openai.com/dall-e-2/\" rel=\"noopener noreferrer nofollow\">нейро-генерации изображения</a>, но до целевого результата ещё далеко.</p><p>Последняя особенность autonomy 2.0, о которой мне хочется сказать, это сложность провести красивое <strong>демо</strong>. Это, с одной стороны, чуть ли не главный недостаток подхода, но и, возможно, его большое преимущество. Дело в том, что разработка беспилотника обходится очень дорого и инвесторы, конечно, хотят видеть прогресс. Поэтому все компании в индустрии наглядно этот прогресс демонстрируют, устраивая показательные заезды (не только для инвесторов, но и для чиновников и журналистов). Так вот, классический подход позволяет достаточно быстро подготовить беспилотник к проезду одного, специально выбранного маршрута. Чем, собственно, команда значительную долю времени и занимается. Задача масштабирования на другие маршруты и условия при этом, конечно, страдает, зато инвесторы охотнее дают деньги, видя как хорошо беспилотник справляется с задачей (такая печальная ситуация наблюдается во многих компаниях, с сотрудниками которых мне доводилось говорить). End-to-end подход в этом смысле хуже, так как приходится сразу решать задачу в общей постановке. С другой стороны, это позволяет команде сфокусироваться на достижении главной цели - создании беспилотного автомобиля (а не разовой демонстрации). Это определяет принципы менеджмента, влияет на создание инфраструктуры и даже на политику найма сотрудников.</p><hr/><p>В заключение мне хотелось бы отметить, что на практике разница между классическим подходом и подходом 2.0 не такая резкая. Многие классические компании тоже понемногу мигрируют в сторону большего использования машинного обучения и <a href=\"https://blog.waymo.com/2021/06/SimulationCity.html\" rel=\"noopener noreferrer nofollow\">тестирования в симуляторе</a>, всё меньше опираются на hd карту и больше - на perception, пытаются “выучить” правильное поведение на дороге, а не описать его правилами и т.д. Многие компании сейчас находятся где-то посередине между классическим и end-to-end подходом, и стоит говорить, скорее, об autonomy 1.4 или 1.6 vs autonomy 2.0. В любом случае, чем больше разных подходов - тем выше вероятность, что хоть кто-то решит эту задачу, и мы будет жить в более безопасном, эффективном, экологичном и интересном мире.</p></div>'),
(3, 'Как происходит рендер пользовательских полей в Joomla? ', '/ru/post/678538/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><div class=\"persona\" persona=\"true\"><img persona=\"true\" class=\"image persona__image\" src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/691/b21/f33/691b21f337819ddb770ed18ba7c2eaf2.jpg\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/691/b21/f33/691b21f337819ddb770ed18ba7c2eaf2.jpg\" data-blurred=\"true\"/><h5 class=\"persona__heading\" persona=\"true\">Olivier Buisard</h5><p>Франкоязычный Joomla разработчик, <a href=\"https://simplifyyourweb.com/\" rel=\"noopener noreferrer nofollow\">https://simplifyyourweb.com/</a>.</p></div><p>Эта небольшая статья рассказывает о том, как происходит рендеринг пользовательских полей \"под капотом\" Joomla. Информация будет Вам полезна для создания переопределений и вёрстки своего вывода полей в Ваших новых проектах. А также упростит поиск и поддержку сайтов на Joomla, пришедших от других разработчиков.</p><p>Рендер пользовательских полей Joomla происходит в 3 этапа:</p><ul><li><p><strong>1-й этап:</strong> создаётся layout, который собирает все поля вместе и создаёт общий для всех вывод.</p></li><li><p><strong>2-й этап:</strong> создаётся layout, в котором определяется как отображается каждое отдельное поле (отображать ли label поля и т.д.)</p></li><li><p><strong>3-й этап:</strong> создаётся layout, который определяет вывод значения конкретного поля.</p></li></ul><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/6b3/449/1aa/6b34491aa71b4a4def009ad6810f0618.png\" alt=\"Этапы рендера пользовательских полей в Joomla\" title=\"Этапы рендера пользовательских полей в Joomla\" width=\"380\" height=\"367\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/6b3/449/1aa/6b34491aa71b4a4def009ad6810f0618.png\"/><figcaption>Этапы рендера пользовательских полей в Joomla</figcaption></figure><p>Каждый компонент может отображать поля по-своему. В ядре Joomla компонент \"Контакты\" является единственным компонентом, который имеет определенные макеты для отображения полей (в частности, он обрабатывает поля в электронных письмах).</p><h2>Порядок рендера всех пользовательских полей</h2><p>Joomla ищет макеты рендера всех пользовательских полей в следующем порядке:</p><ul><li><p>Есть ли файл <code>templates/[template name]/html/layouts/[component name]/fields/render.php</code> , переопределяющий макет вывода полей для конкретного компонента? Да - используем его.</p></li><li><p>Нет? Есть ли файл <code>components/[component name]/layouts/fields/render.php</code>  в папке компонента? Да - используем его.</p></li><li><p>Нет? Есть ли файл <code>templates/[template name]/html/layouts/com_fields/fields/render.php</code> , переопределяющий вывод полей для <code>com_fields</code>? Да - используем его.</p></li><li><p>Нет? Используем файл <code>components/com_fields/layouts/fields/render.php</code> </p></li></ul><p>Можно скопировать, переименовать и переопределить файл <code>render.php</code> , чтобы появилась возможность вручную выбирать, какой файл рендеринга использовать, но это должно быть сделано с помощью кода в расширениях.</p><p>Следующий код</p><pre><code class=\"php\">FieldsHelper::render(\'com_content.article\', \'fields.render\', [\'item\' => …, \'context\' => \'com_content.article\', \'fields\' => …]);</code></pre><p>отобразит все поля для материала с помощью файла <code>layouts/fields/render.php</code>. А этот код</p><pre><code class=\"php\">FieldsHelper::render(\'com_content.article\', \'fields.myoverride\', [\'item\' => …, \'context\' => \'com_content.article\', \'fields\' => …]);</code></pre><p>отобразит все поля для материала с помощью <code>layouts/fields/myoverride.php</code> .</p><h3>Использование плагина контента \"Контент - Поля\"</h3><p>Плагин для отображения настраиваемого поля в содержимом сайта, которое может быть вставлено в область редактора с помощью кнопки <strong>Поле</strong> или с использованием следующего синтаксиса:</p><ul><li><p><code>{fieldgroup 2}</code> позволит отобразить все поля группы полей с ID 2.</p></li><li><p><code>{fieldgroup *}</code> (вместо точного id - символ звёздочки) позволит отобразить все группы полей</p></li></ul><h2>Порядок рендера конкретного пользовательского поля Joomla</h2><p>Механизм поиска файлов макетов вывода каждого отдельного поля такой же, как и для групп полей.</p><ul><li><p>Есть ли файл <code>templates/[template name]/html/layouts/[component name]/field/render.php</code>,  переопределяющий макет вывода полей для конкретного компонента? Да - используем его.</p></li><li><p>Нет? Есть ли файл <code>components/[component name]/layouts/field/render.php</code>  в папке компонента? Да - используем его.</p></li><li><p>Нет? Есть ли файл переопределения для <code>com_fields</code> - <code>templates/[template name]/html/layouts/com_fields/field/render.php</code>? Да - используем его.</p></li><li><p>Нет? Используем <code>components/com_fields/layouts/field/render.php</code></p></li></ul><p>Можно создать несколько переопределений файла <code>components/com_fields/layouts/field/render.php</code> и иметь возможность выбрать, какой из них использовать, в настройках поля панели администратора (вкладка опции).</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/86b/096/3d5/86b0963d5329539e2e74d64ec6e13889.png\" alt=\"Выбор макета вывода для пользовательского поля Joomla\" title=\"Выбор макета вывода для пользовательского поля Joomla\" width=\"451\" height=\"170\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/86b/096/3d5/86b0963d5329539e2e74d64ec6e13889.png\"/><figcaption>Выбор макета вывода для пользовательского поля Joomla</figcaption></figure><p>Если Вы выбрали собственный макет, Joomla отобразит поле с Вашей вёрсткой.</p><p>\"Use default (по умолчанию)\" означает, что для рендера будет использован файл <code>render.php</code>.</p><p>Не создавайте переопределения, если вы можете получить тот же результат, просто используя CSS. Такое решение будет легче поддерживать в дальнейшем.</p><h3>Использование плагина контента \"Контент - Поля\"</h3><p>Вы можете использовать шорт-код <code>{field [id]}</code> , где [id] - id поля. Макет вывода используется по умолчанию - <code>layouts/field/render.php</code>. </p><p>Шорт-код <code>{field 2,foo}</code> позволит отобразить поле с ID 2, которое использует альтернативный макет <strong>foo</strong>.</p><h2>Отображение значения пользовательского поля Joomla</h2><p>Каждое пользовательское поле реализовано с помощью плагина, находящегося в директории <code>plugins/fields</code>. Макеты вывода плагинов находятся в папке <code>tmpl</code>. Например, для плагина поля <code>text</code> макеты вывода находятся в <code>plugins/fields/text/tmpl</code>. Макет вывода по умолчанию имеет такое же имя файла, как и сам плагин. Для плагина поля <code>\"text\"</code> файл макета вывода будет называться <code>text.php</code>.</p><p>Этот файл тоже можно переопределить. Можно сделать или вручную или с помощью вкладки \"Создание переопределений\" в <em>настройках шаблона</em> (не стиля шаблона).</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/726/21b/830/72621b8301b6e8223ca09cf87f87f926.png\" alt=\"Плагины полей в настройках шаблона\" title=\"Плагины полей в настройках шаблона\" width=\"296\" height=\"525\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/726/21b/830/72621b8301b6e8223ca09cf87f87f926.png\"/><figcaption>Плагины полей в настройках шаблона</figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/aaa/4aa/5db/aaa4aa5db74dc101e53ed7e04d4a1efd.png\" width=\"1330\" height=\"622\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/aaa/4aa/5db/aaa4aa5db74dc101e53ed7e04d4a1efd.png\"/><figcaption></figcaption></figure><p>В коде значения полей обычно получаются <code>FieldsHelper::getFields($context, $item, true);</code> , где</p><ul><li><p><em>$context</em>  - контекст компонента, в котором должно быть выбрано поле (например, <em>\'com_content.article\'</em>).</p></li><li><p><em>$item</em>  - материал, категория и т.д., для которого должно быть получено значение поля.</p></li><li><p><em>true </em>  указывает, что значение поля должно быть обработано плагином и вернуть значение вместе с HTML-вёрсткой из макета. Если указано false, то вернется \"голое\" значение поля, введённое в админке.</p><h3>Так же полезные ресурсы</h3><h3>Ресурсы сообщества:</h3><ul><li><p><a href=\"https://joomlaforum.ru/\" rel=\"noopener noreferrer nofollow\"><u>форум русской поддержки Joomla</u></a>.</p></li><li><p><a href=\"https://joomlaportal.ru/\" rel=\"noopener noreferrer nofollow\"><u>интернет-портал Joomla-сообщества</u></a>.</p></li><li><p><a href=\"https://vc.ru/s/1146097-joomla\" rel=\"noopener noreferrer nofollow\">https://vc.ru/s/1146097-joomla</a> - Сообщество Joomla на VC.</p></li></ul><h3>Telegram:</h3><ul><li><p><a href=\"https://t.me/joomlaru\" rel=\"noopener noreferrer nofollow\"><u>чат сообщества «Joomla! по-русски»</u></a>.</p></li><li><p><a href=\"https://t.me/projoomla\" rel=\"noopener noreferrer nofollow\"><u>Joomla для профессионалов, разработчики Joomla</u></a>.</p></li><li><p><a href=\"https://t.me/joomlafeed\" rel=\"noopener noreferrer nofollow\"><u>Новости о Joomla! и веб-разработке по-русски</u></a>.</p></li><li><p><a href=\"https://t.me/joomla_jobs\" rel=\"noopener noreferrer nofollow\"><u>вакансии и предложения работы по Joomla</u></a>: фуллтайм, частичная занятость и разовые подработки. Размещение вакансий <a href=\"https://jpath.ru/jobs/add\" rel=\"noopener noreferrer nofollow\"><u>здесь</u></a>.</p></li><li><p><a href=\"https://t.me/joomlatalks\" rel=\"noopener noreferrer nofollow\">Англоязычный чат сообщества</a>.</p></li></ul></li></ul></div>');
INSERT INTO `articles` (`id`, `name`, `link`, `text`) VALUES
(4, 'Создание своей эргономичной клавиатуры, ч4: делаем корпус (пришло время бутербродов) ', '/ru/post/678540/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>К этому моменту, <a href=\"https://habr.com/ru/post/669698/\" rel=\"noopener noreferrer nofollow\">раскладка</a> была определена, закуплены <a href=\"https://habr.com/ru/post/670458/\" rel=\"noopener noreferrer nofollow\">комплектующие</a>, <a href=\"https://habr.com/ru/post/671034/\" rel=\"noopener noreferrer nofollow\">плата</a> спаяна и прошита. Оно конечно выглядит круто, печатать прямо платой наружу, но у такого подхода есть и минусы:</p><ul><li><p>клавиатура елозит по столу/подставке (сокеты плоские) и царапает поверхность (длинными ножками и плохой пайкой) одновременно;  </p></li><li><p>сложно задать наклон для нее;  </p></li><li><p>сложно искать положение рук относительно клавиш;</p></li><li><p>очень низкая защита от проливания воды и сока на процессор :)</p></li></ul><p>Соответственно следующий разумный шаг это сделать корпус. О, корпусирование это отдельная огромная тема. Кто-то может сделать нечто особенное просто вырезав из картона. Кто-то может выпилить из пенька дремелем. А кто-то может выдолбить прямо из камня. Но это не для меня, так что я смотрю на более реалистичные методы. Это 3D печать из пластика или чего покруче; лазерная резка по акрилу либо дереву либо стали либо еще чего круче. А еще можно заказать фрезеровку из дерева или еще чего... Выбор слишком велик.</p><p>Так как я уже знаю что у меня в дизайне есть ошибки, я решил просто соорудить бутерброд, как один из самых дешевых способов превращения идеи в материальные вещи. Я хочу протестировать на реальном размере, потрогать материалы и вообще посмотреть жизнеспособен ли этот метод. Самые популярные варианты для резки это акрил и дерево. Металлический корпус звучит прямо ух, но это дорого и я не думаю что для моего случая металл подойдёт.</p><p>Короче: тестируем бутерброды чтоб либо исключить либо взять как основной метод для следующей итерации.</p><p>Бутерброды собираются из нескольких слоёв, где каждый подходящей для него толщины и выполняет свою роль:</p><ol><li><p>Основание, защищающее всё снизу, а также место для прикрепления ножек от скольжения и регуляторы наклона. Требуемая толщина и материал -- по вкусу, абы хватило пережить ежедневное использование и давление от регуляторов наклона если их ставить.</p></li><li><p>Нижний слой -- поднимает печатную плату над основанием чтобы детали ничего не цепляли. Толщина требуется больше чем высота самого большого элемента на нижней стороне печатной платы.</p></li><li><p>Верхний слой -- даёт пространство для элементов на верхней стороне печатной платы (у меня это процессор и разъём ко второй половине). Толщина подбирается аналогично нижнему слою -- выше самого высокого элемента (кроме свичей).</p></li><li><p>Крышка -- пластина с прорезями под свичи и сами клавиши, закрывающая всё остальное что есть на плате так, чтоб всё вместе хорошо смотрелось. Толщина -- по вкусу, материал -- по желанию.</p></li></ol><p>Так как мне надо отладить процесс создания, для первого заказа я подготовил верхний и нижний слои. Это не защищает клавиатуру от швепса, но достаточно чтобы ею уже можно было начать пользоваться и проверить как всё собирается вместе. (Да, я знаю, мне следовало бы изучить FreeCAD или налог, сделать 3D модели для всех элементов, экспортировать плату в 3D, сгенерировать модели для слоёв и собрать всё вместе в 3D редакторе. Ну, как это полагается делать по нормальному. Вот только я тут развлекаюсь, и изучение всего этого инструментария в категорию развлечений не входит).</p><p>Основные плюсы бутербродов:</p><ul><li><p>Цена материала сильно ниже чем у эквивалентного объема пластика для 3D печати;</p></li><li><p>Стоимость резки сильно ниже стоимости печати на этих объёмах;</p></li><li><p>Можно сделать из стали или дерева за почти ту же цену;</p></li><li><p>Можно нанести гравировку, чтоб все обзавидовались.</p></li></ul><p>Основные минусы же:</p><ul><li><p>Только плоские элементы;</p></li><li><p>Если нужны углубления (например, сделать вырез под разъём но не разрывать контур) -- придётся переходить от дешевой лазерной резки на гораздо более дорогую фрезеровку</p></li></ul><p>К делу. Для того, чтобы заказать лазерную резку, потребуется файл с вектором -- линии по которым резать, линии по которым гравировать, области гравировки. Всё нужно делать в размер с учетом толщины реза (типично 0.1-0.3мм) и т.п.</p><p>Я ленив, я хочу чтоб оно получилось сразу, а еще вынужден изучать все используемые инструменты. Поэтому я записал все шаги, по которым можно повторить даже без опыта этого дела.</p><ul><li><p>Через \"File→Plot\" из KiCAD печатаем слои печатной платы в набор раздельных SVG файлов  KiCAD (чтобы проще было совмещать слои позднее, выставляем галочку \"plot edge.cuts on all layers\" и для \"Drill marks\" выбираем \"Actual size\").</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/431/b12/82d/431b1282d10ea8e0e6741a0bc40ce3f8.png\" alt=\"\" title=\"\" width=\"767\" height=\"349\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/431/b12/82d/431b1282d10ea8e0e6741a0bc40ce3f8.png\"/><figcaption></figcaption></figure></li><li><p>Создаём новый файл в Inkscape.</p></li><li><p>Импортируем распечатанные выше SVG файлы по одному в отдельные слои файла, так чтобы они все легли точно один поверх другого. Нас интересуют слои: `Edge.Cuts` (граница платы + прорези для стабилизатора), `User.Eco1` (границы свичей), `User.Drawings` (границы кейкапов), `F.Courtyard` (положение процессора и коннектора ко второй половине) и слой `B.Mask` на котором положения фиксирующих отверстий. (совет: если убрать мышь за пределы окна  Inkscae и импортировать файлы через Ctrl+I, они все будут импортированы точно по центру экрана, а потому точно лягут один на другой :)</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/4fc/eaf/515/4fceaf515677dc057e337b399464bf3a.png\" alt=\"\" title=\"\" width=\"863\" height=\"703\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/4fc/eaf/515/4fceaf515677dc057e337b399464bf3a.png\"/><figcaption></figcaption></figure></li><li><p>Создаём новый слой, называем \"base\" и на нём:  </p><ul><li><p>рисуем круги (или копируем с импортированных слоёв) которые размещаем поверх посадочных отверстий в углах, затем преобразуем их в пути (выделить и нажать \"Path→Object to path\" либо Shift+Ctrl+C);</p></li><li><p>рисуем прямоугольник, конвертируем в путь, перемещаем угловые точки четко поверх печатной платы (это будет границей всего корпуса);</p></li><li><p>сдвигаем нижнюю границу прямоугольника вниз на 10см, чем создаём пространство для складывания запястий. (совет: чтобы переместить точку точно на X я просто выделял точку используя инструмент выделения, а затем на верхней панели редактировал значение Y или X на сколько нужно. Так же можно точно переместить точку в то же место что любая другая -- выбрать опорную точку, скопировать координату, выбрать целевую точку, вставить координату, если надо изменить на сколько надо, готово);</p></li><li><p>получаем вот такое: </p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e5b/3a8/4d7/e5b3a84d735e055b7015b73c733b8dfe.png\" alt=\"\" title=\"\" width=\"598\" height=\"841\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e5b/3a8/4d7/e5b3a84d735e055b7015b73c733b8dfe.png\"/><figcaption></figcaption></figure></li></ul></li><li><p>Создаём слой \"lower\", на котором:</p><ul><li><p>рисуем области, которые дадут пространство для деталей. Я решил просто сделать два прямоугольника, тем самым создав в центре дополнительное ребро жесткости для защиты от гневной печати :)</p></li><li><p>получаем вот такой слой: </p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/468/0a3/182/4680a3182979fef0bc49941bc58d54e1.png\" alt=\"\" title=\"\" width=\"607\" height=\"423\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/468/0a3/182/4680a3182979fef0bc49941bc58d54e1.png\"/><figcaption></figcaption></figure><p>Да, у слоя нет границы! Это потому, что для получения картины итогового нижнего слоя надо включить два: \"base\" и \"lower\", тогда будет правильный вид:</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b3a/b94/972/b3ab94972c614dc11ef0de5a8cbe961f.png\" alt=\"\" title=\"\" width=\"599\" height=\"679\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b3a/b94/972/b3ab94972c614dc11ef0de5a8cbe961f.png\"/><figcaption></figcaption></figure></li></ul></li><li><p>Создаём слой \"upper\", на котором:  </p><ul><li><p>рисуем область, которая даст поддержку крышке без давления на детали. Поскольку я разместил Пику в углу платы, а разъём на боку без какого либо пространства между ними, сделать одну деталь закрывающую угол не получается… Поэтому мне пришлось сделать копию рамки со слоя \"base\", \"выкусить\" угол чтоб получить плату формы \"ь\". Вероятно можно было бы сделать отдельно еще уголок, который просто вклеить потом, но я ленив.</p></li><li><p>Получаем такое: </p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ecf/68e/094/ecf68e0946be22f5fa58bf5ff2d88faf.png\" alt=\"\" title=\"\" width=\"600\" height=\"844\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ecf/68e/094/ecf68e0946be22f5fa58bf5ff2d88faf.png\"/><figcaption></figcaption></figure><p>Я унес 5 крепёжных отверстий на отдельный слой вместо \"base\", чтобы не получить лишний вырез в углу, но, скорее всего, это неважно -- всё равно лист вырезается из прямоугольника.</p></li></ul></li><li><p>Создаём новый слой \"cover\", на котором:  </p><ul><li><p>включаем видимость слоя с кейкапами и рисуем линии по их внешним границам, создавая замкнутые ломаные, а затем через `Path→Outset` раздвигаем их так что у нас будет зазор между кейкапами и крышкой клавиатуры когда кнопки будут нажиматься;</p></li><li><p>как альтернативный вариант, можно скопировать краницы свичей (не кейкапов) и сделать им всем `Outset`, получив крышку с индивидуальными прорезями под каждый свич, главное быть уверенными что крышка не помешает кейкапы нажимать (достаточно тонкая или капы без бортиков и проч);</p></li><li><p>у меня получилась такая крышка (включив \"base\" и \"mounting holes\"):</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/35b/c02/1be/35bc021beeb4152e172537d937bc1305.png\" alt=\"\" title=\"\" width=\"597\" height=\"673\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/35b/c02/1be/35bc021beeb4152e172537d937bc1305.png\"/><figcaption></figcaption></figure></li></ul></li><li><p>Не забываем сконвертировать все нарисованные объекты в пути.</p></li><li><p>Включаем все созданные слои, выделяем всё и задаём линиям правильную толщину и цвет. Конкретные требования зависят от сервиса где заказывать (некоторые хотят линии 0.1мм или 0.2мм, некоторые хотят 0.01мм, некоторые говорят что резка идет по черным линиям, другие говорят что режут по синим... эх) </p></li></ul><p>Когда всё готово, включаем видимость правильных комбинаций слоёв и сохраняем через \"Save As Copy\" в отдельные файлы правильного формата (я сохранял всё в \"Optimized SVG\", и это сработало, но опять же -- смотрим требования сервиса. Некоторые только хотят автокад, некоторые только SVG...), грузим файлы в сервис, оплачиваем, ждём.  </p><p>Поскольку я накосячил со стабилизаторами, которые не дотягиваются до платы, я добавил на неиспользуемые части резки адаптеры, чтобы подложить их под стабилизаторы, что позволит их подложить и поднять на те самые 3мм которых не хватает, и посмотреть как оно работает.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/83d/ae8/0a5/83dae80a50e73a161c72d5d9764ae9c5.png\" alt=\"\" title=\"\" width=\"602\" height=\"223\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/83d/ae8/0a5/83dae80a50e73a161c72d5d9764ae9c5.png\"/><figcaption></figcaption></figure><p>Заказал на <a href=\"https://www.sculpteo.com/de/\" rel=\"noopener noreferrer nofollow\"><u>Sculpteo</u></a> нижний и верхний слой для левой половины за $30. Заказал в четверг, в пятницу уже отправили, в понедельник они приехали.</p><p>Важно учитывать, что при заказе резки приедет лист чуть больше размером чем заказано с обрезкой. (Да, некоторые сервисы, вроде <a href=\"https://lasergist.com/\" rel=\"noopener noreferrer nofollow\"><u>lasergist</u></a>, пытаются переиспользовать материал и присылать только \"нужную\" часть, но это может хорошо работает со сталью -- но не очень с акрилом и деревом...)</p><p>Приезжающий лист выглядит как-то вот так (это крышка вырезанная из \"POM\"):</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/726/1c5/d28/7261c5d28726e07a360ab0a807fb921e.jpg\" alt=\"\" title=\"\" width=\"1416\" height=\"1480\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/726/1c5/d28/7261c5d28726e07a360ab0a807fb921e.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>К моему удивлению, и верх и низ легли идеально с первого раза! Но у меня не нашлось 2мм болтов. Почему? А я не знаю, почему я об этом не подумал. В ближайшем хозяйственном были только начиная от 3мм, зато нашлись шпильки в 2мм, которыми я и воспользовался. Попробовав и посмотрев я приклеил вырезанный кусок с верхнего слоя на двусторонний скотч сверху, а вырезанные снизу на низ, тем самым еще и задав небольшой отрицательный наклон. Вот что получилось:</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/ff0/574/74d/ff057474d68419483b72e14fcd8760ed.jpg\" alt=\"\" title=\"\" width=\"1672\" height=\"1254\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ff0/574/74d/ff057474d68419483b72e14fcd8760ed.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/99b/2cd/7c1/99b2cd7c1106f1aa32c9f81b9ccc8af6.jpg\" width=\"1494\" height=\"1403\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/99b/2cd/7c1/99b2cd7c1106f1aa32c9f81b9ccc8af6.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>К сожалению, изготовленные подкладки под стабилизаторы не подошли. Уж не знаю почему, но я их сделал такими же, как они были на плате, и ровно так же они не подошли. Зато я смог рассмотреть почему же они не подходят -- я же использовал готовые библиотечные модели... В общем, на купленных готовых кейкапах крепления сдвинуты (левая это купленная, правая отпечатанная):</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/cf3/746/8c7/cf37468c78d535427302b7736973c32a.jpg\" alt=\"\" title=\"\" width=\"1198\" height=\"220\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/cf3/746/8c7/cf37468c78d535427302b7736973c32a.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>И это очень даже разумно: если сдвинуть стабилизатор таким образом, его края не торчат за границы кейкапа. Так что это не ошибка на плате -- это просто неправильный стабилизатор и неправильная библиотека. Эх. Впрочем, те кейкапы, которые я пытаюсь напечатать, имеют центральное положение крепления, так что они должны бы работать с моделью на плате (почти, к ним всё равно потребуются переходники по толщине, как раз те, что я только что сделал...).</p><p>Что ж, раз уж подготовка вектора работает на ура, можно повторить процесс для правой половины и получить наконец клавиатуру, которую можно будет уже использовать. Я знаю, что надо два варианта суппортов (центрованные и сдвинутые), так что на правой я нарисовал и те и другие адаптеры, чтоб был запас.</p><p>Правая половина длиннее левой и изогнута, так что нет прямой линии по которой можно было бы проложить ребро жесткости. Пришлось вместо двух прямоугольников как на левой, изучить как рисовать кривые -- прокладывается прямая, затем включается инструмент \"Curve\" и им тянется за середину прямой чтобы превратить её в кривую Безье.</p><p>Для крышки на правой я решил попробовать одну большую область под блок клавиш в центре, чтобы посмотреть насколько это хуже чем прорези по одному на ряд, которые я сделал для левой половины.</p><p>В общем, заказал для правой половины нижний и верхний слои, чтобы убедиться что я не ошибся нигде с размерами. Верхний слой я заказал из МДФ, чтобы посмотреть что это за зверь. Опять всё было шустро -- заказано 22го, приехало 25го, сильно опережая график.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/71c/e5f/1d1/71ce5f1d1278939900aa89c88ba7eaca.jpg\" alt=\"\" title=\"\" width=\"1672\" height=\"1254\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/71c/e5f/1d1/71ce5f1d1278939900aa89c88ba7eaca.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>Главное открытие было -- не использовать МДФ. Ужасно воняет после резки. Неприятный на ощупь. Возможно после покраски им и можно будет пользоваться, вот только я не хочу красить :) Впрочем, детали подошли прекрасно, так что можно было собрать всё вместе и, наконец, опробовать в деле.</p><p>Итак, дополнительные открытия которые следует учесть для v2:</p><ul><li><p>область внизу клавиш не должна быть просто прямоугольником. Для левой половины левая часть должна иметь чуть больше пространства слева от клавиш. Что примечательно, я замечал эту проблему на множестве клавиатур которые я использовал (та же Sculpt прямо по границе тут, не всё плохо только потому, что контрол увеличен в размерах) и совершенно забыл, когда рисовал! В общем, где-то 2см надо добавить слева. Возможно будет ОК сделать клавиатуру в форме трапеции?</p></li><li><p>мне нужно чтобы полностью нажатая клавиша темного торчала над слоем крышки, но не сильно, и определённо не уходила ниже уровня крышки. Иначе я не могу нажать контрол как привык, стрелки просто ощущаются неприятно, а нажатие пробела боком большого пальца не всегда срабатывают.</p></li><li><p>поддержку под руку на правой половине надо заканчивать раньше, где-то в районе тех же 2см от контрола как на левой, оставляя блок стрелок без поддержки снизу -- поскольку когда нужны стрелки, я переношу руку вниз, и дотягиваюсь до стрелок кончиками пальцев -- поддержка только мешается, на неё рука не складывается.</p></li><li><p>пространство под руку внизу должно быть не дальше чем до конца ладони, иначе при отрицательном наклоне край начинает врезаться в руку в некоторых положениях. Так что в положении, когда сустав корня мизинца жмет на контрол, гороховидная кость должна лежать прямо на краю -- и так с обеими руками.</p></li></ul><p>С точки зрения удобства использования, я так же выяснил что для моего стиля печати самое важное для позиционирования это не выступы на f/j, а место куда складывать ладони! Поскольку половины не зафиксированы одна относительно другой и в процессе работы двигаются, просто складывать руки не глядя приводит к опечаткам. Так как бутерброд с только верхним слоем для меня слишком низкий, я использовал вырезанные средние части для прослойки и позиционирования рук, прикрепив их двусторонним скотчем. Это неплохо работает, но да, МДФ не пойдёт для верхнего слоя.</p><p>Я еще попробовал воспользоваться керамическими подставками от Nespresso чтобы пометить куда складывать руки. На удивление они очень приятны на ощупь, прикольно охлаждают ладони и неплохо смотрятся. Разумеется, чтобы разместить их нормально, в верхней крышке придётся сделать вырезы, иначе ладонь лежит слишком высоко. Но да, керамика выглядит функционально (главное только клавиатуру не ронять и не переворачивать её над камнями...)</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/109/c7a/1e0/109c7a1e044c973e2f5d9610987dd869.jpg\" width=\"3024\" height=\"4032\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/109/c7a/1e0/109c7a1e044c973e2f5d9610987dd869.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/0a9/06b/a0e/0a906ba0e0d64d21531cfa64634200da.jpg\" width=\"1672\" height=\"1254\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/0a9/06b/a0e/0a906ba0e0d64d21531cfa64634200da.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>Что еще выяснилось: акрил выглядит неплохо, но уж слишком глянцевый, а значит собирает на себя все отпечатки. И кожный жир. Да, это всё легко убрать, но нет, не очень приятно наблюдать их опять там через пару минут -- в общем, обычная проблема глянцевых поверхностей которые надо трогать. А еще акрил хрупкий. Да, заказанный лист скорее всего приедет без проблем (особенно если следовать инструкциям и все детали делать по ширине не меньше толщины листа) но всё равно его очень легко сломать.</p><p>После эксперимента с половинами бутербродов я заказал новый верхний слой (чтобы избавиться от МДФ) и две крышки – на левую и правую половины. Левая крышка с областями под ряды отдельно, правая крышка с одной большой областью в центре (и парой под Fn и проч). А еще заказал на пробу одну из них из фанеры.</p><p>Заказал 5го июня, приехало 9го. Что я могу сказать... Фанера это не дерево. Конечно я не ожидал что оно будет прямо уж совсем хорошо, но всё же я ожидал чего-то лучше. Чтобы пользоваться ею (учитывая, что руки на ней предполагают лежать всё время) потребуется обработка -- шлифовка от заноз и водоотталкивающая. Ну то есть опять надо красить. Или просто отполировать хотя бы, но это не спасёт от пота и она станет жутко выглядеть очень быстро.</p><p>Извлеченные уроки из этой итерации:</p><ul><li><p>Дерево требует постобработки. У Sculpteo нет такой опции, только резка.</p></li><li><p>Тонкие линии на акриле если и не сломаются (к слову: они мне написали письмо перед изготовлением, спросили понимаю ли я риски тонких линий), то точно потеряют форму от нагрева. Чтобы ребра не мешали жать на клавиши мне пришлось их подогреть зажигалкой и пододвинуть…<br/>![](case-thin-acryl.jpg)</p></li><li><p>Крышка с одной большой выемкой под все клавиши выглядит не оч. Просто не оч. Эх. См.ниже на фото.</p></li></ul><details class=\"spoiler\"><summary>Вот как собирается сендвич:</summary><div class=\"spoiler__content\"><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/274/397/594/2743975947bde50ff822243d82ed4f14.jpg\" width=\"1672\" height=\"1254\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/274/397/594/2743975947bde50ff822243d82ed4f14.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/6eb/8f0/afe/6eb8f0afe49fa930abb5806020e622ab.jpg\" width=\"4032\" height=\"3024\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/6eb/8f0/afe/6eb8f0afe49fa930abb5806020e622ab.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/4eb/a84/6cf/4eba846cfa129f5e7f96a39da92f33c8.jpg\" width=\"1672\" height=\"1254\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/4eb/a84/6cf/4eba846cfa129f5e7f96a39da92f33c8.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/2f1/141/9c6/2f11419c6ac7b01410e685d7b920ee82.jpg\" width=\"1672\" height=\"1254\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/2f1/141/9c6/2f11419c6ac7b01410e685d7b920ee82.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/918/355/3fb/9183553fbef626c09ee6593e349b85a2.jpg\" width=\"1672\" height=\"1254\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/918/355/3fb/9183553fbef626c09ee6593e349b85a2.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><figure class=\"\"><img src=\"https://habrastorage.org/r/w780q1/webt/g-/rq/gi/g-rqgifxq-1x-xkz5kbxdb3xlro.jpeg\" width=\"auto\" height=\"auto\" data-src=\"https://habrastorage.org/webt/g-/rq/gi/g-rqgifxq-1x-xkz5kbxdb3xlro.jpeg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p></p></div></details><p>Вот как выглядит последний вариант левой половины:</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/a78/0bc/9d4/a780bc9d49e923ffb54e1a42c2796fd0.jpg\" alt=\"\" title=\"\" width=\"1672\" height=\"1254\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a78/0bc/9d4/a780bc9d49e923ffb54e1a42c2796fd0.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>Всё, кажется, я закончил эксперименты с лазерной резкой. Ой! Нет, не закончил. У Sculpteo есть еще материал \"POM\" (полиформальдегид). Так как я сходу не нагуглил что де это за зверь, но утверждалось что стойкий, крепкий, а по фото выглядил матовым. Так что я сделал еще один заказ -- для левой половины \"POM natural\" 3мм, а для правой \"POM black\" 2мм -- чтобы посмотреть его в обоих цветах и поглядеть как себя ведёт тонкий материал, на случай, если я решу сделать следующую версию ультра тонкой.</p><p>Так вот, на ощупь и на глаз выглядит он так плохо, что я не хочу его даже ставить на пробу. Очень очень плохое ощущение \"дешевого пластика\". Слегка как мыльный? Скользкий? Что-то неприятное. Точно нет, так же как и MDF. Фото листа в начале статьи как раз \"натуральный\" POM, а вот как выглядит черный:</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/432/152/2b7/4321522b74c02ddb939bd98751681bb0.jpg\" alt=\"\" title=\"\" width=\"4080\" height=\"3072\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/432/152/2b7/4321522b74c02ddb939bd98751681bb0.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>Всё, вот теперь <strong>точно</strong> я перепробовал всё, что хотел для 1й версии клавиатуры. Как я уже писал в прошлых частях, очень важно останавливаться и списывать ошибки раньше в процессе, прекращая затраты на уже известную ошибку. Просто сейчас было дешевле провести эксперименты прямо на месте. Это также означает, что я не буду заканчивать работу над 3D печатью своих кейкапов до второй итерации, пока не закончу с новым вариантом корпуса для второго варианта. А сейчас опять перехожу на шаг 1 и начинаю тюнить раскладку.</p><p>Это еще не конец, продолжение следует!</p></div>'),
(5, '«Домашний компьютер» 1987 — моя первая компьютерная книжка ', '/ru/post/678542/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Помните ли вы свою первую детскую книгу о компьютерах? Ту, с которой всё началось, захватило, закрутило и не отпускает до сих пор. У меня такой книгой стала брошюра «Домашний компьютер» 1987 года издательства «Детская литература». Она до сих пор стоит у меня на полке — изрядно потрёпанная, но всё такая же яркая, занимательная и драгоценная.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/612/4de/870/6124de870c7cdc37f7b92f3d2f36aa1c.png\" width=\"886\" height=\"880\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/612/4de/870/6124de870c7cdc37f7b92f3d2f36aa1c.png\"/><figcaption></figcaption></figure><p>Потом, конечно, были и учебники по Бейсику и Паскалю, и Фигурнов, и «Архитектура IBM PC». Но началось всё с детской иллюстрированной книжки, переведённой с немецкого языка. Она была написана в 1984 году Рольфом Лобергом и Тео Лутцем. Перевод запоздал на 3 года, но в то время это всё равно было очень современное издание. Сейчас компьютерная литература может устаревать через несколько месяцев, а тогда сроки актуальности учебников могли исчисляться годами.</p><p>В детстве я жил на Васильевском острове в Ленинграде. На Среднем проспекте, через несколько кварталов от нашего дома, размещался книжный магазин «Недра». Он так назывался, потому что там продавали книги, которые относились в основном к горному делу. Видимо, он был открыт специально для студентов и преподавателей Горного института, который находился ещё дальше по проспекту, ближе к Гавани.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/693/f38/15d/693f3815d1c3c2619b7aee341c81bb40.png\" width=\"596\" height=\"617\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/693/f38/15d/693f3815d1c3c2619b7aee341c81bb40.png\"/><figcaption></figcaption></figure><p>Магазин был очень длинный и занимал почти весь первый этаж дома. В самом конце анфилады из залов, заполненных профессиональными учебниками и справочниками, располагался отдел детской и художественной литературы. В этом отделе мне больше всего нравилась заветная коробочка с брошюрами и малоформатными научно-популярными изданиями, стоящая на прилавке. Я быстро смекнул, что в ней обычно прячется всё самое интересное. Там-то во время очередного посещения магазина я и откопал книжицу под названием «Домашний компьютер».</p><p>Я тогда и помыслить не мог, что эта находка определит направление моей будущей профессиональной деятельности. Фактически именно с этой книги для меня начался путь в волшебный мир компьютерной техники.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a97/253/710/a972537102457e9582d0401ccdde0674.png\" width=\"924\" height=\"434\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a97/253/710/a972537102457e9582d0401ccdde0674.png\"/><figcaption></figcaption></figure><p>Магазин «Недра» в 90-е годы перепрофилировали в один из первых продуктовых магазинов с самообслуживанием. А книжки, определяющие судьбу, куда-то переехали.</p><p>Но вернёмся к книге. Посмотрим на её содержание... и ничего необычного не увидим. Сначала идут разделы с краткой историей компьютеров (естественно, с учётом возраста целевой аудитории), потом рассказ о применении ЭВМ в разных сферах нашей жизни. Основная часть книги содержит рассказ об архитектуре компьютера, периферийных устройствах и о программах. Все разделы, само собой, называются не так занудно, как я их описал.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/27f/ba8/f1e/27fba8f1ef4418ae5d1415ec6f5ee846.png\" width=\"789\" height=\"957\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/27f/ba8/f1e/27fba8f1ef4418ae5d1415ec6f5ee846.png\"/><figcaption></figcaption></figure><p>Сейчас таким содержанием никого не удивишь — по такому шаблону строятся сотни и тысячи детских книг и учебников о компьютерах. Но напомню, что оригинал книги издан в 1984 году. Давайте вспомним, что это был за год.</p><p>Процессор Intel 286 начали выпускать всего пару лет назад. Первая версия операционной системы MS DOS вышла <s>год</s> три года назад. Да и самой архитектуре IBM PC исполнилось всего <s>год</s> несколько лет. И всё это происходило не у нас, а в другом, далёком мире. У нас же компьютеры всё ещё оставались сугубо профессиональным инструментом инженеров и учёных.</p><p><strong>UPD:</strong> <em>Спасибо, поправил даты — память подвела :)</em></p><p>И тут в детской книге мы видим подробное описание всех атрибутов классической персоналки: операционная система, почти современная клавиатура (с боковым цифровым блоком и функциональными клавишами и клавишей Print Screen), курсор, ОЗУ и ПЗУ, цветной монитор, принтер (не только матричный, но и струйный!).</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f69/934/12b/f6993412b3d6d604e65c0faf0a8af779.png\" width=\"938\" height=\"598\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f69/934/12b/f6993412b3d6d604e65c0faf0a8af779.png\"/><figcaption></figcaption></figure><p>Есть в книге и целый раздел, посвящённый двоичной системе счисления и стандартным логическим операциям. Описаны основы адресации памяти, регистры, прерывания и ассемблер. В общем-то эти разделы вполне логично выглядят в учебнике по информатике, но детские издания о компьютерах «для среднего школьного возраста» такую информацию обычно в то время не содержали.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/afe/d7a/287/afed7a2873cc21582cd6a6049df39ac6.png\" width=\"949\" height=\"566\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/afe/d7a/287/afed7a2873cc21582cd6a6049df39ac6.png\"/><figcaption></figcaption></figure><p>Бо́льшую часть книги занимает почти полноценное описание языка программирования Бейсик. С разбором всех операторов и примером программы. Вскользь там упоминаются и другие «основные» языки того времени: Фортран, Кобол и АПЛ. Понятными и доступными словами рассказано, чем компилятор отличается от интерпретатора. Для ребёнка, который в принципе интересуется техникой, но практически ничего не знает о компьютерах, это чтение будет даже поинтереснее приключенческих романов!</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/8eb/2f6/4e2/8eb2f64e23245c110b43e0df51de09de.png\" width=\"802\" height=\"804\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/8eb/2f6/4e2/8eb2f64e23245c110b43e0df51de09de.png\"/><figcaption></figcaption></figure><p>С помощью этой замечательной книжки я научился программировать за несколько лет до того, как впервые «вживую» увидел компьютер. Детский мозг впитывает знания как губка, поэтому неудивительно, что через некоторое время я выучил Бейсик и все его основные команды. Гораздо позже, в 8 классе, впервые сев за «Искру», я почти сразу написал свою первую программу.</p><p>В самой школе у нас компьютеров не было. Но учебный план предусматривал практику, которая проходила в учреждении под названием УПК (это расшифровывается «Учебно-производственный комбинат»). Наш «комбинат» располагался напротив метро Василеостровская, в здании дореволюционной гимназии. Каждый мог выбрать себе специальность, в которой он хотел бы «попрактиковаться». Большинство мальчишек из нашего класса пошли на автодело. Я же, как типичный «нёрд» (не было тогда такого слова), выбрал себе предмет «Программирование» и впервые попал в настоящий компьютерный класс. Там-то мне и пригодились знания, почерпнутые из книжки «Домашний компьютер».</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/8ee/38d/d61/8ee38dd610a9a45951ecbadf4a0381ee.png\" width=\"503\" height=\"432\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/8ee/38d/d61/8ee38dd610a9a45951ecbadf4a0381ee.png\"/><figcaption></figcaption></figure><p>Отдельно хочу похвалить иллюстрации в этой книге. Обложка — полноцветная, с изображением нарисованного компьютера и всяческих периферийных устройств. Внутри иллюстрации чёрно-белые с добавлением оттенков бежевого цвета. На современный взгляд они, пожалуй, выглядят простовато. Но в детстве они показались мне просто замечательными.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/047/c6a/038/047c6a038ac2e5237d3100349cfabb66.png\" width=\"950\" height=\"629\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/047/c6a/038/047c6a038ac2e5237d3100349cfabb66.png\"/><figcaption></figcaption></figure><p>Напоследок приведу несколько цитат из книги. В 2022 году они нам кажутся забавными и удивительными. Но именно из-за таких вещей всегда интересно читать старые журналы и учебники. Мы с современных высот развития техники несколько снисходительно смотрим на те годы, а наши потомки так же удивлённо будут читать цитаты из книг нашего времени.</p><blockquote><p><em>Оперативная память объемом 2K — это очень-очень мало. Если же объём оперативной памяти 512K или больше, это хорошо, так как можно вводить в неё много данных и решать более сложные задачи. Оперативная память всегда больше постоянной.</em></p></blockquote><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b76/01e/7ed/b7601e7ed23ec03c15aad4f89fce8b9d.png\" width=\"1203\" height=\"950\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b76/01e/7ed/b7601e7ed23ec03c15aad4f89fce8b9d.png\"/><figcaption></figcaption></figure><blockquote><p><em>Со временем будут созданы самые разнообразные банки данных, и любой пользователь, где бы он ни жил, даже в так называемой провинции, в глуши, будет использовать в своей работе новейшие сведения, последние данные науки и техники, результаты экспериментов, произведённых буквально вчера. Правда, не надо думать, будто любой человек сможет получить какие угодно сведения, этого нет ни в одной стране мира.</em></p></blockquote><blockquote><p><em>Даже хороший специалист порой может запамятовать что-то, относящееся к его домашнему компьютеру. Выход прост: взять руководство по эксплуатации и внимательно прочитать его. Правда, всё, что там написано, должно быть абсолютно верно, без единой опечатки. Иначе такое руководство ни на что не годится. Да и сам компьютер тогда не сможет нормально работать. Так что до начала работы с компьютером первым делом надо как следует изучить его руководство по эксплуатации.</em></p></blockquote><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/7bd/db5/f14/7bddb5f14ca53861adf97045ed68f604.png\" width=\"910\" height=\"554\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/7bd/db5/f14/7bddb5f14ca53861adf97045ed68f604.png\"/><figcaption></figcaption></figure><blockquote><p><em>Записывать программы и данные рекомендуется на ленте, с которой предварительно стёрто всё, что было записано прежде. В своей записной книжке оператор должен заметить показания счётчика метража пленки в начале записи и в её конце, а также название записанной программы.</em></p></blockquote><blockquote><p><em>Многие программы проще переписать, чем сделать самому, ведь они в самом деле очень сложны. Конечно, любой, в чьём распоряжении находится компьютер, должен был бы научиться сам составлять программы, пусть поначалу совсем несложные.</em></p></blockquote><blockquote><p><em>Важно уметь программировать самому. В недалёком будущем многие школьники будут легко обгонять в этом взрослых. Основы программирования уже вошли в школьные программы. Конечно, для составления программы нужно хорошо знать, что именно требуется от ЭВМ. И помните: чем сложнее задача, которую вы хотите задать машине, тем труднее её запрограммировать.</em></p></blockquote><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a53/d70/bea/a53d70beacddbc5df647b4124ecabccf.png\" width=\"944\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a53/d70/bea/a53d70beacddbc5df647b4124ecabccf.png\"/><figcaption></figcaption></figure><blockquote><p><em>Очень важно, чтобы в микроЭВМ была приложена инструкция (или руководство), где программы были бы напечатаны прямо в том виде, в каком их надо вводить в машину. Там же есть наборы данных, позволяющих проверить, заработает ли программа и не допущено ли при её вводе с клавиатуры каких- либо ошибок. Большие программы или пакеты программ нередко записывают и поставляют пользователю прямо на дискетах или кассетах. Такие программы, однако, дороги, порой очень дороги.</em></p></blockquote><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/27c/2b1/ca9/27c2b1ca96aa985b4da9282ae72f9c9e.png\" width=\"937\" height=\"434\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/27c/2b1/ca9/27c2b1ca96aa985b4da9282ae72f9c9e.png\"/><figcaption></figcaption></figure><blockquote><p><em>Программа хороша только тогда, когда она правильно документирована, когда все её особенности аккуратно описаны. У программиста должна быть картотека, тетрадь или скоросшиватель. В них для каждой программы должны быть отмечены соответствующие параметры. Какой объём памяти потребуется? Какой язык программирования использован? Когда была создана программа? Кто её автор? Обязательно нужно указать тестовые данные; полезны и сведения о продолжительности работы программы. Небрежно сделанные программы лучше просто-напросто выбросить, иначе зря будет потрачено много времени на обнаружение и исправление ошибок в них. А если вам передали программу без сопровождающей документации, то это по меньшей мере невежливо!</em></p></blockquote><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/269/a0d/a65/269a0da659e6a4601b86ebc64c75639a.png\" width=\"953\" height=\"576\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/269/a0d/a65/269a0da659e6a4601b86ebc64c75639a.png\"/><figcaption></figcaption></figure><p>Да, сегодня многие цитаты из этой книги выглядят наивными. Но это нисколько не умаляет её достоинств. И вообще, некоторые из этих цитат надо бы распечатать и повесить на стенку в рамочке.</p><p>Книга «Домашний компьютер» стала для меня проводником в компьютерный мир будущего. Через год у нас же на Васильевском острове в Гавани прошла знаменитая выставка «Информатика в жизни США». На ней раздавали большой полноцветный проспект о развитии заокеанской компьютерной техники. После этого компьютеры окончательно стали основным занятием моей жизни.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/fde/cad/091/fdecad09141dfe5f21750d798a2c3ab0.png\" width=\"648\" height=\"859\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/fde/cad/091/fdecad09141dfe5f21750d798a2c3ab0.png\"/><figcaption></figcaption></figure><p>Ну а книжка «Домашний компьютер» до сих пор стоит на моей полке — как самый первый друг и наставник.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e03/32a/3d5/e0332a3d5e69f0fec63ba8e8db583087.png\" width=\"557\" height=\"469\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e03/32a/3d5/e0332a3d5e69f0fec63ba8e8db583087.png\"/><figcaption></figcaption></figure><p></p></div>');
INSERT INTO `articles` (`id`, `name`, `link`, `text`) VALUES
(6, 'Навигация автономных систем ', '/ru/company/timeweb/blog/677964/', '<div xmlns=\"http://www.w3.org/1999/xhtml\">Роботы повсюду, они проникли во многие сферы деятельности. Это неудивительно – весь мир сейчас взял курс на автоматизацию процессов, согласно программе «Индустрия 4.0». Роботов можно увидеть в качестве автономных средств пожаротушения; на складах, послушно перетягивающих грузы; на тротуарах, везущих к вам обед или посылку.<br/>  <br/>  <img src=\"https://habrastorage.org/r/w780q1/webt/0h/i8/qp/0hi8qp72am0jqurtqxbnzbspyhe.jpeg\" alt=\"image\" data-src=\"https://habrastorage.org/webt/0h/i8/qp/0hi8qp72am0jqurtqxbnzbspyhe.jpeg\" data-blurred=\"true\"/><br/>  <a name=\"habracut\"></a><br/>  Многие из этих работ просто невозможны без отлаженной системы навигации и ориентации в пространстве. При этом, можно однозначно сказать, что данная задача существенно отличается, в зависимости от того, в помещении ли находится место действия робота. <br/>  Если говорить о промышленных объектах, то можно заметить, что здесь наблюдается упрощение задачи. В этом случае, можно разместить некоторое количество маяков, по которым транспортное средство может ориентироваться. Это могут быть светоотражающие метки, линии, разметки на полу, а также магниты. Еще одним элегантным решением, которое может помочь в вопросах перемещения в пространстве транспортного робота является кабель, который вмонтирован в пол здания. Это может решить еще одну проблему – не только помочь сориентироваться роботу, но и подать на него заряд с помощью электромагнитной индукции (рис 1).<br/>  <br/>  <img src=\"https://habrastorage.org/r/w1560/webt/uc/9-/2s/uc9-2suda1m8-8fwezlsjjfn4ea.png\" alt=\"image\" data-src=\"https://habrastorage.org/webt/uc/9-/2s/uc9-2suda1m8-8fwezlsjjfn4ea.png\"/><br/>  <i>Рис. 1. Принцип беспроводной зарядки.</i><br/>  <br/>  В частности, подобные системы применяются на заводах и некоторых складах в Германии. Такое решение увеличивает автономность системы в пределах помещения, так как ее маршрут можно проложить таким образом, чтобы его большой отрезок проходил вдоль силового кабеля в течении времени, достаточной для подзарядки. <br/>  <br/>  В условиях помещения роботу часто не нужно знать свое точное положение относительно общего пространства, так как его работа ограничена рамками стен. То есть, глобальные координаты не требуются, нужно только положение прочих объектов, которые находятся в помещении, так как они могут являться препятствиями и помешать выполнению возложенной на робота задачи. <br/>  <br/>  Хуже того, часть препятствий может изменять свое положение. Здесь и передвижение людей, и каких-либо транспортных средств, а также появление новых предметов в отсутствии робота или же в процессе прохождения им маршрута.<br/>  <br/>  Наличие динамической среды существенно осложняет процессы навигации, здесь недостаточно единожды загрузить карту и позволить роботу работать по ней, так как это может привести к помехам в выполнении задания или даже несчастному случаю. По этой причине на технику приходится устанавливать дополнительное оборудование, которое могло бы эффективно распознавать препятствия, возникающие на пути, а также обучать ее находить максимально удобный способ обхода препятствия.<br/>  <br/>  И здесь, опять же, нет единого подхода к решению этой проблемы – в одном случае она упрощается, когда препятствие статично. В другом случае, когда помеха не статична, сложность вычислений существенно возрастает по причине необходимости просчитывать все возможные пути передвижения помехи. Данная задача усложняется, так что часть алгоритмов предполагает решение этой проблемы следующим образом – замереть и ждать, пока препятствие само покинет поле деятельности. <br/>  <br/>  По этому механизму работают, в частности, транспортные роботы на автозаводах, которые в случае с обнаружением на своем пути движение становятся на месте и издают звуковой сигнал, чтобы помеха быстрее ушла с предполагаемого маршрута. В ином случае, на базе анализа отрезка пути объекта двигающегося в поле зрения, система просчитывает возможные варианты и старается под них подстроиться. <br/>  <br/>  В помещении данная задача не так критична, но вне его, когда остановка часто может создать дополнительную угрозу для прочих перемещающихся объектов, она стоит довольно остро и часто является одним из краеугольных камней навигации автопилотов и помощников водителя с разной степенью автономности. Здесь и большая скорость объектов, и их хаотичность ввиду их количества. Проблемы весьма существенны, так как прочие участники движения могут сами создать опасную ситуацию, с вовлечением автономного устройства. <br/>  <br/>  И тут проблема навигации может принять не только физическую, чисто прикладную составляющую, но и морально-этическую, так как часто на дорогах может сложиться ситуация, когда выхода без потерь не будет. Тут можно будет увидеть дилемму вагонетки во всей красе, так как выбор может из следующих вариаций: врезаться в автомобиль, в котором передвигается семья, или же, избежав столкновения, влететь на остановку, на которой ждут автобуса люди. Эта проблема, в достаточной степени, замедляет существенное развитие автопилотов, так как встает вопрос, кто будет отвечать за ущерб, нанесенный транспортным средством, двигающимся автономно. Пока что не существует и развитого правового регулирования. Поэтому навигация автономных технических средств на дорогах общего пользования на постоянной основе невозможна. <br/>  <br/>  В случае с роботами, которые работают в помещении, вопрос навигации является довольно хорошо изученным. <br/>  <br/>  В частности, для решения этой проблемы используются лидары, которые сейчас способны не только обнаруживать объекты в зоне работы системы, но и помогать контролировать скорость объекта, для лучшего маневрирования. Кроме того, они же могут помочь выбрать оптимальное место для установки и проложить наиболее корректный маршрут, в текущих условиях. <br/>  Постепенное развитие процесса навигации позволило пройти путь от проводов, до практически полной автономности (ограниченной только мощностью батареи), обеспеченной лидарами, которые могут работать в диапазоне 360⁰. Здесь возможны различные варианты, в зависимости от сложности конструкции. Один из возможных вариантов – использование отражателей, что действительно просто и не требует значительных технических ухищрений. Но, такой подход приносит и дополнительные ограничения – отражатели должны быть видны, иначе система может потерять понимание своего положения в пространстве и сбиться с курса. Это касается и другого метода навигации, когда робот ориентируется посредством видеокамер, направленных на потолок и фиксирующих наличие источников света. <br/>  <br/>  Лидары сейчас являются одним из самых распространённых компонентов для решения проблемы навигации. Они проделали действительно серьезный путь с начала века – ранее они занимали довольно большую площадь и не обладали существенным диапазоном действия, тогда как сейчас он может достигать двухсот метров, что перекрывает потребности для работы внутри помещений. Улучшилась частота испускаемого импульса и точность обработки полученных сигналов. Эти сигналы помогают составлять план местности, которая окружает автономную систему, что позволяет получить представление о положении объектов в пространстве. Они поступают неравномерно, так как встречают преграду на пути, что по их возвращении позволяет создать карту пространства в конкретный момент времени, по которой может двигаться робот. Получить представление о том, как именно робот «видит» окружающее пространство можно ниже (рис. 2).<br/>   <br/>  <img src=\"https://habrastorage.org/r/w1560/webt/uc/ss/gy/ucssgyxzw88hyelq7ii7wkgoldc.png\" alt=\"image\" data-src=\"https://habrastorage.org/webt/uc/ss/gy/ucssgyxzw88hyelq7ii7wkgoldc.png\"/><br/>  <i>Рис 2. Один из возможных вариантов представление данных с лидара.</i><br/>  <br/>  Лидар действительно удобен, он имеет ряд преимуществ по сравнению с такими способами, как стереовидение, одометрия или триангуляция. Но иногда эти методы применяются совместно, с целью исключения возможной ошибки в построении маршрута. Например, даже дорогие лидары могут работать с контрольными точками, в виде отражателей, для того чтобы скорректировать маршрут в процессе продвижения по нему. Это критически важно, если речь идет о перемещении на оживленном складе, где помимо стационарных препятствий присутствуют движущиеся объекты или даже другие роботы, что характерно для многих складских систем Китая, где часто роботы объединены в единую систему, представляющую собой рой, неустанно передвигающийся между рядов (рис. 3).<br/>  <br/>  <img src=\"https://habrastorage.org/r/w1560/webt/gc/bc/ck/gcbcck7tlppmdhrrk0xn_lpkjbu.png\" alt=\"image\" data-src=\"https://habrastorage.org/webt/gc/bc/ck/gcbcck7tlppmdhrrk0xn_lpkjbu.png\"/><br/>  <i>Рис. 3. Складские роботы компании Alibaba</i><br/>  <br/>  Естественно, количество роботов на маршруте существенно осложняет задачу навигации, но и ее сейчас удается преодолеть, при помощи развития вычислительных мощностей. Также стало возможным многоуровневое перемещение складских систем, включая перемещение по рядам и в вертикальном измерении. <br/>  <br/>  Технический прогресс значительно увеличил доступность этих систем, так что их можно использовать для решения проблем во множестве ситуаций даже при несколько ограниченном бюджете. <br/>  Существующие системы часто используют метод навигации, называемый SLAM (simultaneous localization and mapping). Он предполагает одновременную локализацию и построение карты, что решает проблему перемещения даже в неизвестном пространстве, так как позволяет создать карту помещения в процессе движения, чего ранее не было достигнуто. Но метод не идеален, возможна ошибка перемещения, которая накапливается по ходы выполнения задачи. Сейчас система навигации стала доступна в значительной степени, так как многие из разработок имеют открытый статус и доступны для ознакомления. <br/>  <br/>  Существуют различные библиотеки с принципиальными алгоритмами работы навигационных систем, как и движения автономных комплексов. Здесь можно увидеть, как чисто теоретические изыскания, позволяющие создать эффективные математические модели <a href=\"https://exponenta.ru/events/navigaciya-mobilnyh-robotov\">(MathLab)</a>, так и адаптированные под решение практических задач, в частности, инструментарии навигации роботов Университета Карнеги-Меллона <a href=\"http://carmen.sourceforge.net/intro.html\">(CARMEN)</a> и Инструментарий программирования мобильных роботов <a href=\"https://docs.mrpt.org/reference/latest/download-mrpt.html\">(MRPT)</a>. <br/>  <br/>  SLAM наиболее распространённый способ навигации, но не единственный. Часто его использование применяют с одометрией или же ультразвуковыми датчиками, так как можно столкнуться с рядом ошибок. В частности, если говорить о перемещении по складу, то робот может не понять, что он вернулся именно в ту точку, с которой отправился. Так же может произойти такая ситуация, когда контуры объектов не замыкаются, так что робот не может найти идеальную траекторию, чтобы их обойти. Это может быть сопряжено с задержкой при движении, а также со столкновением, особенно если объект неоднозначно отражает лазерные лучи. <br/>  <br/>  Таким образом, проблема навигации до сих пор остается действительно важной и требует дальнейшего исследования и комплексного подхода, так как цена ошибки может быть довольно большой, а существующие системы не всегда могут уверенно справляться со сложными ситуациями. В частности, подобное привело к осмысленному отказу от лидаров в TESLA, где отдали предпочтение системам компьютерного зрения с помощью видеокамер. Развитие продолжается, возможно, с появлением более совершенного искусственного интеллекта и более эффективных нейросетей, а также закрытием пробелов в законодательстве, можно ожидать появление полностью автономных систем и на дорогах.<br/>  <br/>  <a href=\"https://cloud.timeweb.com/vds-promo-8-rub?utm_source=habr&amp;utm_medium=blog_1560_476&amp;utm_campaign=habr&amp;utm_content=1560_476\"><img src=\"https://habrastorage.org/r/w1560/webt/co/e2/kh/coe2kha8u8_pypip-2k3wk3ppa0.png\" data-src=\"https://habrastorage.org/webt/co/e2/kh/coe2kha8u8_pypip-2k3wk3ppa0.png\"/></a></div>'),
(7, 'Кремниевые долины Бразилии: не только самба, кофе и фавелы ', '/ru/company/ruvds/blog/678416/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><a href=\"https://habr.com/ru/company/ruvds/blog/523004/\"><div style=\"text-align:center;\"><img src=\"https://habrastorage.org/r/w780q1/webt/ym/i8/yf/ymi8yfd1v_jcpjdqssxrzhl9gmq.jpeg\" data-src=\"https://habrastorage.org/webt/ym/i8/yf/ymi8yfd1v_jcpjdqssxrzhl9gmq.jpeg\" data-blurred=\"true\"/></div></a><br/>  У большинства из нас Бразилия ассоциируется с чем угодно, но не с высокими технологиями и IT. Футбол, зажигательная самба, бескрайние леса Амазонки, солнечные пляжи и жуткие фавелы Рио, кофе и сахар — примерно такие стереотипные представления о самой большой португалоязычной стране бытуют в остальном мире. Естественно, они возникли не на пустом месте. <br/>  <br/>  Однако современная Бразилия — это ещё и страна стартапов, технологий и «единорогов». По состоянию на 2022 год по числу последних (17) она находится на девятом месте в мире, уступая лишь колоссам США, КНР и Индии, а также давно и прочно развитым Великобритании, Германии, Франции, Израилю и Канаде. По числу «единорогов» Бразилия опережает даже Южную Корею с Японией и Гонконгом.<a name=\"habracut\"></a><br/>  <br/>  <img src=\"https://habrastorage.org/r/w1560/webt/ib/jk/mj/ibjkmjfkset8snhciy3ccfqpae0.png\" data-src=\"https://habrastorage.org/webt/ib/jk/mj/ibjkmjfkset8snhciy3ccfqpae0.png\"/><br/>  <br/>  В общем-то, недооценивать Бразилию в техническом плане не стоило и раньше. Достаточно сказать, что в 70-е и 80-е годы эта страна развивала секретную ядерную программу, а по современным оценкам способна начать производство собственного атомного оружия в течение трёх лет с момента принятия политического решения. Страна обладает космическим агентством и космодромом в Алькантаре, разрабатывает на основе уже отработанных ракет для выведения спутников целое семейство новых ракет-носителей вплоть до тяжёлого класса, а в конце 2021 года испытала гиперзвуковое устройство 14-X. <br/>  <br/>  Чаще всего понятие «бразильской кремниевой долины» связывают с городом Кампинас, лежащим в сотне километров к северу от мегаполиса Сан-Паулу: крупнейшего города не только Бразилии, но и всего южного полушария планеты. Кампинас — «миллионник» с давней историей экономического процветания. Он возник как перевалочный пункт на пути авантюристов-бандейрантов от Сан-Паулу в загадочные глубины континента в конце XVIII века, и уже к началу следующего столетия превратился в сердце бурно развивавшегося сельскохозяйственного региона. Через Кампинас к побережью везли кофе, хлопок и сахарный тростник с окрестных фазенд, а обратно в город тёк неудержимый поток денег. Уже к концу XIX века Кампинас стал одним из самых богатых и развитых в стране, если не на континенте — и, помимо прочего, это выразилось в развитии образовательных учреждений. А в 1938 году его связал с Сан-Паулу первый хайвей Бразилии, шоссе Аньянгуэра, по сей день являющееся самой оживлённой автотрассой страны. <br/>  <br/>  <img src=\"https://habrastorage.org/r/w780q1/webt/bc/sx/py/bcsxpyas762bib2jr3beetxdwia.jpeg\" data-src=\"https://habrastorage.org/webt/bc/sx/py/bcsxpyas762bib2jr3beetxdwia.jpeg\" data-blurred=\"true\"/><br/>  <br/>  В ХХ столетии Кампинас из сердца процветающей аграрной провинции превратился в важный промышленный центр: здесь появились предприятия нефтехимии, автомобильной, текстильной, химической и пищевой промышленности. А в начале 60-х годов уже имевшийся задел в области образования стал основой для преобразования Кампинаса ещё и в важный образовательный центр. <br/>  <br/>  В 1966 году в районе Барау Жеральду начал работу Университет Кампинаса, также известный как Unicamp: первое высшее учебное заведение страны, созданное «с нуля» как комплексный проект для образовательных и исследовательских целей. Поначалу специализацией «Уникампа» были медицина и биология, особенно актуальные в тропическом штате с множеством иммигрантов из отнюдь не тропической Европы. Уже в 1969 году в структуре университета возник технический факультет, а при факультете математики, статистики и вычислительной техники появилась степень бакалавра в области вычислительной техники. В последующие пару десятков лет «Уникамп» превратился в один из важнейших и сильнейших центров технического образования на южноамериканском континенте — если не попросту лучший. <br/>  <br/>  <img src=\"https://habrastorage.org/r/w780q1/webt/ej/fr/3i/ejfr3i5pfymyqnfhbtqdfsinlsk.jpeg\" data-src=\"https://habrastorage.org/webt/ej/fr/3i/ejfr3i5pfymyqnfhbtqdfsinlsk.jpeg\" data-blurred=\"true\"/><br/>  <br/>  Ныне университет Кампинаса уверенно занимает вторую позицию в рейтинге вузов Латинской Америки после соседей из университета Сан-Паулу, а по объёмам исследовательской работы и количеству патентов превосходит «старшего брата». Неудивительно, что именно «Уникамп» стал сердцем первой «кремниевой долины» Бразилии и всей Южной Америки. В отличие от китайского <a href=\"https://habr.com/ru/company/ruvds/blog/673284/\">Чжунгуаньцунь </a> и индийского <a href=\"https://habr.com/ru/company/ruvds/blog/675916/\">Бангалора </a>, аналог «кремниевой долины» в Кампинасе не был сознательным проектом. <br/>  <br/>  Просто в 90-е годы на волне стремительного развития цифровых технологий оказалось, что Кампинас с его «Уникампом» и другими центрами технического образования и НИЦ является лучшим местом как для развития бразильских цифровых стартапов, так и для «входа» в огромную страну с перспективным рынком корпораций калифорнийской Долины (которых, впрочем, по строгому бразильскому законодательству обязывают работать только через местные юридические лица). <br/>  <br/>  В Кампинас, прежде всего в окрестностях университета и района Барау Жеральду, стали один за другим возникать офисы и центры разработки IBM, Dell, Motorola, NXP, Lucent, Nortel, Compaq, Celestica, Samsung, Alcatel, Bosch, 3M, Texas Instruments, CI&amp;T and Daitan и других компаний. Стала формироваться благоприятная среда для стартапов. Уже к концу нулевых годов в городе и рядом с ним насчитывалось восемь технопарков и высокотехнологичных бизнес-инкубаторов: CIATEC I and II, Softex, TechnoPark, InCamp, Polis, TechTown, Industrial Park of Campinas и другие. При факультетах и школах уже на стадии обучения можно попробовать свои силы в работе по несложным задачам по заказу разнообразных компаний. <br/>  <br/>  <img src=\"https://habrastorage.org/r/w780q1/webt/oq/px/j5/oqpxj5k34tfrccksihvc5ujhap4.jpeg\" data-src=\"https://habrastorage.org/webt/oq/px/j5/oqpxj5k34tfrccksihvc5ujhap4.jpeg\" data-blurred=\"true\"/><br/>  <br/>  Но не Кампинасом единым живёт IT-сфера Бразилии. По-настоящему бум технопарков и стартапов охватил страну в последние пять-семь лет. Если в нулевые и в начале десятых годов на звание «кремниевой долины Бразилии» помимо Кампинаса претендовали мегаполис Сан-Паулу и город Белу-Оризонти к северу от Рио, более известный за свою роль в биомедицинских разработках, то в конце 2010-х годов список бразильских «долин» пополнился ещё несколькими названиями. Технопарки и инкубаторы для стартапов стали возникать почти по всем прибрежным регионам страны, от почти экваториального Ресифи до «бразильского Сан-Франциско», Флорианаполиса далеко к югу от Сан-Паулу. <br/>  <br/>  В городе Салвадор-да-Баия с преимущественно чернокожим населением, первой столице страны, родине танца самба и боевого искусства капоэйра, появилось даже понятие «чёрной кремниевой долины» вокруг бизнес-акселератора Vale do Dendê: проект помогает запустить стартапы в сфере IT даже малообеспеченным обитателям фавел, и достаточно небезуспешно: почти все из 90 компаний за три первых года работы проекта показали двузначный рост. <br/>  <br/>  <img src=\"https://habrastorage.org/r/w780q1/webt/m2/uk/hs/m2ukhsisql1tfbworcho54e7x68.jpeg\" data-src=\"https://habrastorage.org/webt/m2/uk/hs/m2ukhsisql1tfbworcho54e7x68.jpeg\" data-blurred=\"true\"/><br/>  <br/>  Важным претендентом на звание «бразильской кремниевой долины» стал Флорианополис, известный в числе прочего своим мостом Hercílio Luz. Мостом сходство с Фриско не ограничивается: здесь работают более 600 IT-компаний, город известен очень благоприятным деловым климатом, в том числе для стартапов, инновационными центрами и инкубаторами, а доходы от цифровой сферы уже опередили в нём традиционные доходы от туризма. <br/>  <br/>  <img src=\"https://habrastorage.org/r/w1560/webt/3g/xl/bp/3gxlbpohmqi85nsoltlbo2vhrse.png\" data-src=\"https://habrastorage.org/webt/3g/xl/bp/3gxlbpohmqi85nsoltlbo2vhrse.png\"/><br/>  <br/>  Ну и нельзя обойти упоминанием мегаполис Сан-Паулу, где сосредоточены около трети всех айти-компаний Бразилии. Что неудивительно: двенадцатимиллионный город с населением заметно богаче и образованнее набитого фавелами Рио-де-Жанейро по определению создаёт массу возможностей для профессионального развития и трудоустройства, в том числе в IT. Показательно и то, что 12 из 17 «единорогов» Бразилии зарегистрированы именно в Сан-Паулу — хотя в целом город можно назвать «кремниевой долиной» не больше, чем Москву. <br/>  <br/>  Одноимённый штат, где находится и Кампинас, обеспечивает по данным на январь 2022 года около половины всех доходов национального IT-сектора. Да и по-настоящему качественное образование в этой сфере, как говорят, в стране дают только четыре вуза в Сан-Паулу и Кампинасе. <br/>  <br/>  В общем, сегодня бразильская IT-сфера весьма динамична: только компаний, работающих в цифровой сфере, к началу этого года насчитывалось более 420 тысяч (среди которых, впрочем, более половины представляют собой местный аналог индивидуального предпринимателя или самозанятого, без чего фриланс по бразильским законам нелегален). Десять лет тому назад таких было всего лишь немногим больше 8 тысяч. Большая часть граждан страны уже вовсю погружены во всемирную сеть и её сервисы, что создаёт массу возможностей и для стартапов, и для национальных «игроков», и для мастодонтов глобального цифрового рынка. Не случайно в Бразилии уже 17 «единорогов», а спрос на айтишников высок — особенно после коронавирусных самоизоляций, подстегнувших и без того быстрорастущую цифровую сферу. По состоянию на январь 2022 года IT-сфера обеспечивала более 5,6% ВВП страны, и этот показатель имеет тенденцию к дальнейшему росту. <br/>  <br/>  <div style=\"text-align:center;\"><img src=\"https://habrastorage.org/r/w780q1/files/5ef/7d6/b45/5ef7d6b451a34af3963fb9258f7fa1f1.jpg\" data-src=\"https://habrastorage.org/files/5ef/7d6/b45/5ef7d6b451a34af3963fb9258f7fa1f1.jpg\" data-blurred=\"true\"/></div><i><font color=\"#999999\">«У нас не хватает квалифицированных IT-кадров! Эй, какой же ты специалист, если не можешь даже вафельницу починить?»</font></i><br/>  <br/>  Однако, в отличие от многих других стран, бразильские компании не слишком интересуются наймом специалистов из-за рубежа: собственная образовательная система и IT-сфера «производят» их в пока что недостаточном, но растущем количестве. Зато юридически в несколько зарегулированной бюрократической системе Бразилии нанять иностранца без особой надобности для компании представляет собой изрядный квест. Проще пока что найти «дома», или, на худой конец, в соседних испаноязычных странах с более-менее приличным техническим образованием: Аргентине, Чили, Уругвае. Кроме того, из-за низкого курса бразильского реала зарплаты в бразильском IT выглядят довольно грустно на фоне европейских и американских. <br/>  <br/>  Хотя по мере дальнейшего развития этой сферы, возможно, страна и решит открыть свои двери для IT-иммиграции шире, создав для этого более удобные условия для иммигрантов и работодателей. Ведь с собственно IT-сферой у них вполне получилось.<br/>  <br/>  <h3><font color=\"#3AC1EF\">Предыдущие материалы:</font></h3><br/>  <ul>  <li><a href=\"https://habr.com/ru/company/ruvds/blog/669520/\">Как и почему в Калифорнии появилась Кремниевая долина?</a></li>  <li><a href=\"https://habr.com/ru/company/ruvds/blog/673284/\">Чжунгуаньцунь: как выглядит и как родилась «кремниевая долина» КНР</a></li>  <li><a href=\"https://habr.com/ru/company/ruvds/blog/675916/\">Бангалор: «кремниевое плато» и столица мирового аутсорсинга</a></li>  <li><a href=\"https://habr.com/ru/company/ruvds/blog/677266/\">Кремниевое вади: как Израиль стал одним из центров глобального IT</a></li>  </ul><br/>  <a href=\"http://ruvds.com/ru-rub?utm_source=habr&amp;utm_medium=article&amp;utm_campaign=erwinmal&amp;utm_content=kremnievye_doliny_brazilii:_ne_tolko_samba,_kofe_i_favely\"><img src=\"https://habrastorage.org/r/w1560/webt/sz/7j/pf/sz7jpfj8i1pa6ocj-eia09dev4q.png\" data-src=\"https://habrastorage.org/webt/sz/7j/pf/sz7jpfj8i1pa6ocj-eia09dev4q.png\"/></a></div>'),
(8, 'Симулятор электронных схем Qucs-S снова жив ', '/ru/post/678526/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Qucs-S является программой с открытым исходным кодом для моделирования электронных схем. Qucs-S кроссплатформенный (поддерживаются Linux, Windows и FreeBSD), написан на С++ с использованием набора библиотек Qt и разрабатывается полностью в частном порядке (в отличие, например от KiCAD, который имеет спонсора в лице CERN). В феврале этого года проект восстал из мёртвых и вышел релиз 0.0.23. Главным новшеством версии 0.0.23 было то, что программа теперь портирована на Qt5, чем обеспечена собираемость на современных дистрибутивах Linux. Актуальным релизом на текущий момент является 0.0.24 <a href=\"https://github.com/ra3xdh/qucs_s/releases/tag/0.0.24\" rel=\"nofollow noopener noreferrer\">https://github.com/ra3xdh/qucs_s/releases/tag/0.0.24</a>, в котором добавлено несколько новых видов моделирования. Далее будут рассмотрены основные возможности программы и показано как в Qucs-S смоделировать схему.</p><br/>  <p><img src=\"https://habrastorage.org/r/w1560/webt/4g/7z/zx/4g7zzxmxcv4nkxcqubgmrihdqre.png\" data-src=\"https://habrastorage.org/webt/4g/7z/zx/4g7zzxmxcv4nkxcqubgmrihdqre.png\"/></p><a name=\"habracut\"></a><br/>  <h1 id=\"istoriya-razrabotki\">История разработки</h1><br/>  <p>Qucs-S является форком проекта Qucs, который начали разрабатывать немцы Stefan Jahn и Michael Margraf в 2003 году. В настоящее время материнский проект практически неактивен и последний релиз был в 2017 году. Изначально Qucs поставлялся со своим собственным движком моделирования, нацеленным более на анализ ВЧ схем в частотной области. Этот движок имел серьёзные проблемы со сходимостью при моделировании во временной области и был несовместим со SPICE, что не позволяло напрямую применять модели электронных компонентов, распространяемые производителями.</p><br/>  <p>В 2014 году я начал разработку набора патчей, который бы позволял подключать к Qucs в качестве движка открытый Ngspice. В итоге эта разработка привела к созданию форка Qucs-S (Qucs with SPICE). В 2017-2020 годах вышло три релиза Qucs-S, последние из которых были корректирующими, проект был скорее мёртв. В этом году я провёл ритуал некромантии, портировал Qucs-S на Qt5, и тем самым возвратил программу к жизни.</p><br/>  <p>Про основы работы в Qucs и про Qucs-S рассказывают мои предыдущие статьи:</p><br/>  <ul>  <li>Qucs — open-source САПР для моделирования электронных схем <a href=\"https://habr.com/ru/post/248005/\">https://habr.com/ru/post/248005/</a></li>  <li>Новый кандидат в релизы САПР Qucs-0.0.19S-RC6 <a href=\"https://habr.com/ru/post/302006/\">https://habr.com/ru/post/302006/</a> </li>  </ul><br/>  <h1 id=\"podderzhivaemye-dvizhki-modelirovaniya\">Поддерживаемые движки моделирования</h1><br/>  <p>В настоящее время Qucs-S поддерживает четыре движка моделирования:</p><br/>  <ul>  <li>Ngspice <a href=\"http://ngspice.sourceforge.net/\" rel=\"nofollow noopener noreferrer\">http://ngspice.sourceforge.net/</a> Это рекомендованный симулятор. Он совместим с большинством моделей, которые можно найти на разнообразных ресурсах. Сейчас проектом руководит Holger Vogt из университета Дуйсбург-Эссен.</li>  <li>XYCE <a href=\"https://xyce.sandia.gov/\" rel=\"nofollow noopener noreferrer\">https://xyce.sandia.gov/</a> Это симулятор разработанный с нуля Сандийскими национальными лабораториями. Имеется возможность моделирования гармонического баланса (HB) и S-параметров.</li>  <li>SpiceOpus <a href=\"http://www.spiceopus.si/\" rel=\"nofollow noopener noreferrer\">http://www.spiceopus.si/</a></li>  <li>Qucsator <a href=\"https://github.com/qucs/qucsator\" rel=\"nofollow noopener noreferrer\">https://github.com/qucs/qucsator</a> Это изначальный движок, применявшийся в Qucs. Имеет возможность моделированя S-параметров, но нестабилен во временной области.</li>  </ul><br/>  <p>Qucs-S поддерживает все виды моделирования реализованные в применяемом SPICE-движке, а именно моделирования во временной и частотной области, шумовой анализ, анализ нелинейных искажений, Фурье-анализ, моделирования гармонического баланса. </p><br/>  <h1 id=\"ustanovka\">Установка</h1><br/>  <p>Для Linux имеются репозитории для Debian/Ubuntu, Fedora и OpenSUSE. Имеются также пакеты для Arch, которые можно установить через AUR, и порт для FreeBSD. Для нестандартных случаев можно собрать Qucs-S из исходников или воспользоваться AppImage. Поддержку своего дистрибутива Linux можно проверить здесь: <a href=\"https://download.opensuse.org/repositories/home:/ra3xdh/\" rel=\"nofollow noopener noreferrer\">https://download.opensuse.org/repositories/home:/ra3xdh/</a> Бинарные пакеты собираются автоматически при помощи OpenSUSE Build Service. </p><br/>  <p>Сам Qucs-S не предоставляет движка моделирования. Рекомендуется использовать Ngspice, который для Debian/Ubuntu устанавливается по зависимостям, а в прочих случаях его нужно установить вручную. </p><br/>  <p>Для Windows следует скачать zip-архив с portable версией Qucs-S со страницы релиза. Далее нужно распаковать архив и запустить файл qucs-s.exe из поддиректории bin. Ngspice следует скачать с официального сайта и установать в C:\\Spice64, иначе не будут работать модели XSPICE. При первом запуске следует указать путь к файлу ngspice_con.exe в настройках программы. Последние версии Ngspice для Windows теперь поставляют два исполняемых файла ngspice.exe и ngspice_con.exe Для правильное работы Qucs-S нужен ngspice_con.exe, который может писать логи в консоль. Обычный ngspice.exe запускает графическое окно, и все текстовые сообщения остаются внутри этого окна. </p><br/>  <h1 id=\"osnovy-raboty-s-programmoy\">Основы работы с программой</h1><br/>  <p>При первом запуске Qucs-S сообщит, что нужно выбрать движок моделирования и откроет диалоговое окно, показанное на скриншоте. В последствии настройки можно поменять в меню Simulation->Select default simulator. Под Linux Ngspice обычно расположен в /usr/bin/ngspice, а под Windows устанавливается по умолчанию в C:/Spice64/bin/ngspice_con.exe</p><br/>  <p><img src=\"https://habrastorage.org/r/w1560/webt/r2/ru/ib/r2ruibfxa_5uws-u07iy6kzyuk4.png\" data-src=\"https://habrastorage.org/webt/r2/ru/ib/r2ruibfxa_5uws-u07iy6kzyuk4.png\"/></p><br/>  <p>После того как выбран симулятор, открывается окно редактора схемы. Теперь можно смоделировать какую-нибудь схему. Для примера соберём инвертирующий усилитель Нортона на операционном усилителе NE5532. Редактирование схемы в Qucs интуитивно понятно и те, кто работал с другими электрическими САПР, легко разберутся с редактором. Следует отметить несколько особенностей. Виды моделирования и диаграммы также являются компонентами и размещаются на схеме. Они находятся в группах Simulations и Diagrams и выбираются из панели компонентов в правой части окна, откуда их можно перетаскивать на поле схемы. Операционный усилитель является библиотечным компонентом и его следует взять со вкладки Libraries в правой части окна. Собираем схему и размещаем на ней виды моделирования. Требуется смоделировать переходный процесс (Transisent analysis) и АЧХ схемы (AC analysis) Должно получиться как показано на скриншоте. Вход и выход схемы нужно пометить при помощи Insert->Wire label. </p><br/>  <p><img src=\"https://habrastorage.org/r/w1560/webt/-p/da/fs/-pdafsxtoa4dcihxqtgv8gdcok0.png\" data-src=\"https://habrastorage.org/webt/-p/da/fs/-pdafsxtoa4dcihxqtgv8gdcok0.png\"/></p><br/>  <p>Уравнение также является особым компонентом и вставляется через меню Insert→Equation или кнопкой на панели инструментов. Способ задания уравнений в Qucs-S отличается от того, что было в Qucs. Теперь в первом параметре нужно выбрать из списка к какому виду моделирования относится уравнение, так как для напряжений и токов используется нотация SPICE. Например <code>v(out)</code> это напряжение на узле <code>out</code> Диалоговое окно, открываемое при двойном клике по уравнению, показано на скриншоте. Данное уравнения рассчитывает коэффициент усиления схемы в децибелах. </p><br/>  <p><img src=\"https://habrastorage.org/r/w1560/webt/pm/iw/nt/pmiwntdsv7vjorx14kyijzfabmg.png\" data-src=\"https://habrastorage.org/webt/pm/iw/nt/pmiwntdsv7vjorx14kyijzfabmg.png\"/></p><br/>  <p>После того, как схема собрана, выбираем в главном меню Simulation->Simulate или нажимаем на клавиатуре F2 и запускаем моделирование. Появляется окно в котором сообщается, что Ngspice промоделировал схему без ошибок.</p><br/>  <p><img src=\"https://habrastorage.org/r/w1560/webt/jh/t6/zp/jht6zpqlfes4oz8a5y7evsearn4.png\" data-src=\"https://habrastorage.org/webt/jh/t6/zp/jht6zpqlfes4oz8a5y7evsearn4.png\"/> </p><br/>  <p>Ознакомившись с отчётом симулятора, нажимаем Exit и переходим на страницу просмотра, где можно разместить диаграммы. Диаграммы также можно разместить и прямо на схеме как это сделано на КДПВ. Сигналы, которые нужно вывести на диаграмму можно выбрать в диалоговом окне свойств диаграммы. На следующих двух скриншотах показан диалог свойств диаграммы и окно просмотра с АЧХ и осциллограммами сигналов на входе и на выходе. Видно, что усилитель усиливает сигнал. </p><br/>  <p><img src=\"https://habrastorage.org/r/w1560/webt/er/s-/fy/ers-fyee7vjszhbao0v68gok9j4.png\" data-src=\"https://habrastorage.org/webt/er/s-/fy/ers-fyee7vjszhbao0v68gok9j4.png\"/></p><br/>  <p><img src=\"https://habrastorage.org/r/w1560/webt/t5/jo/jn/t5jojnx7nt7m8l2p-u4uw2nvlck.png\" data-src=\"https://habrastorage.org/webt/t5/jo/jn/t5jojnx7nt7m8l2p-u4uw2nvlck.png\"/></p><br/>  <p>На диаграммах можно размещать маркеры, которые действуют аналогично курсорам на цифровом осциллографе. Начиная с версии Qucs-S 0.0.24 теперь можно задавать точную позицию маркера по оси X в диалоговом окне свойств. Например можно установить маркер точно на частоте 1 кГц на графике АЧХ.</p><br/>  <p><img src=\"https://habrastorage.org/r/w1560/webt/nk/bx/ia/nkbxiaikanz6nj65n6nn2rcfyxm.png\" data-src=\"https://habrastorage.org/webt/nk/bx/ia/nkbxiaikanz6nj65n6nn2rcfyxm.png\"/></p><br/>  <h1 id=\"novye-vidy-modelirovaniya-v-qucs-s\">Новые виды моделирования в Qucs-S</h1><br/>  <p>Ngspice начиная с версии 37, которая вышла в мае этого года, поддерживает моделирование S-параметров. В Qucs-S начиная с версии 0.0.24 также можно промоделировать S-параметры при помощи Ngspice и больше не требуется устанавливать и использовать для этой цели Qucsator. Пример схемы широкополосного усилителя высокой частоты для КВ трансивера показан на скриншоте.</p><br/>  <p><img src=\"https://habrastorage.org/r/w1560/webt/7p/uv/fc/7puvfcov88ncc7v2_4minivefa8.png\" data-src=\"https://habrastorage.org/webt/7p/uv/fc/7puvfcov88ncc7v2_4minivefa8.png\"/></p><br/>  <p>До версии Qucs-S 0.0.24 требовалось прибегать к написанию скрипта постпроцессора Ngspice, чтобы выполнить анализ спектра (FFT). Начиная с версии 0.0.24 в приложении реализован специальный вид моделирования: анализ спектра (Spectrum ananlysis – FFT). Пример моделирования спектра на выходе диодного кольцевого смесителя показан на скриншоте. Параметрами данного моделирования являются полоса частот (BW), шаг по частоте (dF) и тип оконной функции. </p><br/>  <p><img src=\"https://habrastorage.org/r/w1560/webt/2h/p7/wa/2hp7wa4xp4vz64tsxvtcyjcm7ak.png\" data-src=\"https://habrastorage.org/webt/2h/p7/wa/2hp7wa4xp4vz64tsxvtcyjcm7ak.png\"/></p><br/>  <h1 id=\"zaklyuchenie\">Заключение</h1><br/>  <p>Симулятор Qucs-S восстал из мёртвых и теперь будет развиваться. В планах у меня синхронизировать релизы с новыми функциями, появляющимися в Ngspice. Например в Ngspice-38 разработчики планируют добавить поддержку цифровых компонентов, совместимых по синтаксису нетлиста и списка цепей с LTSpice. Как только они будут доступны в Ngspice, я добавлю их поддержку в Qucs-S. Также в следующем релизе планируются некоторые улучшения пользовательского интерфейса. </p><br/>  <p>Помощь в разработке приветствуется. В профиле проекта на Гитхабе можно ознакомиться с багтрекером и планами дальнейшей разработки программы: <a href=\"https://github.com/ra3xdh/qucs_s\" rel=\"nofollow noopener noreferrer\">https://github.com/ra3xdh/qucs_s</a> Если планируете какое-то глобальное улучшение, то рекомендуется предварительно написать и изложить, что вы собираетесь делать. Также проекту можно помочь финансово через страницу на Boosty: <a href=\"https://boosty.to/qucs_s\" rel=\"nofollow noopener noreferrer\">https://boosty.to/qucs_s</a> и тем самым тоже приблизить следующий релиз. </p><br/>  <h1 id=\"resursy-po-qucs-s\">Ресурсы по Qucs-S</h1><br/>  <ul>  <li>Сайт проекта: <a href=\"https://ra3xdh.github.io/\" rel=\"nofollow noopener noreferrer\">https://ra3xdh.github.io/</a></li>  <li>Сайт Ngspice: <a href=\"https://ngspice.sourceforge.io/\" rel=\"nofollow noopener noreferrer\">https://ngspice.sourceforge.io/</a> </li>  <li>Репозиторий исходных кодов: <a href=\"https://github.com/ra3xdh/qucs_s\" rel=\"nofollow noopener noreferrer\">https://github.com/ra3xdh/qucs_s</a></li>  <li>Актуальный релиз: <a href=\"https://github.com/ra3xdh/qucs_s/releases/tag/0.0.24\" rel=\"nofollow noopener noreferrer\">https://github.com/ra3xdh/qucs_s/releases/tag/0.0.24</a></li>  <li>Страница на Boosty, где можно поддержать проект финансово: <a href=\"https://boosty.to/qucs_s\" rel=\"nofollow noopener noreferrer\">https://boosty.to/qucs_s</a> </li>  <li>Видео-туториал на английском языке от Kasper Nielsen: <a href=\"https://www.youtube.com/watch?v=90RaVy38DB8\" rel=\"nofollow noopener noreferrer\">https://www.youtube.com/watch?v=90RaVy38DB8</a></li>  <li>Видео-туториал на русском языке от канала Deztronica: <a href=\"https://www.youtube.com/watch?v=2HyK5TZ3c2k\" rel=\"nofollow noopener noreferrer\">https://www.youtube.com/watch?v=2HyK5TZ3c2k</a></li>  </ul></div>'),
(9, 'Мультиподпись Stellar через Ledger как способ дополнительной защиты кошелька ', '/ru/post/678520/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Некоторое время назад я обзавелся аппаратным крипто-кошельком Ledger и нашел его очень удобным и полезным. Операции с обычными криптовалютами выполняются довольно комфортно и с компьютера и с мобильника.</p><p>Но тут у меня возникла необходимость использовать ассеты в сети Stellar. И возникли проблемы. Ledger Live поддерживает сеть Stellar, но не поддерживает в ней ассеты (контрактные токены типа EURMTL). А сторонние кошельки, которые можно использовать для работы с ассетами, не поддерживают подписание транзакций через Ledger. Казалось-бы, что это тупик и использовать Ledger для полноценной работы со Stellar не получится...</p><p>Однако, было найдено решение этой проблемы. И заключается оно в использовании Multisig (мультиподпись). Для ее использования нужно, первым делом, пополнить кошелек, созданный в стороннем приложении (я использую LOBSTR) некоторым количеством XLM - базовой криптой сети Stellar. После этого можно в настройках включить Multisig. При его настройке нужно указать вторым адресом (необходимым для подписания транзакций) адрес кошелька Stellar, созданного в приложении Ledger Live. После этого для любой транзакции в данном кошельке потребуется подписание ее в том числе и с использованием аппаратного Ledger.</p><p>Но тут возникает другая проблема... При настроенном Multisig в кошельке LOBSTR после создания любой транзакции она не отправляется в сеть Stellar, а выдается в текстовом виде (в формате XDR). Далее эту транзакцию необходимо подписать с помощью Ledger и отправить в сеть Stellar. Ни того ни другого не умеют ни кошелек LOBSTR, ни кошелек Ledger Live.</p><p>И тут на помощь приходит <a href=\"https://laboratory.stellar.org/\" rel=\"noopener noreferrer nofollow\">лаборатория Stellar</a>. Порядок действий для подписания XDR следующий (обратите внимание что-бы справа-сверху страницы переключатель был в положении \"Public\"):</p><ol><li><p>Заходим на страницу <strong>\"Sign transaction\"</strong>;</p></li><li><p>Копируем в поле <strong>\"Import a transaction envelope in XDR format\"</strong> полученный в кошельке LOBSTR XDR транзакции;</p></li><li><p>Нажимаем кнопку <strong>\"Import transaction\"</strong>. После этого ниже на странице должно появится расшифрованное содержание транзакции и должно быть указано что одна подпись в ней уже имеется;</p></li><li><p>Далее идем в самый низ страницы и ищем кнопку <strong>\"Sign with Lerger\"</strong> (здесь-же доступна кнопка <strong>\"Sign with Trezor\"</strong> для подписания другим аппаратным кошельком). К моменту нажатия на эту кнопку аппаратный кошелек Ledger должен быть подключен, разблокирован и иметь запущенным приложение \"Stellar\";</p></li><li><p>После нажатия на кнопку <strong>\"Sign with Lerger\"</strong> нам надо проверить транзакцию на Ledger и подтвердить ее подписание;</p></li><li><p>После этого еще ниже на странице появится сообщение \"Success\" в поле, указывающем на статус подписания транзакции, и кнопка <strong>\"Submit in Transaction Submitter\"</strong> при нажатии на которую вы можете отправить данную транзакцию в сеть Stellar.</p></li></ol><p>Вот и все. После этого можете проверять свой кошелек в LOBSTR и видеть как исполнилось действие, которое вы хотели сделать. :)</p><p></p></div>');
INSERT INTO `articles` (`id`, `name`, `link`, `text`) VALUES
(10, 'Строим правильный монолит ', '/ru/company/piter/blog/678484/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/post_images/b5a/8f7/c9b/b5a8f7c9b364c148da1fed713aafc7f5.jpg\" alt=\"image\" data-src=\"https://habrastorage.org/getpro/habr/post_images/b5a/8f7/c9b/b5a8f7c9b364c148da1fed713aafc7f5.jpg\" data-blurred=\"true\"/><br/>  <h2>Монолиты слишком раскритикованы</h2><br/>  <p>Сейчас, когда о какой-то компании говорят, что она продолжает развивать монолит, может показаться, что компания эта старомодная, а с масштабированием монолита у нее могут возникнуть проблемы, правда? Я решил написать о том, что некоторым людям (и мне в том числе) монолиты кажутся замечательными. Тем не менее, технология действительно ушла далеко вперед, и я думаю, что пора пересмотреть подход к созданию монолитов.</p><br/>  <a name=\"habracut\"></a><br/>  <p>Если вы новичок в бекенд-разработке, напомню: монолит – это серверная система, работающая как одно целое. То есть, это одна-единственная программа, которая запускается, обслуживает некоторое количество сетевых запросов и после этого завершается. Альтернативы монолиту – это, в частности, сервис-ориентированные архитектуры (SOA), микросервисы, бессерверные функции – пожалуй, этим список не исчерпывается. Каждому из этих подходов есть свое время и место, поэтому можно только приветствовать любые обоснованные решения, при которых новая система создается в соответствии с одним или другим из этих паттернов. Я считаю, что значительное количество веб-приложений и сервисов вполне можно обслужить при помощи монолита… немного его усовершенствовав.</p><br/>  <h2>Понадобятся сервисы, помогающие разгрузить монолит </h2><br/>  <p>Паттерны, альтернативные монолиту, очень разумно обоснованы. Распределяя работу между несколькими разными сущностями, можно добиться, чтобы целостная система выполняла больше работы. Но хорошо известно, что при таком подходе сложность системы возрастает, на ее поддержку требуется больше усилий, что зачастую выливается в дополнительные человеко-часы и стоит дороже. Единственное исключение из этого правила, которое я вижу – это бессерверные функции, которые действительно многое упрощают. Но у них есть и свои недостатки – такие функции сложнее тестировать, они зависят от вендора, а для работы с ними может понадобиться инструментарий, которого не найти в продаже. Если все сделать правильно, то эти дополнительные усилия оправдаются и позволят создать очень удобную систему, которая блещет достоинствами. Классический пример – Netflix, они очень хорошо обустроились. </p><br/>  <h2>Находим компромиссный вариант</h2><br/>  <p>Если монолиты неудобно масштабировать, а микросервисы слишком сложны, то как спроектировать систему, которая могла бы соответствовать вашему растущему трафику и оставаться удобной для команды разработчиков, при этом не доставляя мучений при эксплуатации, поддержке и расширении функционала? В последние годы стало ясно, что здесь нужен какой-то компромиссный вариант. Не думаю, что описанное ниже решение подойдет каждому, но большинству решений просто не требуется обслуживать такие объемы трафика, ради которого действительно целесообразно переходить на микросервисы. </p><br/>  <h2>Знакомьтесь: паттерн проектирования SUFA </h2><br/>  <p>Прежде, чем объяснить по существу, что же такое SUFA, упомяну, что это не абсолютно новая концепция. Уже давно существуют такие вещи как паттерн «актор», парадигма «неомонолит» и другие, в рамках которых были постулированы схожие идеи, а SUFA – это просто одна из возможностей, позволяющих скомбинировать несколько концепций в простой и понятный паттерн проектирования. Итак, что же это? <br/>  <b>S(Простые), U(Унифицированные), F(функциональные) A(Приложения)</b>.<br/>  Разберем каждый компонент:</p><br/>  <h2>Простые (Simple)</h2><br/>  <p>Система, спроектированная по паттерну SUFA может работать с применением простейших сценариев развертывания. Уже давно известны группы автомасштабирования, а с появлением систем оркестрации контейнеров создавать такие группы стало даже проще. Для работы системы SUFA достаточно всего одной группы автомасштабирования (ASG), или ее можно расширить при помощи сетки сервисов, которая позволит создать функционально отличающиеся группы (это тема для отдельного поста).</p><br/>  <h2>Унифицированные (Unified)</h2><br/>  <p>Система SUFA использует не множественные сервисы, каждый из которых существует как самостоятельная развертываемая единица, а представляет собой единый развертываемый файл. Это может быть образ Docker, или AMI, или какой-нибудь другой артефакт, но, в любом случае, нам требуется построить всего одну штуку. Строить ее нужно методом непрерывной интеграции и доставки (CI/CD) в рамках непрерывной или размеченной каденции релизов, а предоставлять через реестр артефактов – например, реестр Docker или корзину S3.</p><br/>  <h2>На основе функций (Function-based)</h2><br/>  <p>Пожалуй, в любом стандартном монолите есть уровень обработчиков, отвечающий за прием запросов API и выполнение вызовов, адресованных бизнес-логике (которая и обрабатывает эти запросы) или хранилищу данных. Напротив, системы SUFA при обработке запросов сцепляют серии функций, каждая из которых совершенно независима от других и даже не знает об их существовании. Функции должны ожидать определенный ввод, выполнять некоторые операции и производить вывод, который будет по эстафетному принципу передаваться другим функциям в цепочке. Функции должны без труда тестироваться и переиспользоваться в разных сценариях (например, при различных запросах к API). Также системы SUFA должны проектироваться с расчетом на потребление и порождение событийно-основанного трафика, так как события будут в них основным коммуникационным средством.</p><br/>  <h2>Приложения (Applications)</h2><br/>  <p>На первый взгляд, этот пункт очевиден, но в рамках SUFA «приложение» понимается в очень специфическом смысле. Система SUFA должна обслуживать одно-единственное приложение, то есть, охватывать все возможности, предусматриваемые в полностью сформированном продукте. Здесь есть некоторое пространство для интерпретаций (например, должно ли в компании быть одно SUFA-приложение для всего бизнеса, даже если она производит продукт для разных областей), но суть в том, чтобы не умножать сущности, обслуживающие одно и то же приложение. Если функционал необходимо разделить между несколькими приложениями, то те функции, что входят в состав SUFA-системы, должны легко поддаваться переиспользованию и компоновке для достижения разных целей.</p><br/>  <p>Вы уже замечаете, что такой подход совершенно не зависит ни от технологий, ни от вендоров. SUFA по определению межъязыковые, рассчитаны на работу в разных облаках и средах развертывания. SUFA – это способ спроектировать серверную систему так, чтобы способствовать ее тестируемости, масштабируемости и безопасности. Кстати, я еще не касался масштабирования, так что давайте о нем поговорим. </p><br/>  <h2>SUFA в большом масштабе</h2><br/>  <p>Критически важный фактор, обеспечивающий масштабирование SUFA-системы, заключается в том, что она состоит из независимых функций. SUFA-системы должны опираться на базовый каркас, который отвечает за оркестрацию выполнения всех функций с расчетом на их эффективное масштабирование. Пользуясь пускателем функций или планировщиком заданий для работы с нужными функциями, SUFA-фреймворк абстрагирует конкретные детали выполнения функций; автор кода должен лишь указать, какие функции выполнять и в каком порядке. <br/>  Дополнительная масштабируемость обеспечивается при помощи групп возможностей и создания сетей данных (meshing). </p><br/>  <h2>Suborbital Atmo</h2><br/>  <p>Паттерн SUFA был спроектирован в расчете на работу с Atmo – это универсальный фреймворк, на основе которого особенно удобно строить SUFA-системы. Atmo использует файл под названием «Directive», в котором описываются все аспекты вашего приложения, в том числе, как сцеплять функции для обработки запросов. Функции, которые смогут работать поверх Atmo, могут быть написаны на разных языках. Фреймворк использует модули WebAssembly как вычислительные единицы. Atmo автоматически масштабируется горизонтально, чтобы обрабатывать нагрузку, поступающую в ваше приложение, содержит всевозможные инструменты и реализует наилучшие практики, обеспечивая высокий уровень производительности и безопасности и не требуя от вас писать ни строчки шаблонного кода. <br/>  Потрясающие возможности WebAssembly и продуманный дизайн SUFA можно попробовать на свободной платформе Suborbital Development Platform, чтобы по-новому подойти к созданию веб-приложений. На волне новых технологий и практик, таких, как JAMStack и пограничные вычисления, мы можем взять лучшее от новых и старых парадигм, чтобы делать невероятные вещи.</p></div>'),
(11, 'Мой опыт flutter собеседований ', '/ru/post/678560/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><h3>Предисловие</h3><p>В данной статье я хотел поделиться своим опытом прохождения собеседований и для этого собрал топ самых частых вопросов, которые мне задавали. В комментариях делитесь своим опытом. Это будет полезно всем, кто хочет развивать карьеру в качестве flutter-developer.</p><h3>О себе</h3><p>Начал карьеру как web разработчик, проработал 2 года и перешел на должность flutter разработчика, после 1.5 лет достиг потолка и решил развиваться в другой компании с сильной flutter командой.</p><h3>С чего я начал обучение</h3><p>Поскольку в интернете на данный момент не так много информации, о том, что могут спросить во время собеседований на должность Flutter developer я начал пересматривать абсолютно всё, до чего могли дотянуться мои руки – от того, какая папка в проекте за что отвечает, до того, как работает flutter на уровне фреймворка, виды архитектур, паттерны, стейт менеджеры и т.д.</p><p>Это помогло мне закрыть некоторые пробелы в знаниях и подойти к первым собеседованиям с большей уверенностью.</p><p>Выбор я делал из компаний, которые сами заинтересовались моей кандидатурой. Все компании были отечественные.</p><h3>Топ вопросов</h3><p>Флаттер достаточно молодой фреймворк, поэтому многие компании будут выстраивать свои вопросы относительно вашего опыта и других общепринятых вопросов, которые у вас могут спросить при устройстве на любую другую вакансию. Поэтому в первую очередь вспомните с какими инструментами вы успели поработать и какие проблемы вы смогли решить.</p><p>Отличный <a href=\"https://www.youtube.com/watch?v=K8o8RCsj41s\" rel=\"noopener noreferrer nofollow\"><u>пример</u></a> сделали ребята из surf, здесь вы можете посмотреть вопросы с собеседования в их компанию.</p><h3>Общие вопросы</h3><ul><li><p><strong>ООП</strong></p></li><li><p><strong>SOLID</strong></p></li><li><p><strong>Виды архитектур MVP, MVC, MVVM</strong>.</p></li><li><p><strong>Паттерны/шаблоны проектирования</strong></p></li></ul><h3>Вопросы по dart</h3><ul><li><p><strong>В чём отличие final от const</strong> - этот вопрос я слышал чаще, чем отличие stateful от stateless виджетов, поэтому советую в первую очередь разобраться в этой теме.</p></li><li><p><strong>Future</strong> - что это такое и как оно выполняется.</p></li><li><p><strong>Eventloop</strong> - рассказать про очереди и как выполняется код в dart. Часто на этом вопросе могут дать задачу на понимание.</p></li><li><p><strong>Isolate</strong> - как работает и какие проблемы решает.</p></li><li><p><strong>Stream</strong> - что это такое и какие типы бывают, в чём особенность разных типов.</p></li><li><p><strong>Null safety.</strong></p></li><li><p><strong><em>dynamic, object, null.</em></strong><em> </em></p></li><li><p><strong>extention, mixin и abstract class</strong> - в чём сходства и различия между ними? После этого обычно продолжают задавать вопросы по особенностям mixin.</p></li><li><p><strong>hash and equals</strong> - зачем их перезаписывать и что будет, если этого не делать?</p></li></ul><h3>Вопросы по flutter</h3><ul><li><p><strong>Stateful и stateless widgets</strong> - в чём разница между ними, когда какой использовать?</p></li><li><p><strong>Жизненный цикл виджетов</strong>.</p></li><li><p><strong>InheritedWidget</strong> - что это за виджет и какие функции он выполняет? Как с ним взаимодействовать?</p></li><li><p><strong>Widget, element, renderobject</strong> - здесь лучше всего полностью рассказать как эта вся история работает, что от чего зависит и т.д.</p></li><li><p><strong>Platform channel</strong> - какие виды бывают и в чём их особенности?</p></li><li><p><strong>Анимации</strong> - здесь можно пробежаться по их видам и какую когда использовать.</p></li></ul><h4>Вывод</h4><p>После прохождения всех собеседований я понял, что если хорошо подготовиться к Яндексу, то, скорее всего, последующие собесы пройдут значительно проще (если говорить о российских компаниях).</p><p>Для тех, кто задумывается нужен мне литкод, если вы хотите в Яндекс, то без него туда практически невозможно попасть. Если вы хотите в компанию поменьше, то много времени на него тратить не стоит, т.к. за все собеседования только две компании попросили решить меня задачку.</p><p>Надеюсь, моя статья помогла вам уменьшить страх перед походом на собеседование. Всем мир.</p><p></p></div>'),
(12, 'Raptor 1 против Raptor 2: что изменила SpaceX? Everyday Astronaut ', '/ru/post/678580/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><ul><li><p><a href=\"https://vk.com/away.php?to=https%3A%2F%2Feverydayastronaut.com%2Fauthor%2Ftrevorsesnic%2F&amp;cc_key=\" rel=\"noopener noreferrer nofollow\"><strong><em><u>Тревор Сесник,</u></em></strong></a><strong><em> </em></strong><em>14 июля 2022 г., 6 минут чтения<br/></em><a href=\"https://vk.com/away.php?to=https%3A%2F%2Feverydayastronaut.com%2Fspacex-raptor-engine-comparison%2F&amp;cc_key=\" rel=\"noopener noreferrer nofollow\"><strong><em><u>Первоисточник</u></em></strong></a></p></li></ul><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/cf9/b91/d65/cf9b91d6577f0549cb5d11570053dc6c.jpeg\" alt=\"\" title=\"\" width=\"800\" height=\"450\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/cf9/b91/d65/cf9b91d6577f0549cb5d11570053dc6c.jpeg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p><strong>Видео от Тима Тодда (Everyday Astronaut)</strong></p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/62d0ed929c344d33ecf976f9\" data-style=\"\" id=\"62d0ed929c344d33ecf976f9\" width=\"\"></div><p><strong>Обзор двигателя Raptor:</strong></p><p>В последние месяцы мы наблюдали переход SpaceX с версий двигателя Raptor, которые использовались на Starhopper, SN5, SN6, SN8, SN9, SN10 и SN11: Raptor v1.0, и Raptor, используемым на SN15, S20. и B4: Raptor v1.5. Новая версия Raptor, получившая название Raptor 2, имеет большое количество улучшений производительности и надежности; что SpaceX изменила в Raptor 2 и почему эти изменения выгодны для Starship?</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/e33/2e6/355/e332e63558e7bc0871ec04d07552ba95.jpeg\" alt=\"Наглядное сравнение Raptor 1 и Raptor 2.\" title=\"Наглядное сравнение Raptor 1 и Raptor 2.\" width=\"807\" height=\"454\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e33/2e6/355/e332e63558e7bc0871ec04d07552ba95.jpeg\" data-blurred=\"true\"/><figcaption>Наглядное сравнение Raptor 1 и Raptor 2.</figcaption></figure><h3>Двигатель Raptor</h3><p>Двигатель Raptor представляет собой двигатель <a href=\"https://vk.com/away.php?to=https%3A%2F%2Feverydayastronaut.com%2Frocket-engine-cycles%2F&amp;cc_key=\" rel=\"noopener noreferrer nofollow\"><u>закрытого цикла с полной газификацией компонентов топлива</u></a> (FFSCC), который работает на сверхохлажденном жидком кислороде и сверхохлажденном жидком метане CH4, который будет приводиться в действие космические носители следующего поколения SpaceX: Starship. В двигателе Raptor используется очень выгодный цикл FFSCC, максимально увеличивающий импульс, генерируемый заданным количеством топлива. Это третий двигатель FFSCC, когда-либо разработанный, и первый, покинувший испытательный стенд.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/8ed/ff1/3e7/8edff13e744221018d370d205ba8608a.jpeg\" alt=\"Диаграмма, показывает схему двигателя замкнутого цикла с полной газификацией компонентов топлива.\" title=\"Диаграмма, показывает схему двигателя замкнутого цикла с полной газификацией компонентов топлива.\" width=\"807\" height=\"454\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/8ed/ff1/3e7/8edff13e744221018d370d205ba8608a.jpeg\" data-blurred=\"true\"/><figcaption>Диаграмма, показывает схему двигателя замкнутого цикла с полной газификацией компонентов топлива.</figcaption></figure><p>Первая ступень Starship, называемая Super Heavy, будет оборудована 33 двигателями Raptor: 20 двигателей Raptor без карданного подвеса в самом внешнем кольце; 10  двигателей на карданном подвесе в среднем кольце; и три центральных двигателя в самом внутреннем кольце. Ожидается, что в будущем это число уменьшится, поскольку SpaceX продолжит модернизацию двигателя Raptor. На второй ступени, Starship, в настоящее время установлено шесть двигателей: три двигателя без карданного подвеса, оптимизированные для работы в вакууме и три двигателя с карданным подвесом для работы на уровне моря. Генеральный директор и технический директор SpaceX Илон Маск отметил, что в будущем Ship, вероятно, получит еще три двигателя оптимизированных для работы в вакууме.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/e18/26d/38f/e1826d38f3a5f35d2b56b900f20fdb93.jpeg\" alt=\"Компоновка двигателя Superheavy 33 Raptor.\" title=\"Компоновка двигателя Superheavy 33 Raptor.\" width=\"807\" height=\"454\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e18/26d/38f/e1826d38f3a5f35d2b56b900f20fdb93.jpeg\" data-blurred=\"true\"/><figcaption>Компоновка двигателя Superheavy 33 Raptor.</figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/e75/a36/808/e75a36808edc6b33d4a5797507227cef.jpeg\" alt=\"Компоновка двигателя Starship Raptor. (Источник: SpaceX)\" title=\"Компоновка двигателя Starship Raptor. (Источник: SpaceX)\" width=\"807\" height=\"454\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e75/a36/808/e75a36808edc6b33d4a5797507227cef.jpeg\" data-blurred=\"true\"/><figcaption>Компоновка двигателя Starship Raptor. (Источник: SpaceX)</figcaption></figure><p>Raptor изготовлен из запатентованного SpaceX сплава SX500, медных, алюминиевых и стальных сплавов — нет информации, позволяющей предположить, что сплавы значительно изменились между Raptor 1 и Raptor 2. Двигатель использует некоторое количество элементов 3D-печати; однако SpaceX пытается максимально отказаться от 3D-печати из-за невозможности масштабирования, высокой стоимости и низкой скорости производства.</p><p>Одной из самых впечатляющих характеристик Raptor является его диапазон карданного подвеса: двигатель может поворачиваться на 15 градусов по осям X и Z. Это необходимо для выполнения маневра «перевернуть и затормозить», которое делает Starship. Диапазон карданного подвеса в 15 градусов — это много; для сравнения, RS-25 имеет 12,5 градусов, а двигатель SpaceX Merlin 5 градусов на первой ступени.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/a9f/f78/108/a9ff781087d269652c826f9998f47508.jpeg\" alt=\"Диапазон карданного подвеса Raptor 2 составляет 15°.\" title=\"Диапазон карданного подвеса Raptor 2 составляет 15°.\" width=\"807\" height=\"454\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a9f/f78/108/a9ff781087d269652c826f9998f47508.jpeg\" data-blurred=\"true\"/><figcaption>Диапазон карданного подвеса Raptor 2 составляет 15°.</figcaption></figure><h3>Изменения</h3><p>В начале 2022 года был замечен первый Raptor 2, что ознаменовало конец истории Raptor 1 — после начала производства Raptor 2 SpaceX прекратила производство всех двигателей Raptor 1.5.</p><p>По сравнению с оригинальным Raptor, Raptor 2 выглядит почти незавершенным — большое количество трубопроводов и датчиков было удалено, что изменило внешний вид двигателя с «елочки» на значительно более компактный вид. В оригинальной версии Raptor, пока SpaceX училась запускать двигатель, требовалось очень большое количество датчиков для разработки, чтобы они могли отслеживать давление и температуру по всему двигателю. Кроме того, многие клапаны были объединены в клапанные пластины, что еще больше упростило трубопроводы.</p><p>Удалив большое количество этих компонентов, SpaceX сделала двигатель более огнестойким и термостойким: явный шаг к цели SpaceX по удалению всех кожухов двигателя с ракеты-носителя, что уменьшило бы массу ракеты-носителя. Это яркий пример мантры Маска <em>«лучшая часть — это отсутствие части».</em></p><p>Еще одно различие между Raptor 1 и Raptor 2 заключается в удалении факельных воспламенителей в основной камере сгорания. Вместо использования резервных факельных воспламенителей хорошо перемешанный горячий газообразный кислород и горячий газообразный CH4 самовоспламеняются под воздействием высокой температуры и давления. Это изменение еще больше снижает массу двигателя.</p><p>Raptor 2 также имеет меньше фланцев, чем на исходных версиях Raptor. Фланцы отлично подходят для прототипирования, когда необходимо заменить детали, но они увеличивают массу и увеличивают потери давления в двигателе. Теперь, когда конструкция стала более стабильной, SpaceX смогла удалить многие фланцевые соединения на двигателе, вплоть до того, что надеется удалить все фланцы на Raptor 2.5, что еще больше увеличит тягу до 250 тонн и дебютирует на 12-м ускорителе.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/ebb/616/04d/ebb61604d32c0f7e8252e637423a9806.jpeg\" alt=\"Визуализация, демонстрирующая шаг к удалению фланцев на Raptor 2 по сравнению с Raptor 1.\" title=\"Визуализация, демонстрирующая шаг к удалению фланцев на Raptor 2 по сравнению с Raptor 1.\" width=\"807\" height=\"454\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ebb/616/04d/ebb61604d32c0f7e8252e637423a9806.jpeg\" data-blurred=\"true\"/><figcaption>Визуализация, демонстрирующая шаг к удалению фланцев на Raptor 2 по сравнению с Raptor 1.</figcaption></figure><h3>Изменение сопла</h3><p>Самым фундаментальным изменением было расширение критического сечения сопла. Большее критическое сечение сопла позволяет большему количеству топлива проходить через двигатель, увеличивая тягу. Однако это изменение уменьшает коэффициент расширения — отношение между площадью выходного отверстия сопла и площадью критического сечения сопла. Чем выше степень расширения, тем больше работы выполняет сопло для преобразования высокого давления в высокую скорость, увеличивая удельный импульс двигателя.</p><h3>Сравнение Raptor 1 и Raptor 2</h3><p>Raptor 1 и Raptor 2 имеют одинаковый диаметр выходного отверстия сопла, а остальная часть двигателя имеет практически одинаковые размеры. Тем не менее, Raptor 2 значительно легче, чем Raptor 1 — Raptor 1 весил примерно 2000 кг (конечно, масса зависит от того, есть ли у двигателя кардан), а Raptor 2 — около 1600 кг.</p><p>Давление в камере MCC Raptor 2 составляет поразительные 300 бар — самое высокое давление MCC среди всех ракетных двигателей. Это значительно выше, чем у Raptor 1 с давлением в камере 250 бар. Предыдущим рекордсменом по самому высокому давлению в камере был российский РД-180, работающий при давлении 267 бар.</p><p>Из-за большего критического сечения сопла и повышенного давления в камере Raptor получил увеличенную тягу: Raptor 1 создавал 185 тонн тяги, а Raptor 2 - 230 тонн тяги. Однако недостатком расширения критического сечения сопла является снижение ISP: Raptor 1 имеет примерно 330 секунд ISP, а Raptor 2 достигает 327 секунд.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/57b/e68/e5b/57be68e5bcec221461ea6fd2bfb5dade.jpeg\" alt=\"Сравнение технических характеристик Raptor 1 и Raptor 2.\" title=\"Сравнение технических характеристик Raptor 1 и Raptor 2.\" width=\"807\" height=\"454\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/57b/e68/e5b/57be68e5bcec221461ea6fd2bfb5dade.jpeg\" data-blurred=\"true\"/><figcaption>Сравнение технических характеристик Raptor 1 и Raptor 2.</figcaption></figure><h3>Влияние на ускоритель</h3><p>Несмотря на снижение скорости выхлопа, увеличение тяги резко увеличивает эффективность ускорителя из-за уменьшения гравитационного сопротивления. Первые 9,8 м/с^2 ускорения тратятся исключительно на борьбу с гравитационным колодцем Земли. При соотношении тяги к массе 1,25:1 80 % тяги тратится на борьбу с гравитацией, и только 20 % тяги используется для разгона корабля при 0,25 g. Несмотря на всего лишь 25-процентное увеличение тяги по сравнению TWR 1 : 1, это бесконечно увеличивает ЧИСТУЮ работу, выполняемую на ускорителе.</p><p>Поднимая до TWR 1,5 : 1, 66% тяги теряется на гравитацию, а остальные 33% совершает работу по разгону аппарата. Несмотря на увеличение тяги всего на 16 %, это увеличивает работу, выполняемую ускорителем, на 100 %.</p><p>Raptor 1 будет иметь приблизительный TWR 1,25 при старте, а Raptor 2 будет иметь TWR 1,5 при старте. Это 100-процентное увеличение работы, выполняемой в начале полета, значительно важнее, чем 1-процентное снижение ISP. Это имеет много преимуществ, например, ракета-носитель находится ниже в конце работы ускорителя, уменьшая количество топлива, необходимое для возвращения ракеты-носителя.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/93d/b73/0bb/93db730bb220070cfcbde6e1f2f808bc.jpeg\" alt=\"График, показывающий гравитационные потери.\" title=\"График, показывающий гравитационные потери.\" width=\"807\" height=\"454\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/93d/b73/0bb/93db730bb220070cfcbde6e1f2f808bc.jpeg\" data-blurred=\"true\"/><figcaption>График, показывающий гравитационные потери.</figcaption></figure><h3>Будущее Raptor</h3><p>Основная цель Маска состоит в том, чтобы стоимость тонны тяги Raptor была ниже 1000 долларов, а это означает, что для производства Raptor необходимо около 250 000 долларов. С этой целью ясно, что SpaceX продолжит делать Raptor более простым и дешевым в производстве, включая удаление всех фланцев на Raptor 2.5 и удаление как можно большего количества \'элементов 3D-печати из производственной последовательности. Raptor 2.5 предназначен для дальнейшего увеличения тяги Raptor до 250 тонн тяги при давлении MCC 330 бар.</p><p>Кроме того, SpaceX пытается полностью отказаться от завесного охлаждения двигателя; есть несколько способов, которыми SpaceX может добиться этого, в том числе дополнительное завесное охлаждение или работа MCC с более высоким содержанием топлива. В настоящее время SpaceX изучает, будет ли выгоден отказ от завесного охлаждения горловины.</p><p>В целом ясно, что Raptor в настоящее время находится в зачаточном состоянии. Подобно тому, что SpaceX сделала с двигателем Merlin, двигатель будет продолжать развиваться по мере того, как SpaceX будет больше летать, больше строить и больше тестировать.</p><p><a href=\"https://vk.com/away.php?to=https%3A%2F%2Feverydayastronaut.com%2Fspacex-raptor-engine-comparison%2F&amp;cc_key=\" rel=\"noopener noreferrer nofollow\"><strong><em><u>Первоисточник</u></em></strong></a></p></div>'),
(13, 'Как снимался фильм «Трон» ', '/ru/company/skillfactory/blog/678398/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/4a8/ebe/509/4a8ebe50977239cce3e7bf4fdc165a58.jpeg\" width=\"1300\" height=\"780\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/4a8/ebe/509/4a8ebe50977239cce3e7bf4fdc165a58.jpeg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>Вот лишь один любопытный факт: аниматорам «Трона» приходилось копировать сцены компьютерной графики на миллиметровую бумагу, а затем вычислять координаты и углы для каждого элемента в каждом кадре. Другие подробности рассказываем под катом к старту нашего <a href=\"https://skillfactory.ru/data-scientist-pro?utm_source=habr&amp;utm_medium=habr&amp;utm_campaign=article&amp;utm_content=data-science_dspr_230722&amp;utm_term=lead\"><u>флагманского курса по Data Science</u></a>.</p><hr/><p>От киберпространства до искусственного интеллекта. Классика научной фантастики Стивена Лисбергера 1982 года значительно опередила время. Съёмочная группа рассказывает, как создавалась картина, изменившая правила игры.</p><p>В 1982 году слово «компьютер» для обычного человека могло ассоциироваться с двумя вещами. Это были или громадины размером с комнату, которые военно-промышленные предприятия использовали для обработки данных о вещах вроде фондовых рынков, или игровые автоматы вроде<a href=\"https://www.theguardian.com/games/2018/jun/04/space-invaders-at-40-tomohiro-nishikado-interview\"> <u>«Космических захватчиков»</u></a> и<a href=\"https://www.theguardian.com/games/2020/may/22/pac-man-video-game-40-years-old\"> <u>«Пакмана»</u></a>, похожие на холодильник. Немецкая группа «Крафтверк», конечно, пела про<a href=\"https://www.youtube.com/watch?v=bu55q_3YtOY\"> <u>домашние компьютеры</u></a>, но если у кого и был такой, то максимум Sinclair ZX81, то есть нечто не сложнее калькулятора.</p><p>Однако то лето позволило зрителям перенестись в мир высоких технологий. Немногие тогда оценили их по достоинству, но 40 лет спустя оказалось, что научно-фантастическое приключение Стивена Лисбергера «Трон» позволило заглянуть в будущее: будущее кино, виртуальной и реальной жизни. «Трон» как произведение искусства определённо нельзя назвать классикой, но темы, которые там затрагиваются, однозначно предвосхищают современные проблемы: искусственный интеллект, цифровая идентичность, конфиденциальность, персональные данные и доминирование крупных технических корпораций. «Трон» также был первой попыткой отразить в кинематографе «цифровое пространство», так называемое «киберпространство», то, что мы сейчас называем «<a href=\"https://www.theguardian.com/technology/the-metaverse\"><u>метавселенной</u></a>». Кибермир «Трона» по современным меркам выглядит не особенно впечатляюще — минималистичный, угловатый антураж в неоновых цветах навевает воспоминания о ночном клубе 80-х годов — но этот характерный ретрошик до сих пор помнят и копируют.</p><p>«Трон» предвосхитил и цифровое будущее кинопроизводства. Это был первый фильм, который использовал полностью сгенерированные компьютером сцены (CGI) — и длились они беспрецедентные для того времени 15 минут. До этого никто не видел ничего подобного. Таким образом, «Трон» проложил путь к современной эре улучшенного цифровым методом действа, оказав влияние на таких деятелей кинематографа, как Джеймс Кэмерон, Джордж Лукас, Питер Джексон, Тим Бёртон,<a href=\"https://www.theguardian.com/film/2016/mar/11/lilly-wachowski-profile-gender-sense8-matrix\"> <u>Вачовски</u></a> («Матрица» во многом похожа на «Трон») и бывший глава Pixar Джон Лассетер, который однажды сказал: «Без \"Трона\" не было бы \"Истории игрушек\"».</p><p>И всё же, по иронии судьбы, большая часть футуристических декораций «Трона» кропотливо создана вручную по технологиям старой школы, которые не повторил бы ни один современный художник-постановщик. «Мы построили мост от аналогового к цифровому, и это уникальное достижение», — утверждает Лисбергер. В свои 70 режиссёр сравнивает выпуск «Трона» с запуском аэроплана, который столкнули со скалы и только потом стали думать, как заставить его взлететь. «\"Трон\" не только не похож ни на один из уже существующих фильмов, нечто похожее на него снять просто невозможно».</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/087/e2d/f24/087e2df24c2db977b9fe7f1d2c3676e8.jpeg\" width=\"140\" height=\"175\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/087/e2d/f24/087e2df24c2db977b9fe7f1d2c3676e8.jpeg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p><em>Режиссёр Стив Лисбергер, Comic-Con 2010. Фотография: Jerod Harris/Getty Images</em></p><p>«Трон» появился как раз в тот момент, когда компьютеры начали из прерогативы исключительно военной промышленности становиться достоянием общества, и сам фильм как раз об этом. Сюжет повествует о гениальном разработчике видеоигр по имени Флинн (в исполнении Джеффа Бриджеса), у которого его бывший работодатель, корпорация Encom, крадёт код. Пытаясь взломать Encom, Флинн каким-то образом оказывается «оцифрованным» всезнающим искусственным интеллектом, Master Control Program (MCP), и попадает в кибермир ночного клуба 80-х, где он должен сразиться с MCP в виртуальном бою, вернуть свою интеллектуальную собственность и возвратиться в реальность.</p><p>Тайминг создания фильма просто сверхъестественный. В конце 1979-го, работая над «Троном», Лисбергер и его соавтор Бонни Макбёрд посетили Исследовательский центр Пало-Альто (Parc). Это был научно-исследовательский институт под открытым небом, основанный компанией Xerox, который впоследствии стал известен как колыбель современных персональных компьютеров. Его инновации включали в себя графический пользовательский интерфейс — упрощённую форму взаимодействия «человек — компьютер» с помощью иконок на рабочем столе и компьютерной мыши: «укажи и щёлкни». Лисбергер и Макбёрд встретились с одной из самых ярких звёзд PARC — учёным-информатиком Аланом Кеем. Кей не только выступил в качестве консультанта фильма, но и стал прототипом одного из персонажей — приятеля Флинна Алана/Трона.</p><p>В том же месяце 1979 года Xerox Parc посетил ещё один важный гость —<a href=\"https://www.theguardian.com/technology/stevejobs\"> <u>Стив Джобс</u></a>. 24-летний владелец Apple сразу увидел потенциал в графическом интерфейсе от Xerox. «Я подумал, это было лучшее, что я видел в жизни, — вспоминал потом Джобс. — Всего лишь за десять минут я осознал, что когда-нибудь все компьютеры мира будут такими». Xerox так много зарабатывал на продаже фотокопировальных устройств, никому не было дела до исследователей из Parc. Джобс незамедлительно предпринял шаги по внедрению технологии графического интерфейса, в том числе нанял многих ключевых сотрудников Parc. Microsoft Билла Гейтса, будучи первым лицензиатом программного обеспечения Apple, сделал нечто похожее. Этот промах компании Xerox — один из самых значительных в истории корпорации.</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/1ed/222/ea0/1ed222ea0217deac54f303e8b9e965be.jpeg\" width=\"380\" height=\"228\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1ed/222/ea0/1ed222ea0217deac54f303e8b9e965be.jpeg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p><em>Стив Джобс (слева) и Стив Возняк, Сан-Франциско, 1977. Фотография: Tom Munnecke/Getty Images</em></p><p>Есть мнение, что фигура Джобса легла в основу вундеркинда-провидца Флинна из «Трона», а прототипом программиста-ботаника Алана был Билл Гейтс. Сам Лисбергер видит главного героя «Трона» скорее шаманом, путешествующим в мир духов, чтобы получить знания и разрешить конфликт. Ему не чужд психоделический мистицизм. «Было бы довольно лицемерно, будучи режисссёром в 70-е, <em>никак не</em> затронуть эту сферу, — считает он, — но я думаю, что на самом деле я рассказывал свою собственную историю. Я хотел создать мир, используя эти инструменты, но понял, что сам потерялся в нём. Путешествие в духе Волшебника страны Оз».</p><p>Когда Лисбергер задумал «Трон», у него не было компьютера. Выросший на восточном побережье, в 1978 году он перевёз свою успешную анимационную студию в Лос-Анджелес, чтобы работать над репортажем об Олимпиаде — 80 в Москве для NBC (из-за бойкота США трансляция не велась). Увидев первые видеоигры, такие как Pong, Лисбергер заинтересовался компьютерной графикой. Он познакомился с пионерами индустрии, в том числе с Эдом Кэтмаллом, будущим соучредителем Pixar, работавшим в Нью-Йоркском технологическом институте, и Филом Миттельманом из Массачусетского технологического института, чья компания MAGI создавала трёхмерные модели танков для американских военных. Миттельман показал Лисбергеру созданный им виртуальный манекен художника. «Если честно, это взорвало мне мозг, — вспоминает Лисбергер. — Это было для меня чем-то вроде волшебства. Как творец, я подумал: «Мы должны поиграться с этой штукой».</p><p>Лисбергер также размышлял о том, что все компьютерная сеть находилась в руках государства, храня личные данные граждан: налоговые отчёты, водительские права и так далее. «Я уже в вашей системе. Так почему у меня нет доступа к самому себе?» Таким образом, «Трон» воплощает утопическую мечту ранней компьютерной эры. «Это была история бунта, революции и создания новых рубежей для новой цивилизации».</p><p>Лисбергер ещё не знал, как он будет снимать такой фильм. «Многие признанные деятели кино сочли меня сумасшедшим, но я слишком мало знал о том, как работает Голливуд, чтобы понять, что я пытаюсь сделать невозможное». На одном из этапов работы над фильмом он встретился со Стеном Ли, главой Marvel Comics, и показал ему небольшой образец компьютерной анимации. «Стен Ли посмотрел на меня с выражением лица вроде \"ну удачи тебе, дружок\"». Он был совершенно не заинтересован.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/d88/493/dbb/d88493dbb2751fc6b9d3c3a5bcd144a5.jpeg\" width=\"620\" height=\"372\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d88/493/dbb/d88493dbb2751fc6b9d3c3a5bcd144a5.jpeg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p><em>Чтобы создать схему трона, светящиеся области на 75 тысячах кадров пришлось раскрасить вручную. Фотография: Disney/Sportsphoto/Allstar</em></p><p>Единственной компанией, которая могла и захотела снять «Трон», стал Дисней. Он как раз искал свежую кровь. После смерти Уолта Диснея в 1966 году студия пришла в упадок, уступив место таким кассовым хитам, как «Звёздные войны». «Это было похоже на замок из \"Спящей красавицы\", — рассказывал Лисбергер. — Прекрасное место, обособленное и не слишком связанное с Голливудом. Спящий великан в ожидании пробуждения». Технически «Трон» представляет собой смесь актёрской игры, анимации старой школы и компьютерной графики. Все три элемента были непростыми. Все спецэффекты были добавлены на этапе постпродакшна, поэтому актёры играли на фоне пустых, полностью чёрных декораций. По словам Лисбергера, Бриджес придерживался идеи футуристической отстранённости. Дэвид Уорнер, сыгравший главного антагониста Флинна Эда Диллинджера, не видел в этом никакой разницы с традициями британской сцены. Уникальная светящаяся схема «Трона» была создана с помощью техники анимации задней подсветки, которая включает в себя создание негатива каждого кадра и ручную роспись каждой светящейся зоны. Предстояло сделать 75 тысяч кадров, более полумиллиона настоящих произведений искусства. До последней минуты никто не знал, что получится в итоге, а переснять заново было практически невозможно.</p><p>Создание компьютерной графики «Трона» было совершенно отдельным процессом. Компьютерная графика использовалась в кино и ранее, но только в небольших фрагментах. Например, в фильме «Мир Дикого Запада» 1973 года есть кадры с пиксельным изображением глаза робота. И «Звёздные войны», и «Чужой» используют трёхмерную каркасную графику, которая проецируется на экраны. Только киностудии, в распоряжении которых был собственный компьютер размером с комнату и специально разработанное программное обеспечение, могли создавать такие сцены. Процесс оставался трудоёмким. «Нам пришлось выяснить, как расположить и смоделировать объекты 24 раза, чтобы воспроизвести всего лишь одну секунду движения на экране», — рассказывает Билл Кройер, руководитель отдела компьютерной анимации фильма «Трон». Аниматорам «Трона» приходилось копировать сцены компьютерной графики на миллиметровую бумагу, а затем вычислять координаты и углы для каждого элемента в каждом кадре. Затем инженеры-компьютерщики вводили все числа вручную. Не было никакой возможности увидеть результаты, пока изображения не были нанесены на 35-миллиметровую плёнку и не попали в кинопроектор.</p><p>Трон был дисквалифицирован с номинации на «Оскар» за лучшие спецэффекты, так как использование компьютеров тогда считалось «читерством».</p><p>Рабочими офисами авторов «Трона» стали трейлеры на парковке Диснея, вспоминает Крис Ведж, тогдашний аниматор MAGI, работавший над сценами светового цикла трона. «[Так было] потому, что отдел анимации Disney не верил, что это анимация, — рассказывает он. — Они думали, что это просто компьютеры создают какие-то эффекты. Они просто ничего не понимали в этом». Тем не менее некоторые молодые аниматоры Диснея всё же заинтересовались проектом, например, бывший сосед Кройера по комнате Лассетер. «Как только он мог отвлечься от работы, он приходил, садился позади меня и часами смотрел, как я работаю над материалом для \"Трона\", — рассказывает Кройер. — Он был по-настоящему очарован этим».</p><p>В июле 1982 года, перед релизом, «Трон» был раскручен до предела, однако так и не взлетел. Он занял всего лишь 26-ю строчку в списке самых кассовых фильмов года, который тогда возглавили «Инопланетянин» и «В поисках утраченного ковчега». Собственно говоря, даже видеоигра по фильму «Трон» принесла больше денег, чем сам фильм. Лисбергер продолжал работать режиссёром фильмов без спецэффектов. Он приложил руку к долгожданному сиквелу 2010 года<a href=\"https://www.theguardian.com/film/2010/dec/16/tron-legacy-review\"> <u>«Трон: Наследие»</u></a> и мультсериалу. Сообщается, что третий фильм находится в разработке, а американские горки Tron близятся к завершению в Disney World. Ни одной из CGI-компаний, работавших над «Троном», сегодня не существует. Потенциал компьютерной графики невозможно было отрицать, но не хватило вычислительных мощностей и простоты применения.</p><p>«Мы думали, что положим начало революции, но, к сожалению, этого не произошло», — говорит Ведж. Лассетер сразу же попытался запустить в Disney компьютерный анимационный фильм, сначала адаптацию «Там, где живут чудовища», затем «Отважного маленького тостера», но Дисней в конечном счёте уволил его. Лассетер пошел работать на<a href=\"https://www.theguardian.com/film/georgelucas\"> <u>Джорджа Лукаса</u></a>, который строил собственную лабораторию компьютерной графики. Позже он нанял Эда Кэтмулла и его коллег из NYIT.</p><p>Тем временем в январе 1983 года Apple выпустила<a href=\"https://www.theguardian.com/global/2018/sep/01/daughter-steve-jobs-denied-lisa-brennan-jobs\"> <u>Lisa</u></a>, один из первых персональных компьютеров с графическим интерфейсом. В следующем году появился гораздо более успешный Macintosh. В ноябре 1983 года Билл Гейтс представил свой графический интерфейс под названием Windows вместе с первой версией Microsoft Word. Наконец началась революция персональных компьютеров.</p><p>Вскоре круг замкнулся. Джобс купил студию компьютерной графики Lucasfilm за 10 миллионов долларов в 1986 году. Она стала Pixar Animation Studios. Девять лет спустя Лассетер снял «Историю игрушек», и так родился новый жанр цифровых анимационных фильмов. Затем, в 2006 году, Disney купила Pixar, а в 2012-м — и LucasFilm. И снова передовые технологии — в руках небольшого числа могущественных корпораций. Мечта «Трона» о цифровом освобождении так и не сбылась.</p><p>Из идеи компьютерной революции получились неплохие вещи, признаёт Лисбергер, но в ретроспективе его техноутопизм кажется несколько неуместным.</p><p>«Трон» очень идеалистичен. Он как будто говорит: «Если мы просто отдадим всё в руки людей, то демократия установится навечно». Ирония в том, что герои оказались чертовски близко к тому, чтобы свергнуть демократию с помощью компьютера. Оказывается, мы можем предсказывать технологии будущего, но не способны предсказать его этику и философию.</p><p>А мы поможем прокачать ваши навыки или с самого начала освоить профессию, актуальную в любое время:</p><ul><li><p><a href=\"https://skillfactory.ru/data-scientist-pro?utm_source=habr&amp;utm_medium=habr&amp;utm_campaign=article&amp;utm_content=data-science_dspr_230722&amp;utm_term=conc\">Профессия Data Scientist</a></p></li><li><p><a href=\"https://skillfactory.ru/data-analyst-pro?utm_source=habr&amp;utm_medium=habr&amp;utm_campaign=article&amp;utm_content=analytics_dapr_230722&amp;utm_term=conc\">Профессия Data Analyst</a></p></li></ul><p>Выбрать другую <a href=\"https://skillfactory.ru/catalogue?utm_source=habr&amp;utm_medium=habr&amp;utm_campaign=article&amp;utm_content=sf_allcourses_230722&amp;utm_term=conc\">востребованную профессию</a>.</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b16/dac/539/b16dac539a0a09cd1c28951311a610c7.png\" width=\"auto\" height=\"auto\" data-src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b16/dac/539/b16dac539a0a09cd1c28951311a610c7.png\"/><figcaption></figcaption></figure><p></p></div>'),
(14, 'Дизайн и эволюция языка С++ ', '/ru/post/678582/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><h2>Введение </h2><p>Некоторые время назад, знакомый предоставил возможность прочитать в бумажном переплете книгу Бьерна Страуструпа «Дизайн и эволюция языка С++». Будучи программистом и отдавая интерес по большей степени как раз к этому языку, мне стало очень приятно, что появилась такая возможность ознакомиться с инструментом «изнутри». Дело в том, что данную книгу рекомендуют прочитать в списках, связанных с изучением языка С++ и причем советуют сталкиваться с ней только Senior разработчикам. У меня эта книга была в электронном варианте, но времени её почитать всегда не хватало, да и с электронного носителя не люблю читать такие книги. Ознакомившись с содержанием всей печатной версии данного экземпляра, решил поделиться исключительно субъективным мнением об этой книге.  </p><h2>Структура книги</h2><p>Книгу \"Дизайн и эволюция языка С\" можно расценивать как документальное произведение. Думаю, такое описание больше всего подходит под подобного рода книги. Материал можно поделить на две части: философскую и техническую. Причем обе части пересекаются постоянно и нет явного разделения, что например, первая половина будет просто теорией, а другая только примерами и разборами языка. Скорее её можно описать по аналогии с детской литературой, где текст сопровождается иллюстрациями действий. Только иллюстрациями здесь служит код.[BR][BR]Автор написал эту книгу как рассказ о своей деятельности или даже как дневник с явными пояснениями того, над чем работал. Здесь очень большое место выделяется под историю идей и их реализации над языком. Страуструп особенно подчеркивает, что книга не является учебным пособием. Это скорее, как мануал для понимания технологии тем, кто с ней работает.  </p><h2>Содержание</h2><p>Как и в большинстве книг, здесь также присутствует содержание, которое делится на главы. В свою очередь, главы делятся на пункты и подпункты. Они все пронумерованы. Таким образом, читать книгу становится удобнее. Одна из причин, по которой такое сделано, - это частое обращение с помощью ссылок на какие-либо пункты, которые тем или иным образом относятся к информации или содержат уточняющие данные.</p><p>Главными разделами являются основные элементы языка, которые обычно присутствуют во всех технических книгах по С. Затрагиваются главные особенности модификаций для С, которые взяты из некоторых других языков (C, Algol, Simula и т. д. ). При этом автор явно подчеркивает, что взято, откуда и почему. С какой целью используется та или иная разработка, а также почему. Некоторые моменты лучше вовсе исключить.</p><p>Также в книги находится много примеров кода. Однако здесь есть определенные моменты сложности, которые связанны с устаревшей версией языка, и кому-то возможно, что-то будет непонятно и сложно. Тем не менее, если читатель является программистом С, ему даже интуитивно будет понятен какой-либо пример кода, учитывая, что все имеет описание.  </p><h2>Цель книги</h2><p>Как и описывалось ранее: книга не является учебным пособием. Это, скорее документальное произведение о создании языка С. Задачей книги является донесение до читателя, почему язык имеет именно такой формат и такой вид, который сейчас мы все и знаем. Описание Мыслей автора дает понять, чем он руководствовался и как действовал во время разработки языка. Затронуты вопросы про сложные и неудобные моменты, с которыми разработчики могут столкнуться и сталкиваются при разработке на С. Здесь также описана история привлечения сообщества к языку и введения его в массовое использование.  </p><h2>Вывод</h2><p>Книга подойдет любому программисту, но следует понимать, что здесь все внимание уделяется именно языку С особенно важно понимать, что это не учебник по изучению языка. Это именно взгляд на технологию глазами именно автора. И рассчитывать, что после прочтения вы научитесь программировать на языке, не стоит. Информация в ней дается для ознакомления с философией языка и мыслями автора и стремится дать ответы на большую часть распространённых вопросов. И поверьте, большее количество ответов вы здесь найдете.  </p></div>');
INSERT INTO `articles` (`id`, `name`, `link`, `text`) VALUES
(15, 'Обмен данными между Phaser.js и Vue.js используя Vuex ', '/ru/post/678584/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/999/93e/786/99993e7868622bc3e579569117113118.png\" width=\"700\" height=\"314\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/999/93e/786/99993e7868622bc3e579569117113118.png\"/><figcaption></figcaption></figure><p>Я потерял много времени, пытаясь найти решение — как осуществить обмен данными между vue.js и Phaser. Этот вопрос заинтересовал меня, т.к. все что не касается игровой механики, намного удобнее и быстрее делать вне игрового движка, например: авторизация и вывод игровой статистики.</p><p>Поскольку у меня есть некоторый опыт работы с Vue.js, то я решил использовать его для этих целей.</p><p>Поскольку Phaser работает как отдельное приложение, то вы не можете передавать или извлекать информацию из него, для этого вам потребуется немного пофантазировать.</p><p>Я не мог найти, как передать какую-то переменную в Phaser через процесс инициализации игры или как достучаться из него во Vue. Казалось бы, у обоих инструментов есть большие комьюнити, но я нашел лишь много подобных вопросов на форумах или под видео на YouTube — и все они либо без ответа, либо содержат не рабочие или не полноценные ответы. Я решил написать эту короткую статью, потому что надеюсь помочь другим энтузиастам, которые <strong>находятся в самом начале пути.</strong></p><hr/><p>Для того чтобы Phaser в целом запустить внутри Vue, я использовал проект -<a href=\"https://github.com/proyecto26/ion-phaser\" rel=\"noopener noreferrer nofollow\"><u>ion-phaser</u></a><u>(</u><a href=\"https://vuedose.tips/build-a-game-in-vuejs-with-phaser\" rel=\"noopener noreferrer nofollow\"><u>статья</u></a><u>).</u></p><p>Далее пошаговая инструкция:</p><ol><li><p>Создаем пустой проект. (Начнем с нуля, для того чтоб мы были на одной странице)</p></li></ol><pre><code>vue create my-awesome-project cd my-awesome-project yarn add phaser vuex @ion-phaser/core</code></pre><ol start=\"2\"><li><p>Настраиваем Phaser</p></li></ol><p>Нужно добавить 2 строчки в main.js</p><pre><code>import { defineCustomElements as defineIonPhaser } from \'@ion-phaser/core/loader\'  defineIonPhaser(window);</code></pre><p>Также нужно задать конфигурацию загрузки ассетов в файле <a href=\"https://github.com/verpeta/phaser-vuejs-vuex/blob/master/vue.config.js\" rel=\"noopener noreferrer nofollow\"><u>/vue.config.js</u></a>.</p><ol start=\"3\"><li><p>Создаем файл хранилища - vuex.</p></li></ol><p>Разместим его в - /src/store/index.js</p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/62dc584eab111334724405f2\" data-style=\"\" id=\"62dc584eab111334724405f2\" width=\"\"></div><p>Подключаем его в приложение Vue:</p><pre><code>// /src/main.js import store from \'./store\' .... .... createApp(App)   .use(store)   .mount(\'#app\');</code></pre><ol start=\"4\"><li><p>Добавим игровую логику:</p></li></ol><p>Для примера я взял <a href=\"https://phaser.io/examples/v3/view/physics/arcade/collision-direction\" rel=\"noopener noreferrer nofollow\">код с официального сайта Phaser.</a></p><p>Подключаем и конфигурируем игру в компоненте Vue - /src/game/Game.vue</p><div class=\"tm-iframe_temp\" data-src=\"https://embedd.srv.habr.com/iframe/62dc595aab111334724405f3\" data-style=\"\" id=\"62dc595aab111334724405f3\" width=\"\"></div><p>В этом файле стоит обратить внимание на строки 44-51. Именно тут происходит прослушивание изменений состояния переменной <strong>count</strong>. </p><p>Само же изменение значения мы произведем внутри игровой логики. Будем начислять очки за каждую собранную звезду)</p><p>Разместим код игрового уровня в файле - <a href=\"https://github.com/verpeta/phaser-vuejs-vuex/blob/master/src/game/scenes/PlayScene.js\" rel=\"noopener noreferrer nofollow\"><u>/src/game/scenes/PlayScene.js</u></a></p><p>Файл довольно длинный и содержит лишь адаптированную копию кода, поэтому рассмотрим лишь отрывок который добавил автор:</p><pre><code>import store from \"@/store\";  /*********/  collectStar(player, star) {   star.disableBody(true, true);   store.commit(\'increment\'); }</code></pre><p>Первая строка внедряет vuex в игровой код.</p><p>На строке 6 - мы производим вызов мутирующего метода - <strong>increment</strong>. Собрали звезду - добавили очко.</p><ol start=\"5\"><li><p>Протестируем то что мы накодили.</p></li></ol><p>Запускаем приложение:</p><pre><code>yarn serve</code></pre><p>На экране мы должны увидеть следующую картинку:</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/9c5/5e9/7c6/9c55e97c67aa38ad059a5f7c7ca0d161.png\" width=\"815\" height=\"722\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/9c5/5e9/7c6/9c55e97c67aa38ad059a5f7c7ca0d161.png\"/><figcaption></figcaption></figure><p>Игровой персонаж ударяясь головой об платформу вызывает появление звездочек, после того как он соберет 5ть - будет выведено сообщение о выигрыше средствами Vue.js.</p><hr/><p>Подводя итоги. В статье были рассмотрено следующее:</p><ul><li><p>Интеграция Phaser во Vue.js</p></li><li><p>Подключение и настройка хранилища Vuex</p></li><li><p>Обмен состоянием между Vue.js и Phaser в обе стороны.</p></li></ul><p><a href=\"https://github.com/verpeta/phaser-vuejs-vuex\" rel=\"noopener noreferrer nofollow\">Ссылка на репозиторий с исходным кодом.</a></p><hr/><p><strong>PS:</strong> Мой основной язык РНР, но для общего развития последнее время изучаю и серверный javascript. Самым веселым способом изучения, мне показалось - создать многопользовательскую сетевую игру. Если вам также интересна данная тема - буду рад пообщаться и покодить вместе :-)</p></div>');
INSERT INTO `articles` (`id`, `name`, `link`, `text`) VALUES
(16, 'Как я Anyconnect на GitLab натягивал ', '/ru/post/678586/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Добрый день.</p><p>Меня зовут Василий и я сетевой инженер.</p><p>В данной статье хочу немного рассказать вам про то, как мы идем к удобному и гибкому в плане управления VPN со всякими фичами и при этом без особых финансовых затрат.</p><p>Хочу сразу предупредить, что в статье будет больше слов чем кода, так как хочется показать подход, нежели предоставить готовое решение.</p><p>Итак, поехали.</p><hr/><h2>Часть 0, с чего всё началось</h2><p>У нас есть несколько площадок, на одной из них стояла пара Cisco ASA 5512 в файловере, на которую подключались пользователи и ходили по другим площадкам. Всё всех устраивало, пока бОльшая часть сотрудников работала из офиса. Потом началась повсеместная удаленка и мгновенно пришло понимание, что VPN работает из рук вон плохо: с возросшей нагрузкой 5512 не справляется, контроля доступов практически нет, основной трафик идет на другую площадку и каналы не вытягивают.</p><p>В темпе вальса мы закупили несколько ASA 5515, лицензировали их и поставили на самой нагруженной, в плане пользовательских обращений, площадке, собрали в <a href=\"https://habr.com/ru/company/cisco/blog/493098/\" rel=\"noopener noreferrer nofollow\">vpn load-balancing</a> и<strong> </strong>жить стало веселее.</p><p>А потом пришли инженеры ИБ с предложением как-то управлять доступами пользователей к внутренней сети. Мы сразу остановились на функционале dynamic-access-policy, но каждый раз заходить на N железок (да еще и в разных регионах) не хотелось вообще, хотелось автоматизацию.</p><h2>Часть 1, где неправильно было почти всё</h2><p>Давать доступы удобно на уровне Active Directory. А еще удобнее, когда сами ACLы пишет не сетевой инженер, а техподдержка. На том и порешили - делаем какой-нибудь общий файл, даем к нему доступы отделу техподдержки и широкими мазками открываем через него сегменты нужным командам.</p><p>Очевидно, что Git в данном случае подходит лучше всего - система контроля версий, видно кто что сделал и прочий *Ops подход. Осталась самая малость - научить всех участников нашего vpn-кластера забирать конфиги из этого файла.</p><p>Так как задача выглядела тривиальной, был выбран, так называемый, Hello World автоматизации (ну почти): формируем текстовый файл с конфигом и разливаем его по устройствам, далее формируем dap.xml, так же кладем его на устройства и активируем.</p><details class=\"spoiler\"><summary>О чем я вообще говорю?</summary><div class=\"spoiler__content\"><p>Есть Cisco Anyconnect. Это такой простенький VPN-клиент, который умеет очень много всего. Одно из таких умений - это Dynamic Access Policy. Смысл довольно простой: проверяем пользователя и/или устройство на какие-нибудь соответствия, после чего навешиваем на него те политики, под которые попали пользователь или устройство. Эти соответствия могут быть совершенно разными - от группы в AD, до версии установленного антивируса.</p><p>Эффектом от политики могут быть разные штуки, но мы будем говорить про ACL. Каждая политика имеет свой ACL, если пользователь под нее подпадает, на его vpn-туннель навешивается его личный ACL. Если он подпал под несколько политик, то их ACLы складываются в один, а порядок сложения зависит от приоритета политики и еще некоторых вещей, о которых можно узнать из <a href=\"https://www.cisco.com/c/en/us/support/docs/security/asa-5500-x-series-next-generation-firewalls/108000-dap-deploy-guide.html\" rel=\"noopener noreferrer nofollow\">админ гайда</a>.</p><p>Еще, к политикам можно прикрутить более сложную логику с помощью LUA скриптов. Если скрипт возвращает true, значит пользователь под политику подпадает (а еще там есть всякие галки типа AND и OR, но мы не будем про них говорить).</p><p>Политика в нашем случае строится из трёх сущностей:</p><p>1) Создание политики командой dynamic-access-policy, в ней мы говорим на какой ACL смотрим и что делаем (продолжаем или терминируем подключение)</p><p>2) ACL, на который смотрит политика.</p><p>3) Файл dap.xml, в котором содержатся привязки группы на ASA к группе в AD, а также LUA скрипты с какой-либо сложной логикой.</p><p>При этом, не важно через что аутентифицируются клиенты(радиус или saml), авторизовать их всегда можно через AD, а значит и вытащить все группы, в которых состоит пользователь, а так же его LDAP атрибуты.</p></div></details><p>Чтобы всё было максимально просто и по фен-шуй, делаем YAML файл, содержащий название DAP-группы, как ключ, и список ACE, как значение:</p><pre><code class=\"yaml\">Group_1: 	- permit ip any 192.168.1.0 255.255.255.0 	- permit tcp any 192.169.2.0 255.255.255.0 eq 5432  Group_2: 	- permit tcp any 192.169.2.0 255.255.255.0 eq 5432 	- permit tcp any 10.1.1.1 255.255.255.255 eq 22</code></pre><p>Ну и так далее.</p><p>Следующей пришла идея, что опыта работы с ASA у сотрудников техподдержки не очень много, и в ACE могут быть косяки.</p><p>Без проблем, делаем import re, составляем список регексов под проверку синтаксиса каждого возможного варианта:</p><pre><code class=\"python\">regexs = [\"(permit)\\s(tcp|icmp|udp|ip)\\s(any)\\s(any)$\", \"(permit)\\s(tcp|icmp|udp)\\s(any)\\s(any)\\s(eq)\\s(\\d+)$\", \"(permit)\\s(tcp|icmp|udp|ip)\\s(any)\\s(host)\\s(\\d+\\.\\d+\\.\\d+\\.\\d+)$\", \"(permit)\\s(tcp|icmp|udp|ip)\\s(any)\\s(\\d+\\.\\d+\\.\\d+\\.\\d+)\\s(\\d+\\.\\d+\\.\\d+\\.\\d+)$\", \"(permit)\\s(tcp|icmp|udp)\\s(any)\\s(host)\\s(\\d+\\.\\d+\\.\\d+\\.\\d+) (eq) (\\d+)$\", \"(permit)\\s(tcp|icmp|udp)\\s(any)\\s(host)\\s(\\d+\\.\\d+\\.\\d+\\.\\d+) (range) (\\d+) (\\d+)$\", \"(permit)\\s(tcp|icmp|udp)\\s(any)\\s(\\d+\\.\\d+\\.\\d+\\.\\d+) (\\d+\\.\\d+\\.\\d+\\.\\d+) (eq) (\\d+)$\", \"(permit)\\s(tcp|icmp|udp)\\s(any) (eq) (\\d+)\\s(\\d+\\.\\d+\\.\\d+\\.\\d+) (\\d+\\.\\d+\\.\\d+\\.\\d+)$\", \"(permit)\\s(tcp|icmp|udp)\\s(any) (eq) (\\d+)\\s(host)\\s(\\d+\\.\\d+\\.\\d+\\.\\d+)$\", \"(permit)\\s(tcp|icmp|udp)\\s(any)\\s(\\d+\\.\\d+\\.\\d+\\.\\d+) (\\d+\\.\\d+\\.\\d+\\.\\d+) (range) (\\d+) (\\d+)$\", \"(permit)\\s(tcp|icmp|udp)\\s(any)\\s(range) (\\d+) (\\d+)\\s(\\d+\\.\\d+\\.\\d+\\.\\d+) (\\d+\\.\\d+\\.\\d+\\.\\d+)$\", \"(permit)\\s(tcp|icmp|udp)\\s(any)\\s(range) (\\d+) (\\d+)\\s(host) (\\d+\\.\\d+\\.\\d+\\.\\d+)$\", ]</code></pre><p>Прогоняем каждую строчку через этот массив и если хоть что-то сматчилось - хорошо, если нет - плохо и надо обратить на это внимание. Корректность IP/Маска проверяем через библиотеку ipaddress.</p><p>На выходе получается словарь, где ключом выступает AD-группа (она же DAP-группа), а значением набор ACE. Из этого словаря мы можем сформировать настоящий ACL, после чего сходить на ASA, сделать diff, из которого поймем, что надо добавить, а что удалить.</p><p>Далее нам нужно переложить всё это в сами DAP политики: берем ключи этого словаря и реплейсом подсовываем их в темплейт</p><pre><code>dynamic-access-policy-record _FOR_REPLACE_  network-acl _FOR_REPLACE_</code></pre><p>Готово. Следующий, и последний шаг - собрать dap.xml, где будут прописаны привязки AD-групп к DAP-группам. Делаем функцию, которая обернет каждую группу в XML, подставляем туда недостающие строки и убираем пробелы:</p><pre><code class=\"python\">from lxml import etree  def createPolicy(policies):     root = etree.Element(\'dapRecordList\')     for policy in policies:         tree = etree.ElementTree(root)         dapRecord = etree.SubElement(root, \'dapRecord\')         dapName = etree.SubElement(dapRecord, \'dapName\')         dapNameValue =  etree.SubElement(dapName, \'value\')         dapNameValue.text = policy         dapViewsRelation = etree.SubElement(dapRecord, \'dapViewsRelation\')         dapViewsRelationValue =  etree.SubElement(dapViewsRelation, \'value\')         dapViewsRelationValue.text = \'and\'         dapBasicView = etree.SubElement(dapRecord, \'dapBasicView\')         dapSelection = etree.SubElement(dapBasicView, \'dapSelection\')         dapPolicy = etree.SubElement(dapSelection, \'dapPolicy\')         dapPolicyValue =  etree.SubElement(dapPolicy, \'value\')         dapPolicyValue.text = \'match-all\'         attr = etree.SubElement(dapSelection, \'attr\')         attrName = etree.SubElement(attr, \'name\')         attrName.text = \'aaa.ldap.memberOf\'         attrValue = etree.SubElement(attr, \'value\')         attrValue.text = policy         attrOperation = etree.SubElement(attr, \'operation\')         attrOperation.text = \'EQ\'         attrType = etree.SubElement(attr, \'type\')         attrType.text = \'caseless\'     return root    xmlText = etree.tostring(xml, xml_declaration=True, encoding=\'UTF-8\', standalone=True, pretty_print=True).decode(\'utf-8\') xmlText = xmlText.replace(\' \',\'\') xmlText = xmlText.replace(\'&lt;?xmlversion=\\\'1.0\\\'encoding=\\\'UTF-8\\\'standalone=\\\'yes\\\'?>\', \'&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\')</code></pre><p>Нормально, но есть пара проблем:</p><p><strong>Проблема 1</strong>: Может случится ошибка или опечатка, где название группы в YAML не будет соответствовать группе в AD, никто этого не заметит, а работать не будет.</p><p><strong>Решение:</strong> В начале pipeline делать ldapsearch, забирать из AD все группы и проверять, все ли группы в ямле присутствуют в AD.</p><p><strong>Проблема 2:</strong> ASA автоматом исправляет некоторые порты в ACL с цифр на буквы, например: tcp/80 > www, tcp/22 > ssh, udp/53 > domain и так далее.</p><p><strong>Решение:</strong> Собираем словарь протокол/цифра/имя, выдергиваем из каждого ACE порт и прогоняем его через словарь, который выглядит следующим образом:</p><pre><code class=\"python\">{ \'tcp\': {\'5190\' : \'aol\', \'179\' : \'bgp\', \'3020\' : \'cifs\',         \'1494\' : \'citrix-ica\', \'514\' : \'cmd\', \'2748\' : \'ctiqbe\',         \'13\' : \'daytime\', \'9\' : \'discard\', \'53\' : \'domain\',         \'7\' : \'echo\', \'512\' : \'exec\', \'79\' : \'finger\',         \'21\' : \'ftp\', \'20\' : \'ftp-data\', \'70\' : \'gopher\',         \'1720\' : \'h323\', \'101\' : \'hostname\', \'80\' : \'http\',         \'443\' : \'https\', \'113\' : \'ident\', \'143\' : \'imap4\',         \'194\' : \'irc\', \'543\' : \'klogin\', \'544\' : \'kshell\',         \'389\' : \'ldap\', \'636\' : \'ldaps\', \'513\' : \'login\',         \'1352\' : \'lotusnotes\', \'515\' : \'lpd\', \'139\' : \'netbios-ssn\',         \'2049\' : \'nfs\', \'119\' : \'nntp\', \'5631\' : \'pcanywhere-data\',         \'496\' : \'pim-auto-rp\', \'109\' : \'pop2\', \'110\' : \'pop3\',         \'1723\' : \'pptp\', \'514\' : \'rsh\', \'554\' : \'rtsp\', \'5060\' : \'sip\',         \'25\' : \'smtp\', \'1522\' : \'sqlnet\', \'22\' : \'ssh\',         \'111\' : \'sunrpc\', \'49\' : \'tacacs\', \'517\' : \'talk\',         \'23\' : \'telnet\', \'540\' : \'uucp\', \'43\' : \'whois\', \'80\' : \'www\'} \'udp\': {\'53\' : \'domain\', \'514\' : \'rsh\', \'554\' : \'rtsp\',          \'80\' : \'www\', \'137\' : \'netbios-ns\', \'5060\' : \'sip\', \'123\' : \'ntp\'	} }</code></pre><details class=\"spoiler\"><summary>Эээ, GitLab?</summary><div class=\"spoiler__content\"><p>Здесь предполагается, что читатель знает что такое GitLab и CI.</p><p>В общих чертах, GitLab - это git со всякими штуками. Среди этих штук есть функционал, так называемых пайплайнов (pipelines). Пайплайн - это некая последовательность задач, где задачи либо не зависят друг от друга и выполняются параллельно, либо где где зависят и выполняются одна за одной. При этом запускаться они могут в ручную или самостоятельно. А еще они могут передавать между друг другом файлы и называется это артефактами.</p><p>С точки зрения операциониста, вся работа выглядит следующим образом:</p><p>1) Открыли IDE/веб-страницу.</p><p>2) Нажали 2-3 кнопки.</p><p>3) Отредактировали yaml-файл по аналогии, нажали еще кнопок.</p><p>4) Почитали что написано на экране, подумали, нажали кнопку.</p><p>5) Попросили аппрув, чтобы нажать последние пару кнопок, нажали их.</p><p>Всё.</p></div></details><p>В целом это вся логика, далее идем к админам, просим gitlab-runner и пустую репу, собираем контейнер, кладем в registry, и пишем CI состоящий из шагов:</p><ul><li><p>Build, где мы проверяем валидность ямла, группы в AD и собираем три текстовых файла: ACL, блоки DAP политик и файл dap.xml, через артефакты передаем их в следующие джобы.</p></li><li><p>Check, где мы берем артефакты из Build, пробегаем по всем фаерволлам в кластере и сравниваем боевые ACLы со сформированными. Выводим diff на экран. Если у нас появился или пропал какой-то ACL целиком - значит в наш diff попадет еще и создание/удаление DAP политики.</p></li><li><p>Deploy - делаем всё тоже самое, но с отправкой конфигурации. Удаляем/создаем ACE, удаляем/создаем ACL, которые тянут за собой редактирование блоков dynamic-access-policy, которые тянут за собой заливку dap.xml через SCP.</p></li></ul><p>CI настроен, права на репозиторий розданы, можно писать инструкцию для отдела техподдержки и идти собирать шишки.</p><h4>Шишка с DNS</h4><p>ASA не умеет делать ACL с FQDNами для DAP и это напрягает. Один отдел может перенести какой-то популярный сервис за другой nginx, никто об этом не узнает и не поменяет ip-адреса в гите, в итоге куча людей не сможет зайти по новому адресу, а техподдержка получит на утро кучу одинаковых заявок.</p><p>Решение: добавляем в конец ACE комментарий с FQDN указанного IP адреса, после чего пишем небольшой скрипт, который будет:</p><p>а) Обходить весь ямл, выдергивая комментарии regex`ом, и резолвить их во внутреннем сервисе (у одной из команд, по удачному стечению обстоятельств, нашелся сервис, который обходит все DNSы и забирает себе записи с внутренних доменов, эта команда великодушно сделала api-ручку, которую можно использовать для резолвинга, спасибо им).</p><p>б) Проходить ямл еще раз и проверять соответствует ли IP адрес в ACE адресу в словаре из прошлого пункта, если нет - собирать новую строку с правильным IP и реплейсом заменять на нее неправильную.</p><p>в) Создавать новый бранч с изменениями, подготавливать мердж реквест и рапортовать в слак, чтобы кто-нибудь просмотрел изменения и нажал кнопку Deploy.</p><p>Добавляем этот скрипт в крон и теперь будем сразу знать если у какого-то FQDN поменяется IP адрес.</p><h4>Шишка с аппрувами</h4><p>У нас бесплатный GitLab и встроенные аппрувы там не очень.</p><p>Пишем еще один скрипт, который включает в себя списки с инженерами ИБ, инженерами ТП и ходит в API гитлаба проверять кто merge request создал и кто его заапрувил.</p><p>Вставляем его в джобу, получается следующая логика:</p><p>Человек создает MR, на шаге с Check проверяет актуальность изменений, жмет деплой и он падает. В это время в выделенный слак-канал падает сообщение вида “Привет &lt;список ИБ>, смотрите что делает &lt;создавший MR инженер> в &lt;ссылка на дифф гитлаба>”.</p><p>Далее кто-то из ИБ жмет ссылку, принимает решение и жмет аппрув в гитлабе, после чего автор изменений еще раз жмет деплой, скрипт видит, что аппрув получен от одного из нужных людей и не падает.</p><h4>Шишка с HostScan</h4><p>Как говорится, аппетит приходит во время еды, а именно “Давайте проверять обновления на пользовательских ПК и рапортовать в техподдержку в случае отсутствия нужных патчей”.</p><p>Эдакий Posturing без ISE, давайте. Создаем LUA скрипт, который будет смотреть HostScan атрибуты и, если ПК не соответствует, возвращать true.</p><p>Пример:</p><pre><code class=\"lua\">assert(function()     function windows()         if  ( EVAL(endpoint.anyconnect.platform, \"EQ\", \"win\", \"string\")) then             return true         end     end          function hotfix()         if (             EVAL(endpoint.os.hotfix[\"KB_1\"],\"EQ\",\"true\", \"string\") or             EVAL(endpoint.os.hotfix[\"KB_2\"],\"EQ\",\"true\", \"string\") or             EVAL(endpoint.os.hotfix[\"KB_3\"],\"EQ\",\"true\", \"string\")             ) then                 return true             else                 return false             end     end          if (windows())then         if (             hotfix() == true         )then             return false         else             return true         end     end      end)()</code></pre><p>Данный код смотрит ОС пользователя и, если это Windows, проверяет наличие KB по списку. Если проверка не пройдена - возвращает true, на человека прилетает особая DAP политика и ее наличие означает что ПК без обновлений.</p><p>Теперь надо научится класть этот код на ASA. Для этого вставляем в функцию собирающую dap.xml следующий блок в определенное место:</p><pre><code class=\"python\">    if policy == \"&lt;особая группа с проверками>\":             advancedView = etree.SubElement(dapRecord, \'advancedView\')             advancedViewValue =  etree.SubElement(advancedView, \'value\')             advancedViewValue.text = \'_REPLACE_HERE_\'</code></pre><p>После чего реплейсим \'_REPLACE_HERE_\' на lua-скрипт.</p><p>Где KB - там и всё остальное: антивирусы, софт, ключи реестров и так далее. Скрипт начал распухать и пришлось писать парсеры логов на syslog-сервере, это было неудобно, но поделать что-то с этим было тяжело. Все смирились.</p><h4>Шишка с запрещающими правилами</h4><p>Со временем появились требования “закрыть всё, кроме”. Руками это обычно делается примерно так:</p><pre><code>access-list myACL line 1 extended permit tcp any host 10.0.0.1 eq 22 access-list myACL line 2 extended deny ip any 10.0.0.0 255.255.255.0</code></pre><p>Но, как можно догадаться, порядок ACE в репозитории не бьется с порядком ACE на ASA. Об этом не подумали в самом начале, поэтому приходилось вручную обходить все МСЭ и вставлять в нужные места запрещающие правила. Требования были не очень частые, но всё равно ручные действия напрягали. После этих изменений нужно было сходить в репозиторий и вставить туда эти правила с deny`ями, чтобы их не затер следующий деплой. С этим смирились тоже.</p><h2>Часть 2, где всё сожгли и сделали заново</h2><p>Так мы жили больше года, со временем dap.yaml распух до, почти, 2 тысяч строк. Общее количество политик было около сотни и мы начали в них тонуть. Дополнительно, за год собралось несколько фичреквестов, а именно:</p><ol><li><p>Object-group`ы. Есть, например, 10 контроллеров домена. На каждый контроллер нужно открыть примерно 10 портов. На выходе имеем 10*10 строк ACE - это не очень.</p></li><li><p>Наследование. На среднего разработчика нужно накинуть минимум штук 5 обязательных групп и еще столько же опциональных. Было бы здорово сразу говорить, что группа А включает в себя группы Б и В. Добавить группу в группу не работает, так как memberOf групп ASA не умеет.</p></li><li><p>Пачки портов. Если вынести порты в отдельное поле, будет лучше, так как вместо</p></li></ol><pre><code>permit tcp any host A eq 22 permit tcp any host A eq 23</code></pre><p>веселее писать</p><pre><code>permit tcp any host A eq [22,23]</code></pre><ol start=\"4\"><li><p>Поддержка очередности ACE - хочется вставлять deny в нужные места по флоу, а не руками.</p></li><li><p>Знать какие именно проверки не прошел пользователь. Со временем образовалась куча проверок и все в одном скрипте. Так как мы не нашли возможность писать в лог из LUA (debug-trace, пожалуйста, не предлагайте), то без хождения на syslog мы не знаем точную причину, почему человек зафейлил проверки.</p></li><li><p>Проверка команд из шага с diff`ом в деплое. Бывали случаи, что инженер ТП сделал MR и отправил на согласование. Diff ему показался адекватный, но пока он собирал аппрувы в слаке, коллега выкатил изменения из другого бранча и замержил в мастер. Деплой эти изменения в репозитории ожидаемо не видит и перетирает. В итоге доступ вроде как открыл, но он не работает.</p></li><li><p>Было бы здорово проставлять приоритет групп не хардкодом, а из ямла.</p></li></ol><p>Писать всё на чистом python, как выяснилось, довольно утомительно. Еще утомительней это поддерживать и допиливать. Поэтому было принято решение переписать всё с нуля, набело, да еще и на Nornir.</p><p>Новый dap.yaml будет иметь такой формат:</p><pre><code class=\"yaml\">DAP_Group_1:   rules:     - {line: 1, action: permit, proto: tcp, net: 10.0.0.1/32,     	ports: [\'10’,’20’,’30’,’40-60’], fqdn: \'our_server.domain.local.\'}</code></pre><p>Формат object-groups.yaml:</p><pre><code class=\"yaml\">Server_pack_1:   - {net: \'10.0.1.1/32\', fqdn: \'server_1.domain.local.\'}</code></pre><h4>Подготовка</h4><p>Сначала нам нужно всё-всё проверить, после чего переделать наши ямлы в конфиги, докинув туда все поля и подставив дефолтные значения (например приоритет группы).</p><p>Делаем еще один ямл с неким “скелетом” ключей и полями по умолчанию. Прогоняем все строки с правилами через этот ямл, проверяя поля на указанный в нем regex и подставляя дефолтовые значения в случае отсутствия каких-то ключей</p><pre><code class=\"yaml\"> # Это все возможные варианты параметров с вариантами их значений по умолчанию.  # dap.yaml acl_regex:   line: (^\\d+$)   action: (^permit$|^deny$)   proto: (^tcp$|^udp$|^icmp$|^ip$)   source: ((((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\/([1-9]|[12][0-9]|3[0-2])$)|any)   source_ports: (^\\d+$|^\\d+-\\d+$) # List   net: ((((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\/([1-9]|[12][0-9]|3[0-2])$)|any)   object: (^\\S+$)   ports: (^\\d+$|^\\d+-\\d+$) # List   fqdn: (^\\S+\\.$)  acl_defaults:   line: 9999999   action: \'\'   proto: \'\'   source: \'any\'   source_ports: []   net: \'\'   object: \'\'   ports: []   fqdn: \'\'  dap_policies_defaults:   priority: 50   action: \'\'   childrens: []   ad_group: \'\'   lua_script: \'\'   lua_script_content: \'\'  regex_objects:   net: ((((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\/([1-9]|[12][0-9]|3[0-2])$))   fqdn: (^\\S+\\.$)</code></pre><p>Далее можно озаботиться написанием кучи <a href=\"https://pythonru.com/uroki/35-instrukcija-assert-dlja-nachinajushhih\" rel=\"noopener noreferrer nofollow\">assert</a>`ов. Проверяем буквально всё: наличие ключей, отсутствие ключей, использование несовместимых между собой ключей (например, правило не может иметь поля <strong>object </strong>и <strong>net </strong>одновременно, либо ACE на группу, либо на ip), группы в AD, наличие в отдельной папке прилинкованных к политикам LUA-скриптов, номера портов, адреса и маски, и так далее - список можно продолжать довольно долго.</p><p>Следующий шаг - переделка ямлов в cli-конфиги. Жонглируем питоном и словарями, на выходе имеем два файла: конфиги для ACL и конфиги для DAP политик</p><p>На выходе получаем такого рода файл с ACL:</p><pre><code class=\"yaml\">DAP_Group_1:   access-list nr_ACL_DAP_Group_1 extended permit icmp any any: \'1\'   access-list nr_ACL_DAP_Group_1 extended deny ip any 192.168.0 255.255.255.0: \'2\'   access-list nr_ACL_DAP_Group_1 extended permit tcp any host 192.168.1.1 eq 22: null   access-list nr_ACL_DAP_Group_1 extended permit ip any any: null DAP_Group_2:  ....</code></pre><p>Можно заметить, что ключом выступает ACE, а значением либо цифра, либо null. Цифра забирается из поля line. Если оно отсутствует - кладем в него 9999999 из дефолтов, далее сортируем список от малого к большому и заменяем 9999999 на null. Это нужно чтобы в дальнейшим сравнивать номер линии с реальной и двигать правила в нужном нам порядке. Еще я бы рекомендовал приклеивать к ACL префиксы, чтобы при дальнейшем сравнении не затрагивать другие ACL, которые не имеют отношения к DAP политикам.</p><p>Так будет выглядеть файл с DAP политиками:</p><pre><code class=\"yaml\">DAP_Group_1:   rules: []   priority: 50   action: \'\'   childrens:   - nr_ACL_DAP_Group_1   ad_group: DAP_Group_1   lua_script: \'\'   lua_script_content: \'\' DAP_Group_2: 	...</code></pre><ul><li><p>action в данном случае означает action DAP политики, он может быть continue\\quarantine\\terminate. По умолчанию он continue и в show run не показывается (только в show run all) , отсюда и пустое значение.</p></li><li><p>childrens - это ACLы, которые будут привязываться к группе. По умолчанию подставляем туда префикс ACL + имя политики, а если поле childrens заполнено в ямле - аналогично, но с добавлением префикс + имена всех политик из этого поля. С помощью этого, мы можем добиться аналога наследования: при добавлении пользователя в группу с childrens, на него будет прилетать ACL этой группы плюс всех групп, указанных в этом поле.</p></li><li><p>ad_group - на какую AD группу мы будем привязывать политику, по умолчанию оно берется из названия группы, если не указано иное.</p></li><li><p>lua_script - имя файла LUA-скрипта из соседней директории.</p></li><li><p>lua_script_content - содержимое этого файла (заполняется автоматически из файла в lua_script).</p></li><li><p>rules перекладывается из заполненного сета с правилами и очищается, так как здесь он нам не нужен.</p></li></ul><p>С подготовкой покончено, можем приступать к самому интересному, а именно к проверке и деплою конфигураций с помощью Nornir.</p><p>Если вы с ним никогда не работали и ничего о нем не знаете, то вот <a href=\"https://www.cbtnuggets.com/it-training/networking/network-automation-cisco-python\" rel=\"noopener noreferrer nofollow\">этот </a>курс довольно неплох.</p><p>Для начала я бы рекомендовал проверять живость устройств из inventory и аварийно завершать работу скрипта, если хотя бы одно устройство из всех не ответило нам по ssh. Причины этому могут быть разные, но, если на устройство не удалось залогиниться по ssh - это не значит что оно не работает и к нему не подключаются клиенты, а расхождение конфигураций на разных устройствах кластера более чем неприятно.</p><p>Делаем следующую функцию:</p><pre><code class=\"python\">def is_alive(nr):     def show_version(task):         r = task.run(task=netmiko_send_command, command_string=\'show version\')     result = nr.run(task=show_version)     for host in result.keys():         if result[host].failed:             colors.print(f\'{host} [red]FAILED[/red]\')         else:             colors.print(f\'{host} [green]OK[/green]\')</code></pre><p>Если хост не отдаст show version, он пометится как failed, далее можем посмотреть есть ли у нас зафейленные хосты (if len(nr.data.failed_hosts) > 0) и прекратить выполнение.</p><p>Далее, можно начать обработку object-group. Сделаем общую для всех функцию, куда будем добавлять, так называемые, функции-действия. В данном случае их пока будет три: загружаем текущее с устройства, сравниваем сами группы, сравниваем наполнение групп. Вот первая:</p><pre><code class=\"python\">def main(task):     download_object_groups(task)     compare_object_groups(task)     compare_object_groups_nets(task)  def download_object_groups(task):     r = task.run(task=netmiko_send_command,                     command_string=f\"show run object-group network\",                     name=\'Downloading object-groups from devices\',                     use_textfsm = True,                     severity_level=logging.DEBUG)     text.host[“textfsm_objects”] = r.result ...</code></pre><details class=\"spoiler\"><summary>А это то что?</summary><div class=\"spoiler__content\"><p>На этом моменте предполагается, что читатель знает что такое TextFSM, genie и как их использовать.</p><p>Про первое и многое другое можно почитать <a href=\"https://pyneng.readthedocs.io/ru/latest/\" rel=\"noopener noreferrer nofollow\">здесь</a>.</p><p>Про второе было в курсе, который я недавно упоминал. В целом, в случае парсеров конфигов - это похожая штука.</p><p>В случае обычного netmiko всё тоже самое: ...send_command(\"...\", use_genie=True)</p></div></details><p>TextFSM:</p><pre><code>Value Filldown,Required NAME (\\S+) Value List NETWORK (\\d+\\.\\d+\\.\\d+\\.\\d+\\s+\\d+\\.\\d+\\.\\d+\\.\\d+) Value List HOST (\\d+\\.\\d+\\.\\d+\\.\\d+)  Start   ^object-group -> Continue.Record   ^object-group\\s+network\\s+${NAME}\\s*   ^\\s+network-object\\s+${NETWORK}   ^\\s+network-object\\s+host\\s+${HOST} End</code></pre><p>На первом шаге (download_object_groups) у нас получится список словарей (спасибо TextFSM) с информацией о настроенной object-group`ах, которые мы сравним с object-groups.yaml. На выходе после всех трёх шагов получаем некие списки того, что добавилось, что удалилось и что на что нужно поменять, у меня получились следующие переменные:</p><pre><code class=\"python\">task.host[\'objects_to_add\'] - группы объектов на создание (имена) task.host[\'objects_to_del\'] - группы объектов на удаление (имена) task.host[\'nets_to_add\'] - объекты в группах на создание task.host[\'nets_to_del\'] - объекты в группах на удаление</code></pre><p>После этого, можем идти описывать темплейт на Jinja2:</p><pre><code class=\"python\">{######### Object-Groups #########} {# Создание Object-group #} {% if host.objects_to_add is defined and host.objects_to_add|length>0 %} ! !!! Adding object-groups ! {% for object_group in host.objects_to_add %} object-group network {{object_group}} {% for net in host.configured_object_groups[object_group] %}  network-object {{ net }} {% endfor %} {% endfor %} ! {% endif %} {# Добавление вхождений Object-group #} {% if host.nets_to_add is defined and host.nets_to_add|length>0 %} ! !!! Adding new object-groups entries ! {% for object_group in host.nets_to_add %} object-group network {{ object_group }} {% for net in host.nets_to_add[object_group]%}  network-object {{ net }} {% endfor %} {% endfor %} ! {% endif %} {# Удаление вхождений Object-group #} {% if host.nets_to_del is defined and host.nets_to_del|length>0 %} ! !!! Deleting not discribed object entries ! {% for object_group in host.nets_to_del %} object-group network {{ object_group }} {% for net in host.nets_to_del[object_group]%}  no network-object {{ net }} {% endfor %} {% endfor %} ! {% endif %} {##}</code></pre><p>В реальной жизни, так как нам нужно соблюдать порядок при создании и удалении политик, проще писать все cli-команды в один темплейт, а не разделять его на несколько темплейтов для разных кусков.</p><p>Конфиг на рендеринг темплейта и деплой:</p><pre><code class=\"python\">def build_from_template(task):     task.host[\'commands\'] = list()     r = task.run(task=template_file,                 path=f\'./j2_templates/\',                 template=\'object-groups.j2\',                 name=\'Building Object Groups configuration from template...\',                 severity_level=logging.INFO)     output = r.result.splitlines()     task.host[\'commands\'] = output  def deploy_config(task):     if len(task.host[\'commands\']) > 0:         task.run(task=netmiko_send_config,                 config_commands=task.host[\'commands\'],                 name=\'Applying Object Groups configuration....\',                 severity_level=logging.INFO)</code></pre><p>В целом это всё, что нужно для приведения состояния конфигов object-group к ямлу.</p><p>Делаем то же самое для ACL. На данном шаге нам не пригодятся ни TextFSM, ни <a href=\"https://pubhub.devnetcloud.com/media/genie-feature-browser/docs/#/parsers\" rel=\"noopener noreferrer nofollow\">genie</a>, благодаря переформатированию из подготовки, у нас уже есть сформированный словарь с названием групп и самими ACL, поэтому берем нехитрый regex и забираем все ACL с нашим префиксом (опять же, чтобы не трогать ACLы для других задач). Далее собираем словарь с этими данными и номерами линий:</p><pre><code class=\"python\">regex_acl = re.compile(\'access-list (\\S+) line (\\d+) extended (.+)\\s(\\(hitcnt.+)\')  def download_acls(task):     r = task.run(task=netmiko_send_command,                     command_string=f\"show access-list | i ^access-list {acl_prefix}\",                     name=\'Collecting access-list....\',                     use_timing = True,                     severity_level=logging.DEBUG)     task.host[\'current_raw_acls\'] = r.result.splitlines()     task.host[\'acl_map\'] = dict()     for ace in task.host[\'current_raw_acls\']:         if len(regex_acl.findall(ace)) > 0:             acl_name, ace_line, ace_rule, _ = regex_acl.findall(ace)[0]             policy_name = acl_name.replace(acl_prefix, \'\')             rule_from_config = f\'access-list {acl_name} extended {ace_rule}\'             task.host[\'acl_map\'].setdefault(policy_name, dict())             task.host[\'acl_map\'][policy_name][rule_from_config] = ace_line</code></pre><p>Следующим шагом сравниваем наш acl_map c текущим конфигом, жонглируем номерами строк и получаем списки того, что нужно удалить/создать. Например, так выглядит словарь, из которого будут создаваться новые правила, и в которых присутствуют номера line:</p><pre><code class=\"python\">ipdb> print(nr.inventory.hosts[\'my_host\'][\'ace_to_add\'])  {     \'Group_1\': [         \'access-list nr_ACL_Group_1 line 1 extended permit tcp any any eq domain\',         \'access-list nr_ACL_Group_1 line 2 extended permit tcp any any eq 5353\',         \'access-list nr_ACL_Group_1 extended permit udp any any eq 5353\',         \'access-list nr_ACL_Group_1 extended permit udp any any eq ntp\'     ] }</code></pre><p><strong>Совет 1: </strong>Настоятельно рекомендую использовать модуль ipdb, с его помощью можно в любой момент провалиться в дебаг и “на горячую” смотреть переменные хостов, как в примере выше.</p><p><strong>Совет 2: </strong>Так как существует разница конфигурации ACL c линиями, лучше сначала применять правила, в которых очередность указана, и при этом начинать с самой маленькой цифры. Благодаря этому, правила сразу встанут в нужный вам порядок.</p><p>Когда с ACL покончено, осталась всего одна сущность - DAP политики.</p><p>По такой же логике, что и с object-group`ами, сравниваем блоки dynamic-access-policy. TextFSM:</p><pre><code>Value Filldown,Required NAME (\\S+) Value List CHILDRENS (\\S+) Value ACTION (\\S+) Value PRIORITY (\\d+)  Start   ^dynamic-access-policy-record  -> Continue.Record   ^dynamic-access-policy-record\\s${NAME}   ^\\s+network-acl\\s+${CHILDRENS}   ^\\s+action\\s+${ACTION}   ^\\s+priority\\s+${PRIORITY} End</code></pre><p>Следующим шагом, в любом случае, формируем dap.xml.</p><p>Темплейт Jinja2 представлен ниже (в переменной host[\'yaml_daps\'] лежит ямл нашего файла c DAP политиками из шагов подготовки):</p><pre><code class=\"python\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> &lt;dapRecordList> {% for policy in host[\'yaml_daps\'] %} &lt;dapRecord> &lt;dapName> &lt;value>{{ policy }}&lt;/value> &lt;/dapName> &lt;dapViewsRelation> &lt;value>and&lt;/value> &lt;/dapViewsRelation> {% if host[\'yaml_daps\'][policy][\'lua_script_content\'] is defined and host[\'yaml_daps\'][policy][\'lua_script_content\']|length>0 %} &lt;advancedView> &lt;value>{{ host[\'yaml_daps\'][policy][\'lua_script_content\']}} &lt;/value> &lt;/advancedView> {% endif %} &lt;dapBasicView> &lt;dapSelection> &lt;dapPolicy> &lt;value>match-all&lt;/value> &lt;/dapPolicy> &lt;attr> &lt;name>aaa.ldap.memberOf&lt;/name> &lt;value>{{ host[\'yaml_daps\'][policy][\'ad_group\'] }}&lt;/value> &lt;operation>EQ&lt;/operation> &lt;type>caseless&lt;/type> &lt;/attr> &lt;/dapSelection> &lt;/dapBasicView> &lt;/dapRecord> {% endfor %} &lt;/dapRecordList></code></pre><p>Аналогично предыдущему шагу, рендерим и кладем его в переменную task.host[\'xml\'] и в артефакты, после чего скачиваем такой же с устройства, перекладываем в словарь, сравниваем, и в случае несовпадения, создаем флаг о том, что нужна перекатка:</p><pre><code class=\"python\">def download_and_compare_xml(task):     task.host[\'need_xml\'] = 0     xml_on_device = task.run(task=netmiko_send_command,         										command_string=\'more disk0:/dap.xml\',         										name=\'Downloading XML file\',         										use_timing = True,         										severity_level=logging.DEBUG)     task.host[\'xml_on_device\'] = xml_on_device.result     task.host[\'xml_on_device_dict\'] = json.loads(json.dumps(xmltodict.parse(task.host[\'xml_on_device\'])))     task.host[\'xml_dict\'] = json.loads(json.dumps(xmltodict.parse(task.host[\'xml\'])))     if task.host[\'xml_dict\'] != task.host[\'xml_on_device_dict\']:         colors.print(f\'[gold1]!\\ndap.xml на [magenta]{task.host}[/magenta] не соответствует сформированному, необходим деплой\\n![/gold1]\')         task.host[\'need_xml\'] = 1</code></pre><p>Итого, если на шаге планирования изменений на каком-то устройстве dap.xml будет не соответствовать описанному, мы получим необходимый флаг и готовый xml в директории с артефактами, загрузить его мы можем через scp (будет не лишним добавить сюда бекап старого файла и активацию нового командой dynamic-access-policy-config activate):</p><pre><code class=\"python\">def upload_file(task):     upload = task.run(task=netmiko_file_transfer, 											source_file=f\'{artifacts}/{task.host}_dap.xml\', 											dest_file=\'dap.xml\', 											file_system=\'disk0:/\', 											overwrite_file = True, 											name=\'Uploading XML File...\', 											severity_level=logging.INFO)</code></pre><p>В целом, в плане кода это всё, и мы можем приступать к созданию Dockerfile и CI, но сначала хочу обратить ваше внимание на несколько нюансов:</p><h4>Сохранять итоги темплейтов в артефакты</h4><p>Это принесет пользу в том плане, что позволит нам проверять актуальность планируемых команд на шаге с деплоем, на случай если кто-то рядом выкатил другую ветку, а мы не сделали rebase. Для этого сортируем task.host[\'commands\'] и сохраняем в папку с артефактами с именем устройства (что-нибудь типа f’{task.host}_commands’), на шаге с деплоем аналогично, но без сохранения. Вместо этого сравниваем текущую переменную с артефактом, и если они разняться, значит явно что-то пошло не так и следует перезапустить план и еще раз на него посмотреть.</p><h4> Использовать аргументы запуска</h4><p>Так как по сути, план и деплой - это одно и то же действие (за исключением самого процесса деплоя), будет полезно использовать атрибуты запуска. Сделать это можно через библиотеку argparse, после чего обрабатывать дефолтные и заданные аргументы в коде. Например, мы можем разбить функцию main(), где содержится вообще всё, на две: всё, что про загрузки/сравнение/темплейты, и на ту, где происходит только деплой.</p><pre><code class=\"python\">plan = nr.run(task=plan_and_prepare, name=\'Plan function...\', severity_level=logging.DEBUG) print_result(plan, severity_level=log_level)  if args.deploy == True:     deploy = nr.run(task=deploy, name=\'Deploy function...\', severity_level=logging.DEBUG)     print_result(deploy, severity_level=log_level)</code></pre><p>А между ними сравнивать актуальность планируемых на ввод в CLI команд.</p><h4>Глобальные флаги и exit code</h4><p>Есть смысл использовать какую-нибудь глобальную переменную, чтобы понимать, что изменения вообще планируются. Логика следующая: в начале выполнения объявляем какой-нибудь changes_falg = 0, и если планируем хоть что-то делать, то выставляем его в 1. В самом конце говорим “если это dry run и флаг == 1 - пиши в консоль что изменения планируются и завершайся с особым exit code”, далее этот exit code мы сможем обработать в CI и завершить джобу с варнингом или ошибкой. Варнинг привлечет внимание, а ошибка не позволит двигаться дальше по пайплайну.</p><details class=\"spoiler\"><summary>Что тут может случиться</summary><div class=\"spoiler__content\"><p>А через месяц или два на эти варнинги забьют вообще все. Возможно имеет смысл включать его только при удалении чего-либо.</p></div></details><p>Дело за малым, собираем контейнер (тут есть явные излишки для данной задачи, но конкретно в моем случае данный раннер-контейнер обслуживает и другие аналогичные репозитории):</p><pre><code>FROM alpine:3.15  RUN set -x \\    &amp;&amp; apk --no-cache add bash curl jq \\                         python3 py3-pip python3-dev py3-paramiko py3-yaml \\                         openldap-clients libxml2 libxslt-dev libxml2-dev build-base git openssh \\                         build-base linux-headers py3-grpcio \\    &amp;&amp; pip3 install --upgrade pip \\    &amp;&amp; pip3 install --upgrade wheel \\    &amp;&amp; pip3 install --upgrade setuptools \\    &amp;&amp; pip3 install pyats \\    &amp;&amp; pip3 install nornir nornir_utils nornir_napalm nornir-netmiko nornir-paramiko \\    &amp;&amp; pip3 install nornir-jinja2 nornir-scrapli napalm-asa rich \\    &amp;&amp; pip3 install genie ipdb ttp ipaddress tqdm python-gitlab</code></pre><p>(если хотим использовать ldaps при подключении к AD, можно через COPY подложить ldap.conf и сертификат в нужные места)</p><p>Пишем CI, определим якоря для последуюзих вызовов:</p><pre><code class=\"yaml\">.base_connection: &amp;base_connection   - cp ./some_folder/base_connection.py /usr/lib/python3.9/site-packages/netmiko/base_connection.py   .template_plan: &amp;template_plan   before_script:     - *base_connection   rules:     - if: $CI_PIPELINE_SOURCE == \"schedule\"       when: never     - changes:         - dap/*         - inventory/*         - lua_scripts/*   artifacts:     when: always     paths:       - ./nornir.log       - ./artifacts/*   .template_deploy: &amp;template_deploy   before_script:     - *base_connection   rules:     - if: $CI_PIPELINE_SOURCE == \"schedule\"       when: never     - when: manual   allow_failure:     exit_codes:       - 127   artifacts:     when: always     paths:       - ./nornir.log       - ./artifacts/*</code></pre><p>В этом куске мы перекладываем некий файл с дефолтами netmiko, чтобы не сталкиваться с ошибкой <em>netmiko.ssh_exception.NetmikoTimeoutException: Paramiko: \'No existing session\' error: try increasing \'conn_timeout\' to 10 seconds or larger</em>, а также говорим, что exit code 127 - это допустимо и следует завершаться со статусом Warning, привлекая внимание. Сам же exit-code спускаем из python, в случаях когда это необходимо (например, в случаях планируемых изменений).</p><p>Ну и примерно так будут выглядеть сами джобы:</p><pre><code class=\"yaml\">stages:   - check   - plan   - approves   - deploy   Check:   &lt;&lt;: *template_plan   stage: check   script:     - mkdir ./artifacts     - python3 -u ./check_syntax.py     - python3 -u ./make_file_acls.py     - python3 -u ./make_file_dap.py   Plan:   &lt;&lt;: *template_plan   stage: plan   script:     - python3 -u nornir_script.py   needs:     - job: Check   allow_failure:     exit_codes:       - 127   Approves:   &lt;&lt;: *template_deploy   stage: approves   script:     - python3 -u ./approves.py   needs:     - job: Plan   Deploy:   &lt;&lt;: *template_deploy   stage: deploy   script:     - python3 -u ./nornir_script.py --no-dry-run   needs:     - job: Approves </code></pre><p>Всё.</p><h2>Мониторинг</h2><p>Мониторинга здесь в целом три.</p><p>Процессор/память/количество подключений - стандартно через SNMP, здесь ничего интересного.</p><h4>Syslog</h4><p>Syslog со всеми сообщениями про атрибуты HostScan и логами о сетевых сессиях клиентов улетает в GrayLog, где сообщения разбиваются по полям и заполняют собой дашборд с информацией кто подключался, когда, куда заходил, сколько трафика сгенерировал, под какие DAP группы попал(благодаря полям lua_script и ad_group, мы теперь можем делать много маленьких политик, вешать их на одну группу AD, и видеть какие именно проверки HostScan не прошел пользователь), с какого компьютера/города пользователь, что у него на компьютере установлено, какие файлы и сертификаты лежат. В общем всё, что можно вытащить через логи.</p><p>Тут тоже есть нюанс: при отправке большого количества стоит периодически посматривать в статистику sho log queue и show log - из-за небольшого размера очереди по умолчанию (logging queue) есть риск столкнуться с дропами логов, иногда нужно будет расширять очередь.</p><p><strong>Prometheus.</strong></p><p>Здесь мы забираем вывод show vpn-session detail anyconnect, парсим его и отрисовываем в метриках статистику по версиям Anyconnect, платформам, соотношением клиентов на DTLS/TLS, количеству дропнутых логов и так далее.</p><p>Способов тут не так что бы очень много: складывать метрики в текстовом виде на диск и далее читать оттуда данные через node-exporter, либо написать свой маленький экспортер, который при обращении на него через веб будет бегать на железо и отрисовывать те же метрики в вебе.</p><p>Сюда же можно вынести парсер и алерт на скорое истечение сертификатов, ASP дропы, а актуальность правил из dap.yaml можно также проверять следующим способом:</p><ol><li><p>Раз в N времени обходим все МСЭ, забираем всё из вывода show access-list | access-list DAP-ip-user.</p></li><li><p>Схлопываем одинаковые правила в ключ, после чего складываем хиткаунты всех таких одинаковых правил на всех фаерволлах. На выходе получаем словарь, где ключом служит ACE (например, permit any host 10.0.0.1 eq 22), а значением суммарное количество хиткаунтов такого правила на всех фаерволлах.</p></li><li><p>Отдаем в Prometheus. По крону обновляем информацию и видим, какие правила явно пользуются популярностью, а какие уже не являются актуальными и туда никто не ходит.</p></li></ol><h2>В итоге</h2><p>В итоге компания получила легко и понятно конфигурируемый VPN, для изменения которого не требуется каждый раз ходить к сетевику, а сетевик получил немного больше времени для занятия чем-то более интересным, чем по несколько раз (или десятков раз) в день обходить кучу ИБшников и устройств для закрытия совершенно одинаковых заявок.</p><p>Надеюсь, что данная статья хотя бы немного подтолкнет вас в сторону сетевой автоматизации и освободит часть вашего времени.</p><p>Спасибо.</p></div>');
INSERT INTO `articles` (`id`, `name`, `link`, `text`) VALUES
(17, 'Кто такой ML-инженер? ', '/ru/post/678594/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/4d5/e2f/336/4d5e2f336adbf852be27b372b1e4ad91.jpg\" width=\"1920\" height=\"1279\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/4d5/e2f/336/4d5e2f336adbf852be27b372b1e4ad91.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>Причина написания этой статьи - существующая неразбериха с терминами. Она особенно заметна в процессе поиска работы и релевантных вакансий. Одно и то же название может обозначать принципиально разные роли, и, наоборот, одна и та же по смыслу роль меняет свое название от компании к компании. Было бы классно иметь систему названий без таких конфликтов.</p><p>Disclaimer: разделение ниже - это мое личное мнение, которое далеко не всегда совпадает с реальным положением вещей. Это лишь мое предложение, как разные роли можно разделить.</p><h3>ML-engineer vs Data Scientist</h3><p>Начну с ролей, которые, согласно моему опыту, путают чаще всего. Одна и та же позиция может в разных компаниях называться и как Data Scientist, и как ML-инженер. В результате, когда я недавно искал работу, приходилось указывать оба эти названия. Иначе был риск пропустить что-то интересное и подходящее просто из-за путаницы в названиях. Если текущее состояние “неправильное”, то где <em>должно</em> проходить разделение между терминами?</p><p>Мне кажется, что ключевое отличие между ролью ML-инженера и Data Scientist-a - в том, что считается целью и главным результатом работы.</p><ul><li><p>Data Scientist “производит” публикации в научных журналах, как и другие ученые. Это объясняет слово “Scientist” в названии. Его основная цель - находить ответы на вопросы в науке о данных или корректно формулировать их. Например, предложить архитектуру глубоких сетей, лучше всего подходящую для улучшения качества изображений, описать наиболее эффективные техники аугментации данных для лучшей генерализации алгоритмов и т.д. На практике такие позиции часто имеют слово Research в названии. Applied Researcher, Research Data Scientist и т.д.</p></li><li><p>ML-инженер производит код, который решает задачи, используя машинное обучение. Это по определению более прикладная роль. Задачи здесь, это конкретные задачи компании, которые эффективнее всего решать с помощью машинного обучения. Важно отметить, что решением является не отдельная обученная модель, а именно код, система, куда входит и процесс подготовки данных, и метод обучения и дообучения моделей, и интерфейсы взаимодействия с уже существующими компонентами.</p></li></ul><p>Отличие целей проявляется и в обязательных критериях успешности проекта. Например, для работы Data Scientist-а важна новизна предложенного подхода (нет смысла публиковать научные статьи, которые копируют результат более ранних статей). Для ML-инженера важнее не новизна, а эффективность решения. Даже наоборот, лучше использовать проверенные подходы, а из всех решающих задачу алгоритмов выбирать самый простой и популярный. Потому что обычно задача ML-инженера не просто найти ответ на вопрос здесь и сейчас, а предложить решение с продуманным будущим: как использованные ML-модели будут дообучаться, насколько они устойчивы к изменению распределения признаков в данных, доступны ли вообще необходимые данные в production-среде и т.д.</p><p>Еще одно важное замечание касается используемых данных. Поскольку в научной среде необходимо иметь возможность воспроизводить результаты и корректно сравнивать разные решения, для многих задач существуют benchmark датасеты. Т.е. довольно часто входные данные для задач Data Scientist-а определены и фиксированы.  Для ML-инженера данные практически всегда не подготовлены заранее. Извлечение данных (как исторических, так и real-time), их предобработка, доступность и качество - открытый и нетривиальный вопрос. Именно его решение занимает львиную долю времени и часто улучшения именно здесь дают наибольший эффект.</p><h3>ML-engineer vs Software Engineer / Software Developer</h3><p>Если результатом работы и ML-engineer, и Software Engineer является код, то в чем разница между этими ролями? Очевидное различие, что ML-engineer использует ML для решения задач в дополнение к разработке ПО. Чуть менее очевидна разница в типичном процессе создания решения. Обязательной частью разработки решения с использованием ML является изучение данных (data exploration) и фаза экспериментов. Данные сами по себе - большой источник неопределенности. К сожалению, часто невозможно предсказать заранее, какое из решений даст лучший результат, пока они не протестированы на реальных данных. Это означает, что в планировании ML проектов необходимо закладывать время и ресурсы на эксперименты и на изучение данных. Это неизбежно, что часть разработанного кода в итоге не будет использоваться, само по себе это не является ошибкой планирования.  Другое дело, что чем более опытный и квалифицированный ML-инженер, тем эффективнее идет процесс экспериментирования. Меньше времени уходит на тестирование подходов, которые точно не дадут нужного уровня качества, не смогут быть использованы из-за органичений на скорость и память, не совместимы с архитектурой уже существующих сервисов и т.д.</p><h3>ML-engineer vs Data Analyst</h3><p>Эти два названия не так часто используют для описания одних и тех же позиций, но все же хочется провести границу и здесь. Да, и ML-инженер, и Data Analyst в первую очередь работают с данными. Но если ML-инженер решает конкретную проблему или добавляет новую функциональность, то Data Analyst в первую очередь ищет в данных ответы на вопросы. Хорошие ответы на вопросы позволяют принимать качественные решения.</p><p>Особый случай, когда Data Analytics не только <em>реагирует</em> на вопросы от бизнеса, но и действует <em>проактивно</em>. Т.е. строит систему аналитики, которая позволяет находить ответы на такие вопросы еще до того, как они будут конкретно сформулированы. Хорошая система аналитики - это эффективные органы чувств, позволяющие компании ориентироваться в реальном мире и правильно действовать с опорой на факты об этом мире, т.е. на релевантные данные. Тогда тоже можно сказать, что Data Analyst производит код, а не ответы на вопросы.</p><h3>Заключение</h3><p>Еще раз скажу, что мое мнение не претендует на абсолютную истину. Моей целью было предложить разделение понятий, чтобы меньше было путаницы и непонимания. И нам всем приходилось тратить меньше времени и сил на просмотр нерелевантных вакансий.</p></div>'),
(18, 'Как получить гражданство Армении (армянский паспорт) россиянину в 2022 году? ', '/ru/post/678600/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>В Российской Федерации существует стереотип со времен СССР, который можно выразить известным изречением: «Курица не птица, Болгария не заграница». Однако время идет вперед, в условиях конкуренции и независимости многие страны значительно преуспели в стабильном развитии при сохранении хороших отношений со всем миром. Многие столицы бывших советских республик Ереван, Тбилиси, Баку превратились в современные мегаполисы органично сочетающие последние достижения урбанизации с первозданной природной. Сегодня очередной пост про Армению, надеюсь финальный.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/515/f9d/25c/515f9d25ca4af2c74b92214a27deb0dc.jpg\" width=\"790\" height=\"488\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/515/f9d/25c/515f9d25ca4af2c74b92214a27deb0dc.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>Программы поддержки и развития бизнеса, быстрая регистрация субъектов предпринимательства, низкие налоги, возможность вести свое дело в независимой юрисдикции и работать по всему миру это то, к чему в 2022 году приковано внимание многих россиян.  </p><p>Среди стран, часто рассматриваемых для релокации, всегда присутствует Республика Армения. Близость культур, распространенность русского языка, возможности ведения бизнеса со всем миром позволяют Армении удерживать лидирующие позиции в рейтинге стран для перемещения бизнеса. Многие задумываются не только о временном переезде, но и о новом постоянном месте жительства.  </p><p>В этом случае речь идет не только о статусе ВНЖ, но и о получении нового паспорта с правами и обязанностями гражданина нового государства. Также большим плюсом нового статуса является то, что при получении гражданства Республики Армения не нужно отказываться от гражданства Российской Федерации, у стран подписан договор о двойном гражданстве.     </p><p>Стать гражданином Республики Армения можно в случае наличия в родословной армянских корней, а также в иных случаях, предусмотренных законодательством РА.  </p><p>Конечно, если будущий гражданин Армении родился в армянской семье и носит армянскую фамилию, то процесс получения гражданства максимально упрощается. Однако существует довольно серьезная трудность, многие армяне родившиеся и жившие вне Армении не говорят по армянски, а также не могут понять юридический смысл документов на армянском языке. И это становится проблемой, мало того что при получении гражданства сдается экзамен на знание армянского языка, еще и все документы составляются и оформляются на армянском.  </p><p>Итак, для получения гражданства Республики Армения этническим армянам можно обратиться в консульство РА в стране проживания, если таковое имеется. Также можно посетить родину предков и подать документы в Ереване. Срок рассмотрения составляет не менее 3 месяцев. </p><p>Общий пакет документов обычно состоит из:</p><ul><li><p> паспорта гражданина, желающего получить гражданство Республики Армения.</p></li><li><p> анкеты подающего на гражданство на армянском языке.</p></li><li><p> свидетельства о рождении, а также иных документов подтверждающих армянские корни, которые часто определяются в каждом конкретном случае.</p></li></ul><p>Все документы должны быть профессионально переведены на армянский язык с сохранением стилистики нюансов подтверждающих этническую принадлежность и армянские корни. После рассмотрения пакета новые граждане Республики Армения приносят клятву государству и получают паспорт РА с правами и обязанностями граждан страны.    </p><p>Если вы россиянин, или представитель другой страны, не имеющий армянские корни, то быстро получить гражданство вы можете лишь за определенные заслуги перед Арменией. Прежде всего они связаны с инвестициями.</p><p>Если вы инвестор, у вас компания в Армении, вы создаете рабочие места - можете пробовать. Вам не нужно будет проходить стандартные процедуры в эмиграционной службе и ОВИРЕ, можете подаваться прямо через канцелярию премьер-министра.</p><p><br/>Что делать, если вы простой гражданин РФ, или другой страны, не имеющий армянские корни, но желающий подать на гражданство и вы пока еще не большой инвестор, давно работающий в Армении?</p><p>Прежде всего и совершенно точно, по приезду в Армению, вы не сможете сразу податься на гражданство. Не стоит серьезно воспринимать спойлеры различных консалтинговых фирм типа «гражданство под ключ быстро». Основное и необходимое условие для иностранного гражданина, в том числе россиянина, претендующего на получение гражданства Армении — это проживание на территории Армянской Республики на протяжении последних трёх лет.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/038/952/540/038952540cb667f134254dd171a6461a.jpg\" width=\"1860\" height=\"1036\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/038/952/540/038952540cb667f134254dd171a6461a.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>В качестве подтверждения этого условия, в паспортно-визовое управление, помимо прочих документов, подается справка о постоянном проживании в РА за последние 3 года.</p><p> Существует два документа, которые подходят в качестве подтверждающих право иностранца на постоянное проживание в РА.</p><p>1) ВНЖ (Вид на жительство), получение ВНЖ возможно через открытие бизнеса в РА (эта форма является основанием для подачи на гражданство через 3 года)</p><p>2) Справка, подтверждающая законность проживания.  Эта форма временного вида на жительство существует с января 2022 года, и ее статус для подачи на гражданство не известен.</p><p>По сути, ВНЖ - Вид на жительство на данный момент, является отправной точкой для гражданина РФ, Белоруссии или другой страны, не являющегося этническим армянином к получению гражданства Армении.</p><p>Подаваться на ВНЖ можно, приехав в Армению впервые. Подробная схема подачи документов также различные варианты их получения в Армении описаны <a href=\"https://habr.com/ru/post/669666/\" rel=\"noopener noreferrer nofollow\">ЗДЕСЬ</a></p><p>Наличие вида на жительство не принуждает вас оставаться в Армении в течение 3-х лет, так как основной путь подачи документов на ВНЖ Армении - через открытие фирмы, то есть бизнеса, который вы можете вести или вынуждены вести удаленно.</p><p> Дополнительными требованиями к подающим на гражданство являются:</p><ul><li><p>возраст - допускаются только совершеннолетие.</p></li><li><p>владение армянским языком на базовом уровне (перед подачей документов, претендент 	проходит тестирование)</p></li><li><p>знание конституции Армении (перед подачей документов, претендент проходит 	тестирование).</p><p>Для подачи документов на гражданство Армении вы идете в паспортно-визовое управление полиции Армении.</p></li></ul><p> Список документов для оформления гражданства Армении:</p><ul><li><p>заявления на выдачу гражданства.</p></li><li><p>автобиографии.</p></li><li><p>паспорт РФ, ксерокопия</p></li><li><p>4 фотографии 35х45.</p></li><li><p>медицинская 	справка.</p></li><li><p>справка о постоянном проживании в РА за последние 3 года.</p></li></ul><p>Для того, чтобы дойти до финального этапа, нужно, в течение 3-х лет, каждый год (заранее, за месяц до экспирации) продлевать статус резидента, (продлевать ВНЖ). Процедура продления такая же, как процедура подачи на ВНЖ и детально она описана <a href=\"https://habr.com/ru/post/669666/\" rel=\"noopener noreferrer nofollow\">ТУТ</a>.</p><p>После получения гражданства, можно будет воспользоваться отличными инвестиционными возможностями в стране, получите безвизовый режим во множество стран. Безвизовый режим у Армении с 61 страной, у России с 68 странами.</p><p>Соглашение о всеобъемлющем и расширенном партнёрстве с Евросоюзом и более чем теплыми взаимоотношениями с Французской республикой и одновременно добрососедскими отношениями с РФ делают Армению своеобразным мостиком безопасности.</p><p>Это, думаю, единственная страна, помимо Белоруссии, где вы спокойно везде от магазина до гос. учреждения можете спокойно общаться на русском языке. Единственный обнаруженный минус гражданства - это обязательное несение срочной службы – для граждан в возрасте от 20 до 25 лет, поэтому определенной группе граждан, младше 22-х, стоит задуматься, не задержаться ли в Армении, на несколько лет только под ВНЖ. Под ВНЖ военной обязанности нет.</p><p>Закончу, пожалуй, мистикой, словами очень интересного американского дедушки, которого я встретил у нотариальной конторы, и который, судя по его рассказам релоцировался из США. Я спросил его, «почему Армения?» и он ответил: «Армения стоит на границе исламского и христианского мира, в Армении пересекаются интересы всех государств мира и именно она является своеобразным Ноевым Ковчегом на случай всемирного потопа», дедушка был республиканец, как он появился в Армении - неясно, но было очень интересно.</p><p>Стоит отметить, что большинство исследователей разыскивают тот самый Ноев Ковчег именно вокруг Арарата.</p><p>Еще по теме: <a href=\"https://habr.com/ru/post/671052/\" rel=\"noopener noreferrer nofollow\"><strong>Как открыть ИП и ООО в Армении в 2022 году?</strong></a></p><p></p></div>'),
(19, 'Как мы решили поддерживать ретроигрострой и что у нас получилось ', '/ru/post/678602/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Где-то году в 2014 меня внезапно накрыла идея поиграть в старые игры для ZX Spectrum, в которые мы с друзьями шпилили в школе после (и вместо) уроков, менялись кассетами, переписывали их и создавали свои сборники. А также посмотреть и поиграть во все остальные игры, на которые не хватило времени или они вообще не заезжали на нашу «тучу» и даже в Россию. Но эта статья не про мемуары, а про то, что есть сейчас и что будет в будущем.</p><p>В том далёком 2014 году в сети уже существовали библиотеки старых игр, некоторые более-менее полные. Например, архив <a href=\"https://worldofspectrum.org/\" rel=\"noopener noreferrer nofollow\">WoS</a>, собранный энтузиастами из Европы (где спектрум был наиболее распространён) был лучшим на тот момент, но не без проблем: часть игр находилась под копирайтами, и, соответственно, бинарников (то есть образов кассет) к страницам игр приложено не было.</p><p>Кроме того, к сайту был прикручен очень убогий онлайн-эмулятор, и чтобы нормально поиграть в игру нужно скачать бинарник и запустить его под оффлайновым эмулятором. А это значительно усложняло весь процесс просмотра игр. Нужно отметить, что игр под ZX Spectrum было написано около 25 тысяч штук и если скачивать каждую, а потом загружать в оффлайн-эмулятор, то нужно потратить, наверное, полгода, чтобы просто бегло просмотреть все.</p><p>Для устранения всех вышеописанных проблем я решил написать <a href=\"https://viva-games.ru\" rel=\"noopener noreferrer nofollow\">свой собственный сайт</a> с играми, максимально комфортный для просмотра и дальнейшей игры в ретро-игры под ZX Spectrum.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d0d/57d/09a/d0d57d09a953a1b1070275ef6da755bc.png\" width=\"1241\" height=\"740\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d0d/57d/09a/d0d57d09a953a1b1070275ef6da755bc.png\"/><figcaption></figcaption></figure><p>За полгода работы фактически с нуля был сделан эмулятор на Java (который потом был переписан на JS, так как поддержку сниппетов Java выпилили из браузеров), собрано максимальное количество информации по всем играм, включая бинарные файлы. В эмуляторе добавлен режим сохранения, чтобы можно было проходить игры с комфортом. В самом сайте можно сохранять списки любимых игр, пройденных игр и тому подобное.</p><p>Так Viva Games работает до сих пор, нарушает копирайты, и там отсутствует какая-либо монетизация. Сайт на российском домене, на русском языке, а более 90% посетителей – из России или стран бывшего союза. Возможно, поэтому к нам до сих пор никто не пришёл с жалобой на копирайты. Хотя нет, пару раз приходили поляки с просьбой удалить их игры с сайта.</p><p>Примерно в 2018 году мне и некоторым другим любителям платформы ZX Spectrum пришла в голову идея попользовать свой жизненный опыт и навыки, полученные в серьёзных коммерческих проектах, для разработки игр под ZX Spectrum. К слову сказать, разработка игр под спек не прекращалась никогда, в год выходило до десятка титлов, но именно тогда начался бум ретро-игр (видимо, сорокалетние старпёры начали скучать по своим молодым годам). И вместо того, чтобы выкладывать свои поделки куда-то на бесплатной основе, мы решили попытаться хоть как-нибудь монетизировать своё творчество. А такая мечта, кстати, тоже была в молодости – мол, вот напишем крутую мега игру и будем диски продавать :)</p><p>Выкладывать игры на Viva Games, чтобы монетизировать – не вариант. Поэтому был создан новый сайт, <a href=\"https://zxonline.net\" rel=\"noopener noreferrer nofollow\">ZX Online</a>, уже с международным уклоном (встроенная поддержка трёх основных языков платформы ZX Spectrum), и для того, чтобы избежать каких-либо проблем с копирайтами, мы решили публиковать игры только тех авторов, которые сами пожелают разместить свои продукты на этой площадке. Проще говоря, получился очень нишевый маркетплейс.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/64d/56a/bd6/64d56abd608ea10786366027878d3bdc.png\" width=\"1179\" height=\"872\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/64d/56a/bd6/64d56abd608ea10786366027878d3bdc.png\"/><figcaption></figcaption></figure><p>Первые несколько опубликованных игр показали неплохие результаты. Несмотря на то, что активных пользователей на ZX Spectrum сейчас всего 20-25 тысяч во всём мире (об этом говорят цифры в пабликах на Facebook), за некоторые из игр удалось выручить более 10 тысяч евро (за каждую). Неплохо для компьютера из 80х годов, обладающего памятью до 128 кБайт?</p><p>Ретро-бум в компьютерных играх породил и ренессанс железа этих самых платформ. Для ZX Spectrum, например, группой энтузиастов из Европы не без помощи Kickstarter разработан официальный наследник – <a href=\"https://www.specnext.com/\" rel=\"noopener noreferrer nofollow\">ZX Spectrum Next</a>, обладающий не только полной совместимостью со всеми предыдущими моделями, но и феноменальной графикой с поддержкой 512 цветов на пиксель, аппаратными спрайтами, 9 каналами полифонической музыки, 27 МГц для Z80 и много чем ещё. Есть и клоны ZX Spectrum, разработанные соотечественниками, например, ZX Evolution, получившие меньшее распространение, но от этого не менее важные для платформы в целом.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/908/baf/7bc/908baf7bcf81d2911761da1a1f32202a.jpg\" width=\"1366\" height=\"892\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/908/baf/7bc/908baf7bcf81d2911761da1a1f32202a.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>Энтузиасты, пусть и не сразу, подхватили эти новшества и начали писать софт и игры под «новый спектрум». И, надо заметить, что за новые разработки потребители игр заносят неплохую (по меркам ретро-комьюнити) денежку.</p><p>Что касается проекта ZX Online, то сейчас он продолжает набирать обороты. Мы принимаем к публикации любые игры, которые могут быть запущены на классическом ZX Spectrum, его клонах или ZX Spectrum Next. Поддерживаем связь с разработчиками новых игр (которые с каждым годом становятся всё сложнее и интереснее). Регулярно выплачиваем и отечественным, и зарубежным разработчикам заработанное (на данный момент ничего не оставляя себе, работаем на энтузиазме и вере в светлое будущее платформы), производим пиар-акции в соцсетях, делаем рассылки, ищем обходные пути и лазейки, чтобы предоставить возможность покупать и продавать по всему миру. Весной мы провели конкурс игр ZX Online Awards 2022 и планируем повторить в следующем году (по-моему, всем понравилось).</p><p>В голове масса планов по улучшению ресурса и реализации новых функций.</p><p>В общем, друзья! На самом деле я хотел не просто рассказать вам о проекте ZX Online, но и как-то подбодрить, мотивировать на первый шаг в интереснейшем деле ретро-игро-строения. Если вы в прошлом фанатели от ZX Spectrum и у вас была мысль написать что-то своё – почему бы не тряхнуть стариной и не попробовать воплотить в жизнь детские фантазии?</p><p>Готов ответить на любые вопросы в комментариях, самые интересные перенесу в текст статьи.</p><p>P.S. Да, мы в курсе, что уже давно существует файловый архив itch.io, где энтузиасты выкладывают новые разработки, в том числе и игры для ZX Spectrum. Но у itch.io нет и<br/> никогда не будет той спектрумской специфики и той свободы, которую могут реализовать<br/> и оценить только истинные фанаты.</p></div>'),
(20, 'Коэффициент однозначности и алгоритм Витерби ', '/ru/post/678604/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Речь пойдёт об алгоритме Витерби, коэффициенте однозначности, о смысловом их сходстве и различии.  </p><p>Для Витерби должны быть даны или рассчитаны: вероятности скрытых начальных состояний, переходные вероятности и вероятности выбросов. </p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/e08/587/562/e08587562c4b602200b02649e5e9da5f.jpg\" alt=\"https://towardsdatascience.com/markov-chains-and-hmms-ceaf2c854788\" title=\"https://towardsdatascience.com/markov-chains-and-hmms-ceaf2c854788\" width=\"3127\" height=\"2505\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e08/587/562/e08587562c4b602200b02649e5e9da5f.jpg\" data-blurred=\"true\"/><figcaption>https://towardsdatascience.com/markov-chains-and-hmms-ceaf2c854788</figcaption></figure><p>Его математическая суть:</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/845/ba5/06b/845ba506b584d482f5ab390b741f78aa.png\" width=\"367\" height=\"27\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/845/ba5/06b/845ba506b584d482f5ab390b741f78aa.png\"/><figcaption></figcaption></figure><p>где x- текущее скрытое состояние, y - следующее скрытое состояние, f - наблюдаемое состояние.</p><p>С учётом Байеса эту формулу можно преобразовать.</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/9d8/673/cd1/9d8673cd116ed61d9715b391289707b7.jpg\" width=\"367\" height=\"81\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/9d8/673/cd1/9d8673cd116ed61d9715b391289707b7.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><ul><li><p><strong>P(F)</strong>: вероятность действия F (что соответствует состоянию в Витерби) </p></li><li><p><strong>P(X|F)</strong>: вероятность состояния Х (скрытое состояние в Витерби)  при условии действия F </p></li><li><p><strong>P(Y|X)</strong>: вероятность следующего состояния Y (следующее скрытое в Витерби) при условии состояния X </p></li></ul><p>В этой формуле, при допущении значений этих вероятностей близких единице, <strong>P(Y)=P(F)*P(X|F)*P(Y|X)</strong> однозначно выдаст следующее состояние Y. Идейно это тот же модус поненс. Зная F, можно получить Y.</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/699/dab/d4d/699dabd4d2923f028a9a57c552bb4598.jpg\" width=\"408\" height=\"91\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/699/dab/d4d/699dabd4d2923f028a9a57c552bb4598.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>Хотя алгоритм, рассчитывающий коэффициент однозначности, и алгоритм Витерби, решают внешне схожие  задачи, назначение у них разное. С коэффициентом однозначности неважно предварительное знание вероятностей и неважно является ли последовательность (как действий, так и состояний) марковской. Что позволяет использовать его «на лету». Суть в том, что если известна последовательность действий, то в силу значения коэффициента равным единице или почти единице, последовательность состояний однозначно выводима.  </p><p>Другими словами, если есть не детерминированный конечный автомат, то можно подобрать такие действия, что он становится детерминированным. Или почти детерминированным. С учётом ограничения на этот коэффициент как гиперпараметра.  </p><pre><code>#Пусть имеется три последовательности и нужно понять влияют ли они друг на друга [1, 2, 1, 1, 2, 2, 1, 2, 2, 1] [3, 4, 4, 3, 3, 4, 3, 3, 4, 3] [5, 6, 5, 6, 5, 6, 5, 6, 5, 5]</code></pre><p>В этом случае можно составить несколько пар последовательностей. И по каждой паре проверить коэффициент однозначности. Видно по выводу ниже, что [3, 4, 4, 3, 3, 4, 3, 3, 4, 3] являются действиями для состояний [1, 2, 1, 1, 2, 2, 1, 2, 2, 1]. Однозначность для этой пары 100%. Как следствие - возможность прокладывать маршруты в таком графе.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/004/bea/5f1/004bea5f1110ba607e69190bc605cd38.jpg\" width=\"669\" height=\"555\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/004/bea/5f1/004bea5f1110ba607e69190bc605cd38.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>Для сравнения проанализируем алгоритмом Витерби. Если взять те же последовательности, то налицо ошибки 2/6.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/b37/1ae/66c/b371ae66ceb4858114364ebb32ad2a45.jpg\" width=\"748\" height=\"170\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b37/1ae/66c/b371ae66ceb4858114364ebb32ad2a45.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>С другой стороны, если рассмотреть последовательности как <a href=\"https://towardsdatascience.com/markov-chains-and-hmms-ceaf2c854788\" rel=\"noopener noreferrer nofollow\">здесь</a>, то результат будет обратным. Коэффициент однозначности низкий. Витерби дает большую предсказуемость.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/d85/f8a/f25/d85f8af25d4f9736d1eff34ab8eebeb3.jpg\" alt=\"e\" title=\"e\" width=\"1022\" height=\"361\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d85/f8a/f25/d85f8af25d4f9736d1eff34ab8eebeb3.jpg\" data-blurred=\"true\"/><figcaption>e</figcaption></figure><p>Для Витерби важно условие, чтобы последовательность являлась марковской. </p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/de4/ebb/5ff/de4ebb5ff193bf3d28b42ce07df802f8.jpg\" width=\"922\" height=\"382\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/de4/ebb/5ff/de4ebb5ff193bf3d28b42ce07df802f8.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>Проверяем последовательность из книги Эшби и из статьи. Ни та, ни другая ею не являются. После (Holidays, Work) Holidays даже не следует. По крайней мере для той ее длины.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/c85/6fd/97f/c856fd97faf6bc511e707c471bd86090.jpg\" width=\"669\" height=\"145\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c85/6fd/97f/c856fd97faf6bc511e707c471bd86090.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>Итак, для алгоритма Витерби нужно предварительное длинное наблюдение, чтобы иметь вероятности, рассчитанные в результате этих наблюдений Также он ограничен марковским свойством. Алгоритм с расчетом на коэффициент однозначности лишен этих недостатков, но и предназначение у него иное: он нацелен на выявление детерминированных или почти детерминированных явлений. </p><pre><code>import random import matplotlib.pyplot as plt  class Hd(): 	def __init__(self, graph): 		self.graph = graph 		 	def rnd_get(self, v): 		return random.choice(v.split(\"|\")) 		 	def show(self, graph): 		for x in graph: 			print(x, \":\", graph[x]) 			 	def get_ku(self, graph): 		\'\'\'return (коэффициент однозначности, размер)\'\'\' 		n = 0; u = 0 		for x in graph: 			for y in graph[x]: 				if y[0]: 					u += y[0].count(\"|\") 					n += 1 		if n != 0: 			return (round(1- u/(n+u), 3), n)  		else: 			return (None, None) 			 	def get_states(self, x, f_list = [], n=11): 		\'\'\' На входе последовательность действий и начальное состояние 		    На выходе последоваельность состояний\'\'\' 		x_list = [] 		x_list.append(x) 		 		if f_list != []: 			for f in f_list: 				xf = [xf for xf in g[x] if xf[1] == f] 				if not xf: 					x_list.append(\'\'); f_list[len(x_list)-2] = \'\' 					return (x_list, f_list[:len(x_list)-1]) 				x = self.rnd_get(xf[0][0]) 				x_list.append(x) 		else: 			for i in range(n): 				if not self.graph[x]: 					x_list.append(\'\'); f_list.append(\'\') 					break 				t = random.choice(self.graph[x]) 				f = t[1] 				x = random.choice(t[0].split(\'|\')) 				x_list.append(x); f_list.append(f) 			 		if len(f_list) == len(x_list) -1: 			return (x_list, f_list) 		else: 			return ([], []) 			 	def get_yfx(self, f_list, x_list, t = True): 		\'\'\'возвращаем список кортежей (x, f, y)\'\'\' 		if len(x_list) == len(f_list): 			x_list.append(\'\') 			 		path = [] 		for i in range(len(f_list)): 			path.append((x_list[i], f_list[i], x_list[i+1])) 		 		if t:	 			return path  		else: 			p = [] 			for xfy in path: 				if xfy[2] != \'\': 					p.append(xfy[2]+\'=\'+xfy[1]+\'(\'+xfy[0]+\')\') 			return p 			 	def flow(self, path, rnd=False): 		if not path:  return [] 		fl = [] 		for p in path: 			if not rnd: 				fl.append(p[:-1]) 			else: 				pr = list(p[:-1]) 				random.shuffle(pr) 				fl.append(tuple(pr)) 		return fl 		 	def fORx(self, flow, f=0): 		\'\'\'на входе поток, на выходе две гипотезы 		   index: f=0, x=1 or x=0, f=1\'\'\' 		def add_empty(): 			empty = [] 			for k in graph: 				for x in graph[k]: 					z = list(set(x[0].split(\'|\')) - set(list(graph.keys()))) 					if z: 						empty.append(z[0]) 			return empty 			 		if not flow: return [] 		 		graph = {} 		fli = flow[0] 		 		for t in flow[1:]: 			if f == 0: 				if fli[1] not in graph: 					graph[fli[1]] = [] 				r = [(i, xf) for i,xf in enumerate(graph[fli[1]]) if xf[1] == fli[0]] 				if r: 					if t[1] not in r[0][1][0]: 						x_new = r[0][1][0] + \"|\" + t[1] 						if x_new != \'\': 							graph[fli[1]][r[0][0]] = (x_new, r[0][1][1]) 				if not r: 					if t[1] != \'\': 						graph[fli[1]].append((t[1], fli[0])) 					 			if f == 1: 				if fli[0] not in graph: 					graph[fli[0]] = [] 				r = [(i, xf) for i,xf in enumerate(graph[fli[0]]) if xf[1] == fli[1]] 				if r: 					if t[0] not in r[0][1][0]: 						x_new = r[0][1][0] + \"|\" + t[0] 						if x_new != \'\': 							graph[fli[0]][r[0][0]] = (x_new, r[0][1][1]) 				if not r: 					if t[0] != \'\': 						graph[fli[0]].append((t[0], fli[1])) 			fli = t 				 		em = add_empty() 		if em: 			graph[em[0]] = [] 		return graph 		 	def merge(self, g1, g2): 		\'\'\'объединяет два графа в один\'\'\' 		def find_index(): 			for i in range(len(graph[k])): 				if graph[k][i][1] == x[1]: 					return i 			return -1 					 		all_keys = set(list(g1.keys()) + list(g2.keys())) 		graph = {} 		 		for k in all_keys: 			if k not in graph:  				if k in g1: 					graph[k] = g1[k] 				else: 					graph[k] = g2[k] 					 			if k in g2: 				for x in g2[k]: 					ind = find_index() 					if ind != -1: 						if x[0] != []: 							t1 = x[0].split(\'|\') 						if graph[k][ind] != -1: 							t2 = graph[k][ind][0].split(\'|\') 						z = \"|\".join(set(t1+t2)) 						xf = [z, graph[k][ind][1]] 						graph[k][ind] = xf 					else: 						graph[k].append(x) 				 		return graph 		 class Vm(): 	def print_dptable(self, V): 		\'\'\'https://russianblogs.com/article/255172857/\'\'\' 		for i in range(len(V)): print(\"%8d\" % i, end=\"\") 		print() 		for y in V[0].keys(): 			print(\"%.5s: \" % y, end=\" \") 			for t in range(len(V)): 				print(\"%.7s\" % V[t][y], end=\" \") 			print()   	def viterbi(self, obs, states, start_p, trans_p, emit_p): 		\'\'\'https://russianblogs.com/article/255172857/\'\'\' 		V = [{}] 		path = {} 		for y in states: 			V[0][y] = start_p[y] * emit_p[y][obs[0]] 			path[y] = [y]  		for t in range(1, len(obs)): 			V.append({}) 			newpath = {}  			for y in states: 				(prob, state) = max([(V[t - 1][y0] * trans_p[y0][y] * emit_p[y][obs[t]], y0) for y0 in states]) 				V[t][y] = prob 				newpath[y] = path[state] + [y] 			path = newpath  		self.print_dptable(V) 		(prob, state) = max([(V[len(obs) - 1][y], y) for y in states]) 		return prob, path[state] 		 		 	def startProbability(self, x_list): 		\'\'\'расчет начальной вероятности\'\'\' 		start_probability = {}  		for z in x_list: 			if z not in start_probability: 				start_probability[z] = 1 			else: 				start_probability[z] +=1 				 		start_probability = {z:start_probability[z]/(len(x_list)) for z in start_probability} 		return start_probability   	def transitionProbability(self, x_list): 		\'\'\'расчет переходной вероятности\'\'\' 		transition_probability = {}  		for i,z in enumerate(x_list): 			if z not in transition_probability: 				transition_probability[z] = {} 			if i == 0: 				z_old = z 				continue 					 			if z not in transition_probability[z_old]: 				transition_probability[z_old][z] = 1 			else: 				transition_probability[z_old][z] = transition_probability[z_old][z] +1 						 			z_old = z 					 		for z_old in transition_probability: 			z_list = [transition_probability[z_old][z] for z in transition_probability[z_old]] 			for z in transition_probability[z_old]: 				transition_probability[z_old][z] = transition_probability[z_old][z] / sum(z_list) 					 		return transition_probability  	def emissionProbability(self, x_list, f_list): 		\'\'\'расчет вероятности выброса\'\'\' 		emission_probability = {} 		for i,z in enumerate(x_list): 			if z not in emission_probability: 				emission_probability[z] = {} 			if f_list[i] not in emission_probability[z]: 				emission_probability[z][f_list[i]] = 1 			else: 				emission_probability[z][f_list[i]] += 1  		for z_old in emission_probability: 			z_list = [emission_probability[z_old][z] for z in emission_probability[z_old]] 			for z in emission_probability[z_old]: 				emission_probability[z_old][z] = emission_probability[z_old][z] / sum(z_list) 				 		return emission_probability 		 	def isMarkov(self, w_list, prev_s, s): 		\'\'\'проверка на марковское свойство\'\'\' 		transition_probability = {}  		for i,z in enumerate(w_list): 			if z not in transition_probability: 				transition_probability[z] = {} 			if i == 0: 				z_old = z 				continue 			 			if z not in transition_probability[z_old]: 				transition_probability[z_old][z] = 1 			else: 				transition_probability[z_old][z] = transition_probability[z_old][z] +1 					 			z_old = z 			zz_old = z_old 		 		transition_probability_ = {}  		for i,z in enumerate(w_list): 			if z not in transition_probability_ and z == s: 				transition_probability_[z] = {} 			if i == 0: 				z_old = z 				continue 			if i == 1: 				zz_old = z_old 				z_old = z 				continue 			 			if zz_old == prev_s and z_old == s: 				if z not in transition_probability_[z_old]: 					transition_probability_[z_old][z] = 1 				else: 					transition_probability_[z_old][z] = transition_probability_[z_old][z] +1 					 			zz_old = z_old 			z_old = z 			 		return ((prev_s, s), transition_probability_[s], transition_probability[s]) 	 			 #--------- main ---------#     if __name__ == \"__main__\": 	g = {} 	hd = Hd(g) 	 	print(\"\\n__  Две последовательности\") 	x_list = [str(x) for x in [1, 2, 1, 1, 2, 2, 1, 2, 2, 1]] 	f_list = [str(f) for f in [3, 4, 4, 3, 3, 4, 3, 3, 4, 3]] 	 	print(x_list) 	print(f_list) 		 	path = hd.get_yfx(f_list, x_list) 	print(\"\\n  гипотеза 1: первая последовательность - последовательность действий\") 	gn = hd.fORx(hd.flow(path), f=0) 	hd.show(gn) 	ku = hd.get_ku(gn) 	print(\"ku =\", ku[0]) 	 	print(\"\\n  гипотеза 2: первая последовательность - последовательность состояний\") 	gn = hd.fORx(hd.flow(path), f=1) 	hd.show(gn) 	ku = hd.get_ku(gn) 	print(\"ku =\", ku[0]) 	 	########################### 	print(\"\\n__  Две последовательности\") 	x_list = [str(x) for x in [1, 2, 1, 1, 2, 2, 1, 2, 2, 1]] 	f_list = [str(f) for f in [5, 6, 5, 6, 5, 6, 5, 6, 5, 5]] 	 	\'\'\' 	x = \"Work   Work   Work     Holidays Holidays Holidays Work     Work Holidays Holidays Holidays Holidays Holidays Holidays Holidays\" 	f = \"Python Python Python   Bear     Bear     Python   Python   Bear Python   Python   Bear     Bear     Bear     Bear     Bear\" 	x_list = x.split() 	f_list = f.split() 	\'\'\' 		 	print(\"  гипотеза 1: первая последовательность - последовательность действий\")	 	path = hd.get_yfx(f_list, x_list) 	gn = hd.fORx(hd.flow(path), f=0) 	hd.show(gn) 	ku = hd.get_ku(gn) 	print(\"ku =\", ku[0]) 	 	print(\"\\n  гипотеза 2: первая последовательность - последовательность состояний\") 	gn = hd.fORx(hd.flow(path), f=1) 	hd.show(gn) 	ku = hd.get_ku(gn) 	print(\"ku =\", ku[0]) 	 	print(\"\\n__Витерби\") 	x_list = [str(x) for x in [1, 2, 1, 1, 2, 2, 1, 2, 2, 1]] 	f_list = [str(f) for f in [3, 4, 4, 3, 3, 4, 3, 3, 4, 3]] 	 	\'\'\' 	x = \"Work   Work   Work     Holidays Holidays Holidays Work     Work Holidays Holidays Holidays Holidays Holidays Holidays Holidays\" 	f = \"Python Python Python   Bear     Bear     Python   Python   Bear Python   Python   Bear     Bear     Bear     Bear     Bear\" 	x_list = x.split() 	f_list = f.split() 	\'\'\' 	 	states_x = set(x_list) 	states_f = set(f_list)  	observations = f_list[1:7] 	states = states_x 	 	vm = Vm() 	start_probability = vm.startProbability(x_list) 	transition_probability = vm.transitionProbability(x_list) 	emission_probability = vm.emissionProbability(x_list, f_list) 	 	r = vm.viterbi(observations,            states,            start_probability,            transition_probability,            emission_probability)      	print(\"\\n\", observations, \"#наблюдаемая последовательность состояний\") 	print(x_list[1:7], \"#последовательность скрытых состояний (оригинал)\") 	print(r[1], \"#последовательность скрытых состояний (витерби)\")  	 	print(\"\\n__isMarkov\") 	w = \'A A B B A B B A A B B A B B A B B A B B A A B B A B B A B A B A\' 	w_list = w.split() 	r = vm.isMarkov(w_list, \'A\', \'B\') 	print(*r) 	r = vm.isMarkov(w_list, \'B\', \'B\') 	print(*r, \"\\n\") 	w = \"Work   Work   Work     Holidays Holidays Holidays Work     Work Holidays Holidays Holidays Holidays Holidays Holidays Holidays\" 	w_list = w.split() 	r = vm.isMarkov(w_list, \'Holidays\', \'Work\') 	print(*r) 	r = vm.isMarkov(w_list, \'Work\', \'Work\') 	print(*r, \"\\n\") </code></pre><p></p><p>P.S. Для последовательностей [1, 2, 1, 1, 2, 2, 1, 2, 2, 1], [3, 4, 4, 3, 3, 4, 3, 3, 4, 3] им соответствующие графы будут выглядеть так, где пунктирной линии неоднозначность выделена. Коэффициент однозначности для первой гипотезы 0,67, т.к всего переходов 2+1+2+1, а если бы были только однозначны, то 4.</p><ul><li><p>4|3 = 1(3)  # из состояния 3 при действии 1 следует либо 4, либо 3</p></li><li><p>4 = 2(3) # из состояния 3 при действии 2 следует только 4.</p></li><li><p>4|3 = 2(4)</p></li><li><p>3 = 1(4)</p></li></ul><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/eda/390/0d1/eda3900d1e97372683c3b931fb059318.jpg\" width=\"885\" height=\"279\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/eda/390/0d1/eda3900d1e97372683c3b931fb059318.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p></p></div>');
INSERT INTO `articles` (`id`, `name`, `link`, `text`) VALUES
(21, 'Реверс-инжиниринг протокола записи адресов микросхемы UCS512 ', '/ru/post/678546/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Светодиодные ленты используются для создания многоцветных световых эффектов различной сложности: от простейшего эффекта «бегущий огонь» до воспроизведения динамических изображений на мультимедийных экранах. Основная область применения ленты — создание рекламных вывесок, оформление театрализованных шоу, дискотек, ресторанов, витрин, изготовление медиафасадов.</p><p>Лента, которую я использую, оснащена яркими RGB-светодиодами SMD 5060 с тремя кристаллами каждый и микросхемами управления UCS512C. Каждый пиксель управляется индивидуально и состоит из шести светодиодов.</p><p>Для передачи данных используется стандартный дифференциальный сигнал интерфейса RS485 -два сигнала управления: А и В, что позволяет передавать цифровой сигнал на большое расстояние. </p><p>Для управления светодиодной лентой может быть использован любой внешний контроллер с интерфейсом DMX512.</p><p>Все хорошо, но есть одно НО. Пиксели на ленте не имеют привычных для ДМХ512 DIP-переключателей для задания ДМХ512 адреса. Установка DMX-адресов в микросхемах UCS512C выполняется при помощи внешнего специализированного редактора. Найти описание на протокол настройки адресов микросхем UCS512C мне так и не удалось. Представленной информации достаточно для создания собственного редактора адресов микросхем UCS512C. Я не гарантирую, что точно понял алгоритм записи адресов. Поэтому, вы используете эту информацию на свой страх и риск. Информация собрана по крупицам и представлена в виде временных диаграмм работы интерфейса с некоторыми пояснениями. Статья предназначена для тех, кто ищет информацию об алгоритме редактирования адресов микросхем UCS512C. И также следует учесть, что это не описание алгоритма от производителя.</p><p>На рисунке 1 представлен полностью обмен между контроллером задания адреса и лентой на микросхеме UCS512C. Далее на временных диаграммах Chenal1  - это RS485А , а Chenal2  - это RS485В. Задание адреса происходит передачей двух пакетов. На соответствующих временных диаграммах будет раскрыта структура данных пакетов более детально. </p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/06c/a2b/fd2/06ca2bfd2e53524408e0494235e8bd60.jpg\" width=\"5219\" height=\"578\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/06c/a2b/fd2/06ca2bfd2e53524408e0494235e8bd60.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>До начала процесса программирования линия А интерфейса RS485 находится в состоянии высокого уровня, линия В интерфейса RS485 – в низком, по крайней мере секунду или более. На временной диаграмме это время Т1. Далее идет импульс сброса 2 секунды. Это интервал Т2. Затем передается первый кадр информации с адресами, следом за первым кадром следует второй импульс сброса. Это интервал Т3. Передается второй кадр информации с адресами. После этого линия А интерфейса RS485 находится в состоянии высокого уровня, а линия В интерфейса RS485 – в низком до момента снятия питания с ленты. Новые адреса будут использоваться после перезагрузки ленты по питанию.</p><p>Теперь рассмотрим некоторые особенности передачи данных. Надо отметить, что все данные передаются на скорости 250000 – стандартной для протокола ДМХ512, количество информационных бит 8, количество стоп бит равно 2. Все современные микроконтроллеры имеют соответствующие режимы настройки UART для передачи данных. Для физического уровня интерфейса используются стандартные микросхемы типа MAX485 с соответствующими цепями защиты входов.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/bf4/b26/bbe/bf4b26bbea94bba9f5f857a5aa719b70.jpg\" width=\"5225\" height=\"806\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/bf4/b26/bbe/bf4b26bbea94bba9f5f857a5aa719b70.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>Рисунок 2 показывает, что в начале каждого кадра идет передача стартового кода 0х00, причем перед передачей этого кода линия А должна находится в состоянии высокого уровня 20 мкс. Это время Т5. Спустя 100мкс, время Т6, передается пакет установки адреса для первой микросхемы. Эта микросхема первая в цепочке. Затем спустя время Т8, равное 100 мкс, передается второй пакет, третий и так далее по количеству микросхем в ленте. Интервал между передаваемыми байтами 20 мкс. На рисунке 3 и рисунке 4 этот момент виден более четко.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/a53/175/96c/a5317596c02d24d2ee893d5ac0d31df0.jpg\" width=\"5222\" height=\"581\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a53/175/96c/a5317596c02d24d2ee893d5ac0d31df0.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/e9d/d7b/706/e9dd7b706daaa0f2e49aa342e9f0a7dc.jpg\" width=\"5219\" height=\"794\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e9d/d7b/706/e9dd7b706daaa0f2e49aa342e9f0a7dc.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>Каждый пакет состоит из восьми байт. Стоит отметить, что порядок следования бит в байте обратный. На рисунке представлены настройки анализатора.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/216/3a3/c70/2163a3c70c4c63c8d7bd07a96e9627c2.jpg\" width=\"1369\" height=\"1269\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/216/3a3/c70/2163a3c70c4c63c8d7bd07a96e9627c2.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>Первые пять байт каждого пакета одинаковые – это 0xAA, 0xF0, 0x34, 0x55, 0xAC. Шестой байт — это признак пакета. Для первого пакета этот байт равен 0x80, а для второго пакета этот байт равен 0xC0. На следующих рисунках это будет видно.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/5c5/d00/f6a/5c5d00f6a0de10ce4db733f3ba78c0aa.jpg\" width=\"5222\" height=\"781\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/5c5/d00/f6a/5c5d00f6a0de10ce4db733f3ba78c0aa.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>Седьмой и восьмой байт в этом пакете – это сформированный определенным образом адрес для соответствующего пикселя ленты. В представленной программе можно найти этот алгоритм. Хочется отметить, что этот алгоритм вычислен после много часовых поисков разрозненной информации в интернете. Переводе разных отрывочных сообщений об алгоритмах работы микросхемы UCS512C. Программа сделана в виде законченного модуля для микроконтроллера PIC32MX795F512. При желании ее легко можно перенести на другие МК. для инициализации адресов небходимо запустить Init_UCS512C();. </p><p>В русскоязычной литературе я не нашел ничего по принципу работы алгоритма задания адресов микросхемы UCS512C.</p><p>Вы можете восполнить этот пробел и оставить свои комментарии со ссылками.</p><pre><code class=\"cpp\"> //***************************************************************************** 	#define BAUDRATE_DMX512 	250000 	#define BAUDRATE_MAB	 	50000  	//******** Управление СОМ порт3 RS485 *********** 	#define UART3_TX_TRIS		(TRISGbits.TRISG8) 	#define UART3_TX_IO			(PORTGbits.RG8) 	#define INV_UART3_TX_IO()	(LATGINV=_LATG_LATG8_MASK) 	#define SET_UART3_TX_IO()	(LATGSET=_LATG_LATG8_MASK) 	#define CLR_UART3_TX_IO()	(LATGCLR=_LATG_LATG8_MASK) 	 	#define UART3_RX_TRIS		(TRISGbits.TRISG7) 	#define UART3_RX_IO			(PORTGbits.RG7)  	#define RS485RE_TRIS		(TRISGbits.TRISG6)	// управление приемом по RS485 	#define RS485RE				(LATGbits.LATG6) 	#define SET_RS485RE()		(LATGSET=_LATG_LATG6_MASK) 	#define CLR_RS485RE()		(LATGCLR=_LATG_LATG6_MASK) 	#define INV_RS485RE()		(LATGINV=_LATG_LATG6_MASK)  	#define RS485DE_TRIS		(TRISGbits.TRISG9)	// управление передачей по RS485 	#define RS485DE				(LATGbits.LATG9) 	#define SET_RS485DE()		(LATGSET=_LATG_LATG9_MASK) 	#define CLR_RS485DE()		(LATGCLR=_LATG_LATG9_MASK) 	#define INV_RS485DE()		(LATGINV=_LATG_LATG9_MASK)  	#define BEGIN_ADRESS	 	1		// Стартовый адрес 	#define STEP_ADRESS	 		3		// количество каналов в одной микросхеме 	#define NUM_PIXEL	 		96		// количество пикселей в ленте  //***************************************************************************** void DMX_Delay(DWORD nus) // программная задержка, спешить нам некуда { 	DWORD i; 	i=8*nus; 	while(i--) {WDTCONSET = _WDTCON_WDTCLR_MASK;} } //***************************************************************************** // вывод одного байта в RS485 void putc_RS485(unsigned char data)	// вывод одного байта через UART { 	while(!U3BSTAbits.TRMT) {Nop();} // ожидаем окончания предыдущей передачи 	U3BTXREG = data &amp; 0xFF;   } //***************************************************************************** // вывод заданного количества байт из буфера в RS485 void putd_RS485(unsigned char *buffer, unsigned char num) { 	while(num !=0) 	{putc_RS485(*buffer++); num--; 	DMX_Delay(42);} } //***************************************************************************** void RX_MAX485(void) // переводим на прием MAX485 { 	RS485DE_TRIS=0;					// настроили пин управления DE на выход  	RS485RE_TRIS=0;					// настроили пин управления RE на выход  	CLR_RS485DE();					// Запрещаем работу передатчика микросхемы MAX485 	CLR_RS485RE();					// Разрешаем работу приемника микросхемы MAX485 } //***************************************************************************** void TX_MAX485(void) // переводим на передачу MAX485 { 	RS485DE_TRIS=0;					// настроили пин управления DE на выход  	RS485RE_TRIS=0;					// настроили пин управления RE на выход  	SET_RS485DE();					// Разрешаем работу передатчика микросхемы MAX485 	SET_RS485RE();					// Запрещаем работу приемника микросхемы MAX485 } //***************************************************************************** void Stop_UART(void) // Останавливаем работу UART { 	U3BMODE = 0x0000;				// Останавливаем работу UART 	U3BSTA = 0x00000000; 	IEC2bits.U3BRXIE = 0;			// Запрещаем прерывания приемника UART 	IEC2bits.U3BTXIE = 0;			// Запрещаем прерывания передатчика UART 	IFS2bits.U3BTXIF = 0;			// Сброс флага прерывания приемника UART 	IFS2bits.U3BRXIF = 0;			// Сброс флага прерывания передатчика UART } //***************************************************************************** void Init_UART(void) // Настраиваем работу UART { 	U3BMODE = 0x8000;				// Разрешаем работу UART , это нужно выполнить до настройки остального 	U3BMODEbits.STSEL = 1;			// количество стоп бит =2 	U3BMODEbits.PDSEL = 0;			// 8-bit данных, без контроля четности 	IPC12bits.U3BIP = 6;			// Priority level 6, но нам не понадобятся прерывания 	U3BSTA = 0x00000000;			// 	U3BSTAbits.URXISEL=0;			// Режим прерываний для приемника по каждому принятому символу 	U3BSTAbits.UTXISEL=0;			// Режим прерываний для передатчика 	U3BSTAbits.URXEN= 0;			// Запрещаем работу приемника UART 	U3BSTAbits.UTXEN= 1;			// Разрешаем работу передатчика UART 	U3BBRG = ((GetPeripheralClock()+8ul*BAUDRATE_DMX512)/16/BAUDRATE_DMX512-1);	// Скорость передачи 250000 	IEC2bits.U3BRXIE = 0;			// Запрещаем прерывания приемника UART 	IEC2bits.U3BTXIE = 0;			// Запрещаем прерывания передатчика UART 	IFS2bits.U3BTXIF = 0;			// Сброс флага прерывания приемника UART 	IFS2bits.U3BRXIF = 0;			// Сброс флага прерывания передатчика UART } //***************************************************************************** void Set_TX_Low(void) // Устанавливаем низкий уровень на пине ТХ {									// UART нужно остановить , чтобы потом управлять пином ТХ 	Stop_UART();					// Останавливаем работу UART 	UART3_TX_TRIS=0; 				// настроили пин передатчика на выход 	CLR_UART3_TX_IO();				// установили низкий уровень на пине передатчика } //***************************************************************************** void Set_TX_Hight(void) // Устанавливаем высокий уровень на пине ТХ { 	Stop_UART();					// Останавливаем работу UART 	UART3_TX_TRIS=0; 				// настроили пин передатчика на выход 	SET_UART3_TX_IO();				// установили высокий уровень на пине передатчика }  //***************************************************************************** void DMX_Break(void)	// Отправка Break и стартового кода 00 { 	DMX_Delay(12);					// задержка 	putc_RS485(0x00);				// Передали 0 стартового кода 	while(!U3BSTAbits.TRMT)			// дождались окончания передачи 		{WDTCONSET = _WDTCON_WDTCLR_MASK;} 	DMX_Delay(51);					// задержка } //***************************************************************************** unsigned char DMX_Transposition(unsigned char tempchar)  // перестановка битов в байте { 	unsigned char i; 	unsigned char tempnum; 	i=0; 	tempnum=0; 	 	for(i=0;i&lt;8;i++) 	{ 		tempnum=tempnum>>1;  		tempnum=((tempchar&lt;&lt;i)&amp;0x80)|tempnum;  	} 	return tempnum; } //***************************************************************************** void Send_Chenge_Adress(unsigned char common,unsigned char tempdata) //  Отправка команды смены адреса {     unsigned char data_H,data_L,i,tempadd[8];     	tempadd[0]=DMX_Transposition(0xAA);	//     tempadd[1]=DMX_Transposition(0xF0);	//     tempadd[2]=DMX_Transposition(0x34);	//     tempadd[3]=DMX_Transposition(0x55); // 	tempadd[4]=DMX_Transposition(0xAC);	//     tempadd[5]=DMX_Transposition(common);  	// делаем некую манипуляцию чтоб получить два байта адреса для отправки микросхеме 	data_H=(tempdata>>6)&amp;63;    		// 	data_L=tempdata&amp;63;		   			// 	data_H=(data_H)|0x80;	    		// 	data_L=(data_L)|0x40;	    		//     tempadd[6]=DMX_Transposition(data_H);     tempadd[7]=DMX_Transposition(data_L);  	putd_RS485(tempadd,8); 	DMX_Delay(40);							// задержка } //***************************************************************************** 	#define BEGIN_ADRESS	 	1		// Стартовый адрес 	#define STEP_ADRESS	 		3		// количество каналов в одной микросхеме 	#define NUM_PIXEL	 		96		// количество пикселей в ленте  //***************************************************************************** void Init_UCS512C(void)	// инициализация адресов микросхемы ucs512c { static DWORD Trtc; 	// Таймер для отсчета интервалов времени static WORD adress, Schet_pixel;   CLR_LED_WORK(); Trtc=TickGet(); Set_TX_Hight();							// Устанавливаем высокий уровень на пине ТХ while(TickGet() - Trtc &lt; TICK_SECOND) {WDTCONSET = _WDTCON_WDTCLR_MASK;}  // Подождать 1 сек перед ресетом  Set_TX_Low();							// Устанавливаем низкий уровень на пине ТХ Trtc=TickGet(); while(TickGet() - Trtc &lt; TICK_SECOND*2) {WDTCONSET = _WDTCON_WDTCLR_MASK;}  // Подождать 2 сек для ресета Set_TX_Hight();							// Устанавливаем высокий уровень на пине ТХ  Init_UART();							// Настраиваем работу UART DMX_Break();							// Отправка Break и стартового кода 00  adress=BEGIN_ADRESS -1; for(Schet_pixel=0;Schet_pixel&lt;NUM_PIXEL;Schet_pixel++) 	{ 	Send_Chenge_Adress(0x80, adress); 	adress=adress+STEP_ADRESS; 	}  Set_TX_Low();							// Устанавливаем низкий уровень на пине ТХ Trtc=TickGet(); while(TickGet() - Trtc &lt; TICK_SECOND*2) {WDTCONSET = _WDTCON_WDTCLR_MASK;}  // Подождать 2 сек для ресета  Init_UART();							// Настраиваем работу UART DMX_Break();							// Отправка Break и стартового кода 00  adress=BEGIN_ADRESS; for(Schet_pixel=0;Schet_pixel&lt;NUM_PIXEL;Schet_pixel++) 	{ 	Send_Chenge_Adress(0xC0, adress); 	adress=adress+STEP_ADRESS; 	} //Set_TX_Hight();							// Устанавливаем высокий уровень на пине ТХ  SET_LED_WORK();							// Индикация окончания процесса записи адресов while(1) {WDTCONSET = _WDTCON_WDTCLR_MASK;}  // Ждем пока не перегрузят по питанию  }</code></pre><p></p></div>'),
(22, 'Быстрая выгрузка результатов опроса из 1С-Битрикс и как передать в Excel произвольное количество столбцов SQL-запросом ', '/ru/post/678532/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Итак, у нас есть часто применяемый в государственных структурах 1С-Битрикс и опрос с 30 или 50 вопросами и несколькими десятками тысяч ответов. При попытке экспортировать результаты опроса силами стандартных механизмов 1С-Битрикс все это выполняется от получаса и более, что является не очень рабочим сценарием. Конечно, можно запустить процесс формирования выгрузки фоном, и в конце высылать на почту сформированный xls-файлик... Но практика показала, что при формировании больших xls-файлов силами php серверу еще частенько и памяти не хватает... Окончательным \"гвоздем\" в подобные решения стало то, что автор стати не владеет PHP, но владеет SQL. Отсюда и родилась мысль написать SQL-запрос, который можно выполнить через Workbench или DBeaver (кто его ставит - не забудьте сразу снять галочку, что пустые строки разделяют запросы), и его результаты загрузить в Excel. В дальнейшем этот запрос можно будет запускать и из PHP с дальнейшим формированием файла с выгрузкой.</p><p>Первой же проблемой, с которой столкнулся автор, стало то, что мы заранее не знаем сколько столбцов в результатах опроса, потому что в общем случае мы не знаем количество вопросов. Можно, конечно, каждый раз переписывать запрос по какому-то шаблону, но лень - двигатель прогресса, который решил сделать следующим образом. Из-за того, что нам в подавляющем количестве случаев результаты все равно нужны в Excel, мы формируем в результатах запроса одно текстовое поле, которое будет строкой csv-файла. При этом пришлось пойти на небольшие допущения. Пришлось внести изменения в данные в процессе выгрузки: двойные кавычки (их используем в качестве ограничителя строк в csv) заменяем на одинарные, а переносы строк просто удаляем. </p><p>Второй проблемой стало то, что автор не сумел \"запихать\" всю логику в один запрос без использования CTE. А CTE до определенного момента не поддерживались в mySQL. Поэтому в своё время была написана хранимая процедура, формирующую временную таблицу и работающая уже с ней. </p><p>Ниже привожу два варианта SQL-кода. Первый представляет собой одиночный запрос с использованием CTE (может использоваться в относительно новых версиях СУБД mySQL и MariaDB). Если ваша СУБД не поддерживает CTE, то используйте второй вариант с созданием хранимой процедуры. Подставляете в нужные места идентификаторы опроса и сроки для выгрузки и используете в соответствии с комментариями (особое внимание на сохранение в ANSI). Лично я копипасчу результаты выполнения запроса из DBeaver в Notepad++ и сохраняю в csv-файл. Такой csv-файл Excel корректно открывает по умолчанию по двум кликам. Но если этого не произошло - используйте функционал импорта из текста в соответствии с изображением: </p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/91f/603/585/91f60358545935ffa1b0fff2b4638acb.png\" width=\"627\" height=\"498\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/91f/603/585/91f60358545935ffa1b0fff2b4638acb.png\"/><figcaption></figcaption></figure><p>В общем, запускайте запросы, встраивайте их в свой код, формируйте ответы и радуйте своих заказчиков.</p><h2>Запрос с CTE</h2><pre><code class=\"sql\">/*запрос позволяет вытащить результаты любого голосования в Битрикс Управление Сайтом в форме csv  Внесите идентификатор опроса в двух местах в запросе (сейчас поставлено 24), укажите период  за который нужна выгрузка, выполните запрос, сохраните результаты в csv-файле (в ANSI) и отройте его в Excel  В текстах будут удалены переносы и табуляции, а двойные кавычки заменены на одинарные  */ with  cte_headers (id, uuser, ddate, answers) as ( 	-- формируем строку, которая станет заголовком столбцов в csv.  	select 	\'ID\',								-- потом склеим её с результатами через union 			\'Посетитель (ID)\' , 			\'Дата\', -- меняем двойные кавычки на одинарные (чтобы корректно работал разделитель). Здесь и далее ячейки в csv будут обернуты двойными кавычками и разделены точкой с запятой 			(select group_concat(replace(coalesce(b_vote_question.question,\'\'),\'\"\',Char(39)) separator \'\";\"\')            from b_vote_question      where b_vote_question.vote_id=24  -- внести идентификатор опроса     order by  b_vote_question.c_sort)), cte_b_vote_event_id as ( -- выбираем факты голосования, которые нам нужны 	select id, date_vote, vote_user_id  	from b_vote_event  	where 	b_vote_event.vote_id=24 and -- внести идентификатор опроса 			b_vote_event.date_vote>\'2017-01-01 00:00:00\' and  	-- внести дату начала выборки 			b_vote_event.date_vote&lt;\'2023-01-01 00:00:00\'),   	-- внести дату окончания выборки cte_vote_data (id, uuser, ddate, answers) as( -- выбираем все ответы, \"склеиваем\" их в CSV. Ячейка ограничена двойными кавычками. Разделитель - точка с запятой 	select 	cte_b_vote_event_id.id as id,  			coalesce(concat(b_user.login,\' \', coalesce(b_user.name,\'\'),\' \',coalesce(b_user.last_name,\'\'),\' (\',b_user.id,\')\'),\'неавторизованный пользователь\') as user,  			cte_b_vote_event_id.date_vote as ddate, 			(select group_concat(coalesce((	select group_concat(trim(concat(replace(coalesce(b_vote_answer.message,\' \'),\'\"\',Char(39)),\' \',replace(coalesce(b_vote_event_answer.message,\' \'),\'\"\',Char(39)) )) separator \' &amp;&amp; \') -- &amp;&amp; разделяет если ответов несколько 											from b_vote_event_answer -- так как ответ может быть внесен пользователем \"руками\" или выбран из готового, то просто конкатим эти строки 												left join b_vote_answer on b_vote_answer.id=b_vote_event_answer.answer_id 											where b_vote_event_answer.event_question_id=b_vote_event_question.id  								),\' \') separator \'\";\"\') 			from b_vote_question 					left join b_vote_event_question on b_vote_event_question.question_id=b_vote_question.id and b_vote_event_question.event_id=cte_b_vote_event_id.id               			where b_vote_question.vote_id=24) as content -- внести идентификатор опроса 	from  cte_b_vote_event_id 				left join b_vote_user on b_vote_user.id=cte_b_vote_event_id.vote_user_id 				left join b_user on b_user.id=b_vote_user.auth_user_id 	order by id desc)               -- в итоговом запросе склеиваем заголовки с ответами и убираем переносы,  чтобы не \"ломался\" csv-файл select replace(replace(concat(\'\"\',id,\'\";\"\',uuser,\'\";\"\',ddate,\'\";\"\',answers,\'\"\'),char(10),\'\'),char(13),\'\')  from cte_headers union select replace(replace(concat(\'\"\',id,\'\";\"\',uuser,\'\";\"\',ddate,\'\";\"\',answers,\'\"\'),char(10),\'\'),char(13),\'\')  from cte_vote_data</code></pre><h2>Запрос без CTE (если в вашей СУБД CTE не поддерживается)</h2><pre><code class=\"sql\">/*скрипт позволяет вытащить результаты любого голосования в Битрикс Управление Сайтом в форме csv  Внесите идентификатор опроса в двух местах в запросе (сейчас поставлено 24), укажите период  за который нужна выгрузка, выполните запрос, сохраните результаты в csv-файле (в ANSI) и отройте его в Excel  В текстах будут удалены переносы и табуляции, а двойные кавычки заменены на одинарные    */  /* При вызове всего этого скрипта из кода необходимо проверять существоваение хранимки get_b_votes и только если она есть - выполнять дальнейший код, что бы не пересекаться с другими сессиями */ SET @@session.group_concat_max_len = 100000; /*этот параметр можно выставить в кофигурации mysql, он ограничивает максимальную длину, возвращаемую GROUP_CONCAT*/ SET SQL_SAFE_UPDATES = 0; DROP PROCEDURE IF EXISTS get_b_votes; delimiter $$ create procedure get_b_votes( in _vote_id int, in _date_from timestamp, in _date_to timestamp ) begin /*Создаем курсор и обвязку для формирования осташейся части таблицы*/     Declare done int default 0;     Declare now_vote_event_id int;       Declare vote_event_cursor Cursor for (select id from b_vote_event where b_vote_event.vote_id=_vote_id and b_vote_event.DATE_VOTE&lt;_date_to and b_vote_event.DATE_VOTE>_date_from order by id desc);     DECLARE CONTINUE HANDLER FOR SQLSTATE \'02000\' SET done=1;  /*Создаем временные таблицу, содержимое которых потом вернем*/     DROP TABLE IF EXISTS get_b_votes_temp_table;     CREATE TEMPORARY TABLE get_b_votes_temp_table (     `id` varchar(255),     `user` varchar(255),     `ddate` varchar(255),     `content` longtext     ) ENGINE=InnoDB DEFAULT CHARSET=utf8;     DROP TABLE IF EXISTS get_b_votes_return_table;     CREATE TEMPORARY TABLE get_b_votes_return_table (     `content` longtext     ) ENGINE=InnoDB DEFAULT CHARSET=utf8;  /*Формируем первую строку таблицы (заголовки)*/         insert into get_b_votes_temp_table (id, user, ddate, content)     (     select \'ID\',\'Посетитель (ID)\' ,\'Дата\',         (select group_concat(replace(coalesce(b_vote_question.question,\'\'),\'\"\',Char(39)) separator \'\",\"\')            from b_vote_question      where b_vote_question.vote_ID=_vote_id      order by  b_vote_question.c_sort));  /*Формируем оставшуюся часть таблицы*/         open vote_event_cursor;      read_loop:LOOP         FETCH vote_event_cursor INTO now_vote_event_id;         IF done THEN LEAVE read_loop;  END IF;             insert into get_b_votes_temp_table (id,user,ddate,content)                    select                  b_vote_event.id as id,                  coalesce(concat(b_user.login,\' \', coalesce(b_user.name,\'\'),\' \',coalesce(b_user.last_name,\'\'),\' (\',b_user.id,\')\'),\'неавторизованный пользователь\') as user,                  b_vote_event.date_vote as ddate,                    (select group_concat(coalesce((select group_concat(trim(concat(replace(coalesce(b_vote_answer.message,\' \'),\'\"\',Char(39)),\' \',replace(coalesce(b_vote_event_answer.message,\' \'),\'\"\',Char(39)) )) separator \' &amp;&amp; \') -- &amp;&amp; разделяет если ответов несколько                                                 from b_vote_event_answer                                                 left join b_vote_answer on b_vote_answer.ID=b_vote_event_answer.answer_id                                                 where b_vote_event_answer.event_question_ID=b_vote_event_question.id                                                  ),\' \') separator \'\",\"\')                 from b_vote_question                 left join b_vote_event_question on b_vote_event_question.question_ID=b_vote_question.id and b_vote_event_question.EVENT_ID=now_vote_event_id                                where b_vote_question.VOTE_ID=_vote_id) as content                 from  b_vote_event                     left join b_vote_user on b_vote_user.id=b_vote_event.vote_user_id                     left join b_user on b_user.id=b_vote_user.auth_user_id                     where b_vote_event.id=now_vote_event_id;      END LOOP; /*закрываем курсор*/              close vote_event_cursor;     /*Проводим окончательную обработку - сливаем все в один столбец*/         insert into get_b_votes_return_table (content) select replace(replace(concat(\'\"\',get_b_votes_temp_table.id,\'\",\"\',get_b_votes_temp_table.user,\'\",\"\',get_b_votes_temp_table.ddate,\'\",\"\',get_b_votes_temp_table.content,\'\"\'),char(10),\'\'),char(13),\'\') from get_b_votes_temp_table; /*Возвращаем что получилось*/         select * from get_b_votes_return_table as result;   end $$ delimiter ; /*это - пример вызова созданной процедуры. Сюда нужно подставлять индентификатор опроса (зд. опрос битрикса а не хайлоад-блок) и сроки для выборки с... по...*/ call get_b_votes(24,\'2017-01-01 00:00:00\',\'2023-05-01 00:00:00\');  DROP PROCEDURE IF EXISTS get_b_votes;</code></pre><p>Для желающих поковырять выкладываю схему взаимосвязей таблиц модуля Vote с основными полями:</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/556/413/6f4/5564136f45d108495d49361621dd1d2f.jpg\" width=\"912\" height=\"640\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/556/413/6f4/5564136f45d108495d49361621dd1d2f.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>P.S. Автор не занимается продвижением или критикой 1С-Битрикс, а взаимодействует с ним таким, какой он есть. Также автор не претендует на звание гуру SQL и оформления кода. </p><p></p></div>'),
(23, 'Как и почему мы внедрили Greenplum в КХД ', '/ru/company/rosbank/blog/678646/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Привет, Хабр! Меня зовут Максим Солопин, в Росбанке я работаю архитектором корпоративного хранилища данных. В этом посте я расскажу о том, как мы переезжали из data lake, куда ежедневно сваливались все сырые данные, в удобную систему на основе Greenplum. А по дороге немного затрону развитие моделей корпоративных хранилищ данных.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/getpro/habr/upload_files/9f2/f0d/ce4/9f2f0dce462c084418c622c702a9c5b5.PNG\" width=\"1326\" height=\"743\"/><figcaption></figcaption></figure><p>К началу проекта в банке было целых 3 КХД, 5 песочниц, 7 BI серверов и 0 golden source, на основе которых несколько лет развивался data lake. Загрузки там дублировались, и чтобы избежать этого, мы решили брать сырые данные из Hadoop.</p><p>Но это лишь принесло новые проблемы. Данные грузились медленно, подтягивались не из всех источников в банке (сейчас их более 50). Самописный фреймворк загрузки был сырым, нужен был мониторинг, поддержка и, соответственно, огромное количество ресурсов на это всё и также на разработку.</p><p>Затем в начала 2021 года мы решили создать свой первый Golden Source на основе Greenplum. Работала над миграцией наша core-команда, развивающая ритейл-песочницу банка. Greenplum мы выбрали по нескольким причинам: масштабируемость, скорость, умеренная стоимость, совместимость с Hadoop, возможность подключить максимально разнообразные источники в рамках универсальной модели данных.</p><p>С моделей данных я и начну подробный рассказ.</p><h3>Как устроены корпоративные хранилища данных</h3><p>Классическим подходом к хранению данных в компании считается концепция Data Warehouse (DWH), история которой началась в далеком 1990 году, когда американский ученый Билл Инмон опубликовал книгу «Building the Data Warehouse». Инмон выделял четыре ключевых свойства DWH:</p><ul><li><p><strong>Subject-oriented</strong> – все элементы данных в базе, относящиеся к одному и тому же реальному событию или объекту, связаны друг с другом; при этом хранилище данных содержит информацию о конкретном предмете, таком как <em>продукт</em>, <em>клиент</em>, <em>продажи </em>и т.д.</p></li><li><p><strong>Time-variant</strong> – изменения данных в базе отслеживаются и записываются, чтобы можно было создавать отчеты по изменениям с течением времени.</p></li><li><p><strong>Non-volatile</strong> – данные в базе никогда не перезаписываются и не удаляются; после фиксации они становятся статическими, доступными только для чтения и в таком виде сохраняются для будущих отчетов;</p></li><li><p><strong>Integrated</strong> – база содержит данные из большинства или всех операционных приложений организации, и эти данные согласованы.</p></li></ul><p>Несколько иного подхода придерживался оппонент Инмона Ральф Кимбалл и корпорация Microsoft. Они акцентировали внимание на витринах данных, то есть на срезах хранилища данных, представляющих собой массив тематической, узконаправленной информации. Для покупателей такой подход был более привлекательным — продавать витрины с быстрыми и эффектными отчетами легче, чем погружать в сложные процессы создания хранилища.</p><p>Создание DWH было более долгим, затратным, и в подходе Инмона витрины появлялись лишь на финальной стадии. Но и подход группы Кимбалла менялся со временем.</p><p>DWH работают по методу <strong>ETL </strong>– Extract, Transform и Load. Это означает, что данные подготавливаются и загружаются в хранилище на регулярной основе, скажем, раз в месяц. Загрузка занимает много времени, и часто на это время хранилище приходится закрывать для использования, что плохо.</p><p>Корпоративные хранилища со временем эволюционировали, что привело к появлению концепции Data Lake. Озера данных используют подход <strong>ELT </strong>– Extract, Load и Transform. Сырые данные сразу же загружаются в хранилище, а затем в фоновом режиме преобразуются и продвигаются от слоя к слою вплоть до последнего слоя витрин данных.</p><p>Преимущества Data Lake в том, что здесь нет тяжеловесного этапа подготовки данных и хранилище не нужно закрывать на время обновления. Для финтеха постоянная доступность является критически важной. Кроме того, специалисты по данным и машинному обучению могут использовать данные сразу по мере поступления. </p><h3>Модель данных в Росбанке</h3><p>Наша модель данных, основанная на методологии Билла Инмона, была уже обкатана. У нас были выделены основные сущности, такие как клиенты, счета, договора, проводки, балансы и т.д.</p><p>Каждая таблица может иметь таблицу-расширение. Например, для таблицы договора расширением может быть таблица-расширение её кредитного договора. В нее уже попадают атрибуты, которые не вписались в таблицу договора. Также у любой таблицы может быть таблица %_property. В нее выносят атрибуты, по которым, например, нужна историчность или не хочется создавать таблицу-расширение, поскольку таких атрибутов мало.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/685/f5d/7be/685f5d7be568c92fc58ed6dac0419d37.png\" width=\"644\" height=\"358\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/685/f5d/7be/685f5d7be568c92fc58ed6dac0419d37.png\"/><figcaption></figcaption></figure><p>Так организованы потоки данных в нашем хранилище. Поясню некоторые элементы:</p><ul><li><p>STG — слой, содержащий сырые ext-таблицы. Отдельного ELT-потока в GP нет, таблицы только подключаются к Hadoop.</p></li><li><p>ODS — слой для накопления истории из слоя STG по нужным атрибутам. Используется редко, так как историю сырых данных мы не копим.</p></li><li><p>DDS — содержит детальные данные по основным сущностям.</p></li><li><p>EM — содержит витрины с агрегированными показателями базовых сущностей: клиентский портфель, портфель HR, кредитные и депозитные портфели и т.д.</p></li><li><p>DM — витрины с рассчитанными агрегатами, сложными расчетами атрибутов. Этот слой содержит общие витрины для всех департаментов. Только на его основе далее формируются отчеты. Также есть отдельные DM-слои под конкретные бизнес направления.</p></li><li><p>DICT – слой справочников.</p></li></ul><p>Справочники могут загружаться вручную, могут наполняться из файлов, могут затягиваться из систем-источников: с MDS, через API и т. д.</p><p>Расскажу немного о параллельной работе над двумя хранилищами. Для работы над новым хранилищем мы задействовали команду старого, и ребятам приходилось одновременно поддерживать оба. Бизнес всегда на первом месте, поэтому приоритеты часто менялись, и на новое хранилище временами не хватало рук. Разработку на старом хранилище мы не заморозили, и в итоге у нас несколько расходилась логика с новым; пришлось потратить много ресурсов, чтобы его доделать. </p><p>Помогло нам то, что мы позволили активно развивать хранилище любым другим командам разработчиков. Для этого все они должны придерживаться нашей установленной модели данных и стандартов проектирования. И в команде должен быть хотя бы один лидер, который будет эти стандарты валидировать, обучать людей, отвечать на вопросы по архитектуре модели. Несколько раз в неделю эти лидеры собираются на архитектурные митапы, где обсуждают возникающие проблемы и вопросы, задаются новые правила, стандарты и т. д.</p><p>Таким образом мы исключили проблемы с большим бэклогом на одной команде.</p><h3>Оркестрация загрузок</h3><p>Оркестрация потоков идет в airflow, и для нас это был новый инструмент. Все загрузки Hadoop, которые шли раньше в cron, мы перевели в airflow. Для этого был сделан генератор дагов, который автоматически формирует задачи по загрузке таблиц из источников.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/836/248/60d/83624860df4ac62860c5760a139ecbca.png\" width=\"610\" height=\"759\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/836/248/60d/83624860df4ac62860c5760a139ecbca.png\"/><figcaption></figcaption></figure><p>Затем мы сделали такой же генератор для запуска sql-функций на GP. Там зависимости не такие линейные, и выглядит в airflow это уже не так красиво:</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/836/baf/3e3/836baf3e399bb64ef96cda5948e3408b.png\" width=\"859\" height=\"618\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/836/baf/3e3/836baf3e399bb64ef96cda5948e3408b.png\"/><figcaption></figcaption></figure><p>Сейчас идет пилот по переходу на Gitlab + Gitlab CI, и в ближайшее время мы перейдем на автоматизацию процесса поставок кода. Пока же весь код в БД попадает только через Bitbucket, в ручном режиме после апрува пулл-реквеста.</p><h3>Загрузчик реплик в БД</h3><p>В начале статьи я упоминал наш фреймворк для загрузки данных. Расскажу о нем отдельно. Универсальный загрузчик создает реплики таблиц из БД систем-источников (DB2, Oracle, MSSQL, PostgeSQL, Pervasive), а также актуализирует реплики на указанную дату. Загрузчик обеспечивает накопление истории изменений таблиц в Hadoop в структуре Slow Changing Dimension type 2 (маркировка версий записей полями DT_FROM, DT_TO), причем на неограниченную глубину.</p><p>Список входной информации загрузчика выглядит так:</p><ul><li><p>batch-версия — read-only таблицы в системах-источниках, подключение через JDBC);</p></li><li><p>CDC-версия — файлы данных в виде changelog, полученных в результате работы CDC (в формате JSON, Parquet или ORC);</p></li><li><p>файлы конфигурации и метаданные (описание таблицы).</p></li></ul><p>А это выходная информация:</p><ul><li><p>таблица-реплика в Hive с возможностью хранения истории изменений;</p></li><li><p>журналы работы в YARN и в базе метаданных.</p></li></ul><p>Загрузчик поддерживает автоматическую репликацию DDL — изменение структуры таблицы в Hive после изменения DDL на источнике. Для batch-загрузки доступна проверка на дубликаты по ключу с отбрасыванием дублей в reject-таблицу. Для CDC-загрузки возможно игнорирование полных дубликатов во входных данных (если был выполнен CDC-refresh без удаления старых файлов), а также операций Update/Delete по несуществующим ключам.</p><p>Загрузчик пока что имеет некоторые ограничения, связанные с загрузкой колонок таблиц, совместимостью и функциональностью для репликации DDL.</p><h3>Итоги </h3><p>Миграция первой песочницы прошла успешно. Сейчас на основе новых данных у нас ежедневно рассылается мотивация сотрудникам. К середине года будет завершена полная миграция и параллельно другие команды начинают миграцию остальных хранилищ банка.</p><p>Главный урок, который мы получили во время проекта: мы сами должны понимать, что хотим, сами выстраивать нужную архитектуру и модель, а не полагаться на вендоров. И у нас должны быть ресурсы, которые всё это поддерживают.</p></div>');
INSERT INTO `articles` (`id`, `name`, `link`, `text`) VALUES
(24, 'Ностальгия по дням работы в Stripe ', '/ru/post/678660/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><img src=\"https://habrastorage.org/r/w780q1/webt/bg/vg/qk/bgvgqkpn3vdy86w1x-sveeecyco.jpeg\" alt=\"image\" data-src=\"https://habrastorage.org/webt/bg/vg/qk/bgvgqkpn3vdy86w1x-sveeecyco.jpeg\" data-blurred=\"true\"/><br/>  <br/>  За первые 5 лет, как я выпустилась из колледжа, я поработала в 5 разных компаниях. Очарование Кремниевой Долины захватило мое внимание, но, после пробы себя на нескольких скучных должностях, я начала задаваться вопросом: “Почему же тогда все вокруг так сходят с ума по долине?”<br/>  <br/>  Затем, в 2015 году я присоединилась к неизвестному маленькому стартапу, работающему с платежами, в Сан-Франциско, который назывался Stripe. Там все было иначе.<br/>  <br/>  Офис был довольно тихим — люди постоянно были чем-то заняты. Записи на досках в зале для конференций выглядели словно зарисовки сцен мультфильма о доказательстве математической теоремы (как я вскоре узнала, на доске были нарисованы потоки платежей, которые мы вскоре все запомнили наизусть). Нас побуждали записывать все идеи, приходящие в голову, и затем делиться ими в Google Group, на которую каждый в компании мог подписаться и читать, не важно, был ли это важный стратегический отчет, рефлексия на какую-то тему или мирская переписка по почте.<br/>  <br/>  Как они нам сказали, миссия компании была в “увеличении GDP Интернета”. Звучало абстрактно, но мы верили в нее достаточно, чтобы относиться к ней с гордостью. В обеденное время, люди садились с первыми попавшимися соседями, вместо того, чтобы искать своих товарищей. Все оставались на ужин, — отчасти потому что к вечеру оставалась работа, и отчасти потому что шеф Тони готовил что-то вкусное. Но главная причина тому — я не могла уйти домой раньше моего соседа. Беседы часто касались чертежей на доске или книг, которые кто-то недавно прочитал или запостил в наш канал в Slack для вдохновения (я была удивлена, когда узнала, что роман, который я читала, даже разработчикам казался таким же интересным, как и их технические документы).<br/>  <a name=\"habracut\"></a><br/>  Когда мы писали имейлы покупателям, нам не разрешали использовать фразы “спасибо за то, что уделили время” (слишком самонадяенно) или “как было отмечено ранее” (пассивная агрессия). Отправка заметок со встреч была привилегией, не рутиной. Мои коллеги помогали мне в моей работе — потому что я просила их об этом, и потому что это делало работу лучше, но не потому что они не доверяли мне. Однажды CFO позвонил мне после того, как я отправила свои отчеты, чтобы напомнить, что мне следует использовать слово “ретроспектива”. Моя работа была оценена моими коллегами и боссами тщательно, с доброжелательной критикой, и по этой причине моя работа становилась все лучше и лучше. Вы не могли прожить и дня на работе без того, чтобы услышать принципы работы компании. Сотрудники могли повторять по памяти содержание главных документов Stripe дословно — иногда даже через годы после их публикации.<br/>  <br/>  Я слышала, что культура в любой компании изначально должна была строиться благодаря вкладу каждого сотрудника. Но здесь это так. Stripe — наше общее дело и мы все принимаем в нем участие. Во всех его аспектах.<br/>  <br/>  По ощущениям это была магия, но за всем этим стояло глубокое внимание деталям, забота и намерение. У меня было острое чувство, что я была частью организации, которая словно хакнула процесс создания отличной культуры. За мои последующие 10 лет работы в этой компании она увеличилась в 10 раз в своем размере, и влияние непрерывной концентрации на то, чтобы делать хорошую работу вместе, а также становление приверженцами корпоративной культуры влияли на наши жизни снова и снова. Моя работа продолжала становиться лучше. Мои взаимоотношения с коллегами становились более глубокими. Для моей личной жизни тоже пригодились улучшенные навыки общения и работы с людьми.<br/>  <br/>  Будучи вдохновленной тем, что происходило в Stripe как в компании, и со мной как с работником и человеком, я начала старательно записывать, что же именно мы делали, чтобы построить компанию вместе. Я перестала видеть свой день без чтения и разговоров о том, как появляются корпоративные культуры. Я также решилась на то, чтобы внести большой вклад в многие инициативы по улучшению культуры нашей компании: интеграцию новых команд, выведение наших первых принципов внедрения, запуск процесса планирования, который распространялся на всю компанию, проведение интервью у кандидатов и проверку их на соответствие культуре, включая лидеров других компаний, а также создание форума для сотрудников для того, чтобы они делились своим опытом друг с другом. Все это углубило мою связь с работой и коллегами.<br/>  <br/>  В 2018 мое любопытство по поводу создания корпоративной культуры усилилось, когда я начала работать в Stripe Press, подразделение Stripe, которое занимается изданием книг, нацеленное на улучшение и развитие идей. Я разговаривала с читателями и писателями, многие из которых размышляли о том, как объединить людей для создания прекрасного, будь то в стенах компании или в обществе в целом. Я изучала, как амбициозные организации, известные своими сильными корпоративными культурами, построили их (Apple, Amazon, San Francisco 49’ers, DARPA, Bell Labs). Я залпом читала сотни книг, подкастов и эссе на тему. Затем, я начала писать собственные мысли на этот счет и помогать компаниям воспроизводить советы, которые я упоминала. <br/>  <br/>  После долгих месяцев разговоров и чтения, я могу сказать с полнй уверенностью: ничто великое в нашем мире не делается без усилий целой команды, которая направляет все свои усилия, чтобы создать что-то вместе. И это настоящее сотрудничество делает целое лучше объединения разрозненных частей. И это заставляет приложить все возможные усилия, чтобы сделать работу, которой ты будешь гордиться, а также вдохновлять своих коллег на то же самое. В Stripe у нас все это было в крови.<br/>  <br/>  Невозможно не признать тот факт, что культура — ответственное дело. Я проводила много поздних ночей за работой. Я плакала несколько раз, когда я чувствовала, что подвожу пользователей или коллег. Мое сердце было готово выпрыгнуть из груди, когда я направлялась на отчетную встречу. Было множество раз, когда мне приходилось просить напарника пройтись вокруг офиса, чтобы успокоиться после новости о том, что мы решили опять отложить запуск продукта, над которым я так долго работала, доводя до идеала. Мой синдром самозванца был выше крыши. Однажды мой менеджер попросил меня еще раз подумать о необходимости моего отпуска, потому что моя команда во мне очень нуждалась. “Если ты уйдешь, кто выполнит твою работу?” Я посмотрела на моих коллег, которые постоянно работали по 15 часов в день и решила остаться. Я горжусь этим выбором. Называйте меня мазохисткой, но мне пришлось признать, что было круто заботиться о чем-то настолько сильно. И быть вокруг других людей, которые тоже так же сильно заботились.<br/>  <br/>  Однажды кандидат меня спросил, какой был мой любимый период в истории Stripe. Я подумала на секунду. “Покажется странным, но мой любимый период — в 2015 году, когда наш API испытывал серьезные проблемы со стабильностью.” Моя собеседница подняла брови в недоумении. Мне стало неловко. “Вы удивлены?” — я продолжила, пытаясь вернуть самообладание. — “Мы узнали, насколько наши пользователи нуждались в нас, и все мы объединились, чтобы помочь им по-настоящему удивительными способами”. Я была готова рассказать историю о том, как команда по продажам заказала несколько пицц для команды поддержки, когда они поняли, что мы будем работать еще одну ночь. Но она ответила: “Да, я удивлена. Но потому что вы третий человек, кто говорит это мне за сегодня”.<br/>  <br/>  Впоследствии я начала чувствовать, что Кремниевая Долина потеряла культуру. Я больше не слышу, как люди говорят о своей работе в таком ключе. Может, это и к лучшему. А может, и нет.<br/>  <br/>  Переход к удаленной и гибридной работе не приносит нашим сотрудникам никакой выгоды. Координирование происходит сверху, и коллеги очень далеки друг от друга. Я знаю, что на этой планете нет ни одного человека, который бы не пострадал от наплыва тяжелых событий в последние несколько лет.<br/>  <br/>  Я не буду говорить за других больше, но скажу, что это первый раз в моей жизни, когда я больше не уверена, что будущее будет таким же благоприятным и понятным, каким оно виделось раньше. Я понимаю, что есть весомые причины, почему работа не находится сейчас на первом месте в списке приоритетов для людей. Но я все равно скучаю по тому времени, когда в работе у каждого было большое стремление и драйв. У меня и у всех вокруг меня.<br/>  <br/>  Я думаю, что это не столько то, чего мне не хватает в работе в Stripe (и я считаю, что это уже далеко не та компания, чем та, которой она была 3 года назад. Скорее это нехватка негласной и полной преданности своему делу. И чувства того, что от коллег ты можешь ожидать таких действий, которые заставят вас думать что-то наподобие: “мы по-настоящему, по-настоящему вместе справляемся с этим”.<br/>  <br/>  Я видела многих людей, которые говорят, пишут тексты и твиты об этой всепоглощающей культуре со стороны неудовлетворения, недоверия, скептицизма и разочарования. Я знаю, что некоторые люди работают много. Я знаю, что другие нет. Я знаю, что люди чувствуют, что другие не видят их отдачу, не понимают, что они делают что-то важное. Возможно, вы один из них. Понимаю. Я тоже так чувствую иногда. И я не думаю, что люди должны из-за этого переживать или чувствовать себя лишними, или пропускать отпуска.<br/>  <br/>  Но я считаю, что работа может быть источником настоящего смысла жизни. Но, мы будем получать только то, что мы вкладываем. И в контексте рабочей жизни, это нечто вроде коллективного решения. Как только ваш сосед начинает выходить из Slack в 3:30 утра постоянно, сложно не делать того же. Если ваши самые приближенные коллеги не бросают дело быстро, а доводят его до конца, не сдаваясь, разве вы не последуете их примеру? Если в кабинете нет никого, кто бы просил написать новый пост в корпоративный блог, то почему бы просто не сделать работу “на отвали” и не пойти в кафе с друзьями? Путь наименьшего сопротивления стоит перед нами, и мы выбираем идти по нему.<br/>  <br/>  Я всеми руками за создание здоровых границ, которые делают нас удовлетворенными и эмоционально стабильными — в работе и за ее пределами. И, конечно, я верю, что вы можете любить без необходимости терпеть боль. Но я никогда по-настоящему не любила ничего, что не находит отклик в моей душе. Что, если все эти усилия, которые мы прикладываем к тому, чтобы избавиться от работы и отдыхать, на самом деле отдаляют нас от лучших версий себя?<br/>  <br/>  Так как мне повезло работать в месте, которое делает меня лучше и отвечает моим запросам, я могу сказать, насколько многое дает хорошая команда и развитая культура компании. Польза выходит далеко за пределы навыков, которые позволяют вам справиться с работой. По-настоящему крутой результат приходит, когда ты смотришь на то, что успешно осуществил и думаешь: “У меня не было даже и мысли, что я это могу”. Или например оглядываешься назад и говоришь: “Вау, эти люди и вправду помогли мне, по-настоящему помогли мне оказаться здесь, на этом уровне”. Или смотришь внутрь себя и видишь, насколько глубоки и сильны твои чувства гордости, удовлетворения и благодарности. И когда этого у тебя очень много, оно начинает переливаться за рамки работы и начинает влиять на другие аспекты и сферы жизни.<br/>  <br/>  Несколько месяцев назад кто-то пожаловался мне, что новый стартап, в котором он работал, имел “кпмн”-культуру. Он объяснил, что, что бы они не делали и какой бы хорошей работа ни была, каждый просто говорит: “как по мне, норм”. “Я знаю, что мне необходимо чувствовать себя компетентным членом команды, несущего весомый вклад, а также на которого можно положиться”, он продолжил. — “и мои коллеги очень добры, но в конце дня я чувствую, словно ни у кого нет стандартов и принципов оценки”. Он посмотрел в кружку кофе в этот момент. “Я боюсь, что не стану больше ходить на эту отличную работу”.<br/>  <br/>  Так, а теперь сложите все эти ситуации, с которыми сталкивается каждый работающий человек и каждая компания. Что это сделает с нашим коллективным влиянием на мир? Что это сделает с прогрессом? Вот-вот.<br/>  <br/>  Я не уверена в том, как нам лучше балансировать между новыми реалиями нашего мира и рабочей жизнью, которая постоянно требует многого от нас. Но я знаю, что сидеть сложа руки не получится, нужно решать проблему. Наши лидеры должны нас поддерживать, потому что любой человек, независимо от его должности, играет очень важную роль в становлении организации, в которой хочется работать.<br/>  <br/>  И когда мы начинаем делать организацию лучше, мы превращаем ее в потрясающее сообщество и место для самореализации. То, чем она и должна быть.<br/>  <br/>  Поверьте, это возможно. И поверьте мне, это так же классно, как вы себе представляете.<br/>  <br/>  <i>За перевод спасибо <a href=\"https://t.me/railesv\" rel=\"nofollow noopener noreferrer\">@railesv</a></i><br/>  <br/>  <hr/><br/>  Следите за новостями <b>Мировоззрение Y Combinator</b> <a href=\"https://t.me/yclibrary\" rel=\"nofollow noopener noreferrer\">в телеграм-канале</a>.<br/>  <br/>  <h3>Полезные материалы</h3><br/>  <ul>  <li><a href=\"https://foundersatwork.io/\" rel=\"nofollow noopener noreferrer\">150+ историй основателей стартапов из YC</a></li>  <li><a href=\"https://habr.com/ru/company/engelbart/blog/484114/\">Подборка 143 переводов эссе Пола Грэма (из 184)</a></li>  <li><a href=\"https://habr.com/ru/post/529224/\">75 лекций на русском от Y Combinator (из 172)</a></li>  <li><a href=\"https://habr.com/ru/post/528498/\">Y Combinator: русскоговорящие основатели</a></li>  <li><a href=\"https://habr.com/ru/post/489200/\">Какие стартапы ищет Y Combinator в 2020 году</a></li>  <li><a href=\"https://t.me/siliconpravdachat\" rel=\"nofollow noopener noreferrer\">Чат Y Combinator in Russian</a></li>  <li><a href=\"https://www.facebook.com/groups/547726792364028\" rel=\"nofollow noopener noreferrer\">Паблик в фейсбуке YCombinator in Russian</a></li>  </ul></div>'),
(25, 'Китай продолжает развивать индустрию производства электроники: компания SMIC поставляет на рынок 7-нм чипы ', '/ru/company/selectel/blog/653639/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><div style=\"text-align:center;\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/215/85f/2e4/21585f2e458ec78f761d7973cacef49a.png\" data-src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/215/85f/2e4/21585f2e458ec78f761d7973cacef49a.png\"/></div><br/>  <sup><i>SMIС. Источник: Bloomberg</i></sup><br/>  <br/>  На Хабре совсем недавно <a href=\"https://habr.com/ru/news/t/678220/\">публиковалась</a> новость о том, что китайская компания SMIC (Semiconductor Manufacturing International Corporation)выпускает 7-нм чипы, реверс инжиниринг которых показывает определенную схожесть китайских технологий с теми, что использует TSMC. Эта самая схожесть под большим вопросом, но в любом случае то, что китайская компания добилась возможности выпуска таких чипов — большой успех программы импортозамещения электронных компонентов Поднебесной. Да и сама по себе SMIC развивается чрезвычайно активно. Давайте посмотрим, как у SMIC обстоят дела и что там с этими 7-нм чипами. <br/>  <a name=\"habracut\"></a><br/>  <font color=\"#EB4247\"><h3>Крупнейшая в стране фабрика</h3></font><br/>  <div style=\"text-align:center;\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b31/8d6/508/b318d65083ec63f0d746a2007d25bef5.jpg\" data-src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b31/8d6/508/b318d65083ec63f0d746a2007d25bef5.jpg\" data-blurred=\"true\"/></div><br/>  Осенью прошло года SMIC начала строительство крупнейшей в Китае фабрики по производству полупроводниковых компонентов. Ну а зная масштабы производства разных компаний в этой стране, можно себе представить, что это будет за фабрика. К слову, сейчас SMIC считается крупнейшей микроэлектронной компанией континентального Китая со штаб-квартирой в Шанхае. <br/>  <br/>  Стоимость проекта — $8,87 млрд. В итоге планируется построить объект, который способен выпускать около 100 000 кремниевых пластин в месяц. Размещается фабрика в новой зоне свободной торговли Линган, район Пудун делового центра Китая: там же расположены мощности Tesla и Contemporary Amperex Technology. Особенно инновационным производство назвать нельзя — дело в том, что фабрика будет выпускать компоненты по 28-нм техпроцессу. <br/>  <br/>  В первую очередь, SMIC наладит производство микроконтроллеров, сетевых контроллеров, Wi-Fi чипов и контроллеров дисплеев. Эти элементы необходимы для производства самых разных устройств и всегда востребованы. <br/>  <br/>  Проект финансируется частично правительством, а частично — самой компанией. После того, как объект будет готов, четверть акций передадут локальному муниципалитету. И это еще не все — в течение ближайшего времени компания построит еще один завод, стоимостью в $2,35 млрд. <br/>  <br/>  Строительство ведется не смотря на то, что США внесло SMIC в черный список компаний, с которыми нельзя сотрудничать американским предприятиям. Кроме того, никому из компаний, которые используют технологии из США, нельзя делиться ими с китайцами. Но у SMIC огромный внутренний рынок, плюс большое количество зарубежных партнеров, не связанных с США, поэтому компания продолжает активно развиваться. Сейчас китайцы осваивают 14-нм и 10-нм техпроцесс. <br/>  <br/>  <font color=\"#EB4247\"><h3>7-нм чипы из Китая </h3></font><br/>  <div style=\"text-align:center;\"><img src=\"https://habrastorage.org/r/w780q1/webt/bd/rz/3v/bdrz3vfsqimwgfwlvfm_xvfplao.jpeg\" data-src=\"https://habrastorage.org/webt/bd/rz/3v/bdrz3vfsqimwgfwlvfm_xvfplao.jpeg\" data-blurred=\"true\"/></div><br/>  <sup><i>Источник: TechInsights</i></sup><br/>  <br/>  На днях во многих СМИ появилась новость о реверс инжиниринге 7-нм чипов, которые выпускает SMIC для нужд майнеров. Чип не самый новый, он продается, начиная с лета 2021 года. Изображения «вскрытого» чипа, по мнению специалистов из TechInsights, показывают определенную схожесть технологий, которые используется SMIC с технологиями тайваньской TSMC. Но как бы тут большой вопрос, как дела обстоят на самом деле, поскольку вывод был сделан относительно небольшой группой специалистов. <br/>  <br/>  Как бы там ни было, но то, что китайская компания, которая находится под очень жестким санкционным давлением США, в состоянии самостоятельно производить 7-нм чипы, говорит о многом. Эти чипы не самые сложные. Те же TSMC, Intel и Samsung выпускают более сложные процессоры. Но лиха беда начало — компания явно развивается и ее технологии идут вперед. Вполне может быть, что в ближайшее время она запустит и производство более технологически сложных компонентов. <br/>  <br/>  Не так давно компания заявила о том, что усовершенствовала технологию производства чипа, о котором идет речь. Сначала компания стала производить N+1 версию, а затем открыла проект по разработке N+2 версии чипа. Сам он называется MinerVa Bitcoin, размер — всего 4.6 x 4.2 мм. Пока что SMIC отрабатывает производство современных чипов на примере этого компонента, в будущем планирует заняться и более сложными технологиями. <br/>  <br/>  Небольшие по размеру MinerVa Bitcoin устанавливаются массивом, формируя базу мощной вычислительной системы. На одну такую систему устанавливается около 120 чипов. Итоговая платформа потребляет около 3,3 кВт*ч энергии. <br/>  <br/>  В любом случае, для SMIC производство таких чипов — несомненный успех, поскольку компания производит их самостоятельно, без помощи иностранных компаний. Сотрудничать со SMIC из-за санкций не могут ни TSMC, ни ASML, производитель литографических машин из Нидерландов. <br/>  <br/>  <font color=\"#EB4247\"><h3>Cанкции пошли на пользу импортозамещению Китая </h3></font><br/>  Конечно, назвать мощные санкции со стороны США благом для Поднебесной будет преувеличением, но с появлением первых признаков торговой войны последняя активизировала усилия по разработке полупроводниковых компонентов и электронных систем внутри страны. SMIC делает очень заметные успехи, но они есть и у других компаний. <br/>  <br/>  В прошлом году, например, AMEC не так давно заявила о разработке собственного оборудования по производству 5-нм чипов. Эта же компания заявила о предоставлении оборудования для обработки 300-мм кремниевых подложек, которое может применяться для широкого спектра техпроцессов — от 65 нм до 5 нм.<br/>  <br/>  Компания HSMC начала разворачивать производственную инфраструктуру по выпуску 14-нм процессоров, говорилось и о 7-нм техпроцессе.<br/>  <br/>  Еще одна компания, Ziguang разработала 512-ядерный процессор, выполненный по 7-нм техпроцессу.<br/>  <br/>  Совместная компания Via Technologies и правительства Китая компания выпустила процессоры KaiXian KX-6780A и KX-U6880A. Плюс еще один чип — процессор KX-6640MA X86 с частотой работы ядра 2,1 ГГц с возможность разгона до 2,6 ГГц.<br/>  <br/>  Ну а Huawei начала строить собственный завод по производству современных чипов. Для начала — процессора, который получил название название Kirin 9006C, он выполнен по 5-нм техпроцессу. Это восьмиядерный чип с частотой работы ядра 3,13 ГГц. Фабрику Huawei строит совместно с SMIC, еще одной достаточно известной компанией из КНР. <br/>  <br/>  Производят в Поднебесной и <a href=\"https://habr.com/ru/company/selectel/blog/653807/\">видеокарты</a>. Весной 2022 года были представлены адаптеры MTT S60 и MTT S2000. Автор проекта — компания Moore Threads, она смогла всего за год пройти путь от идеи до реальных устройств. Что касается карт, то первая предназначена для установки в персональных настольных ПК и высокопроизводительных рабочих станциях, она оснащена 8 ГБ памяти LPGDDR4X. А вот вторая, с 32 ГБ, предназначена для установки в серверах. Техпроцесс — 12 нм, не самый современный, но для поставленной китайцами цели вполне достаточно. Так, MTT S60 неплохо справляется с League of Legends с высокими настройками графики при разрешении 1920х1080 точек (Full HD).<br/>  <br/>  <font color=\"#EB4247\"><h3>Впереди планеты всей </h3></font><br/>  <div style=\"text-align:center;\"><img src=\"https://habrastorage.org/r/w1560/webt/3j/t5/77/3jt577obrluna56weiplwp_yobe.jpeg\" data-src=\"https://habrastorage.org/r/w1560/webt/3j/t5/77/3jt577obrluna56weiplwp_yobe.jpeg\" data-blurred=\"true\"/></div><br/>  Что в итоге? Очевидные успехи Китая, который, несмотря на все трудности, справляется с реализацией общенационального проекта по импортозамещению электроники и сопутствующих технологий. Совсем недавно стало известно, что 19 из 20 наиболее активно растущих компаний-производителей электроники мира — родом из Китая. <br/>  <br/>  В прошлом году китайские компании показали общий объем продаж микросхем примерно на $150 млрд. Сейчас Китай расширяет успех, планируя в ближайшее время достичь показателя в $500 млрд. Тем самым Поднебесная начинает понемногу возвращать вложенные средства, а они весьма немаленькие. <br/>  <br/>  В 2020 году правительство Китая приняло решение инвестировать $1,4 трлн за 5 лет в собственную электронную промышленность. Правительство планировало выделить средства китайским компаниям, производителям электроники и софта, для создания собственных 5G-технологий, умных гаджетов, а также разработки ИИ-продуктов. Конечно, ноунеймам деньги не предоставлялись, речь идет о таких гигантах, как Alibaba Group, Huawei Technologies Co. Ltd, SenseTime Group Ltd. и ряде других высокотехнологичных компаний.<br/>  <br/>  Деньги Китай выделил компаниям во многих своих провинциях — речь идет о 31 регионе. При этом инвестиции не на 100% государственные, средства выделял и частный капитал. Заявлялось, что объем предоставленных индустрии средств может быть даже выше заявленного — не $1,4 трлн, а сразу $2 трлн. В качестве основной задачи государство видело замену технологий IBM, Oracle, EMC и других компаний, которые использует, на собственные. Одна из подзадач — замена серверного оборудования в дата-центрах страны на отечественное. <br/>  <br/>  По успехам SMIC и других компаний из КНР видно, что планы государства и частных инвесторов реализуются, причем практически без задержек. В ходе работы над проектом по импортозамещению Китаю приходится решать огромное количество проблем, но страна явно с этим справляется. <br/>  <br/>  <a href=\"https://selectel.ru/services/dedicated/chipcore/?utm_source=habr&amp;utm_medium=referral&amp;utm_campaign=Brand_Brand_Article_230722_china\"><img src=\"https://habrastorage.org/r/w1560/webt/8h/m5/xv/8hm5xvpooct_rxglr_trcpl5ski.png\" data-src=\"https://habrastorage.org/webt/8h/m5/xv/8hm5xvpooct_rxglr_trcpl5ski.png\"/></a></div>'),
(26, 'Безопасная разработка приложений — на что обратить внимание при работе с открытым кодом ', '/ru/company/t1_cloud/blog/677740/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Мы в T1 Cloud <a href=\"https://habr.com/ru/company/t1_cloud/blog/675518/\">продолжаем рассказывать</a> о процессах безопасной разработки приложений Secure SDLC. Сегодня подробнее поговорим о потенциальных уязвимостях в компонентах <em>open source</em> и как от них защититься.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/efa/4f5/4cf/efa4f54cf70b590e6e202aa4c93e6b25.jpg\" alt=\"/ Unsplash.com / Chris Barbalis\" title=\"/ Unsplash.com / Chris Barbalis\" width=\"1920\" height=\"1342\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/efa/4f5/4cf/efa4f54cf70b590e6e202aa4c93e6b25.jpg\" data-blurred=\"true\"/><figcaption>/ Unsplash.com / Chris Barbalis</figcaption></figure><p>Подавляющее большинство приложений <a href=\"https://www.helpnetsecurity.com/2018/05/22/open-source-code-security-risk/\">полагается</a> на <em>open source</em>. По <a href=\"https://www.helpnetsecurity.com/2020/05/14/open-source-components-security/\">оценке</a> аналитиков из Synopsys, 99% проприетарных кодовых баз содержит как минимум один компонент с открытым исходным кодом. Такая практика работы даже над бизнес-критическими сервисами обусловлена не только экономией, но и повышенной надежностью. Ошибки и недочеты, будучи обнаруженными, оперативно исправляются совместными усилиями сообщества, поэтому открытые компоненты лучше защищены. Но на практике встречаются подводные камни.</p><h2>Подводные камни open source</h2><p>Многие продукты с открытым исходным кодом представляют собой масштабные проекты вроде Kubernetes или TensorFlow. Их разрабатывают и финансируют крупные ИТ-компании, которые нанимают специалистов для поиска и исправления уязвимостей. Однако существует целый пласт <em>open source</em> решений, над которыми работают энтузиасты в свободное время. Часто эти люди являются единственными контрибьюторами, несмотря на то что их проекты — «душа и сердце» инфраструктуры банков, сотовых операторов и других организаций.</p><p>У таких проектов зачастую нет ни надежной финансовой основы, ни гарантий нормальной работы. Вероятнее всего, там не проводят углубленный мониторинг уязвимостей. В то же время каждый открытый проект зависит от других — более мелких. В этой цепочке зависимостей легко может возникнуть брешь в безопасности, <a href=\"https://www.zdnet.com/article/open-source-software-security-vulnerabilities-exist-for-over-four-years-before-detection-study/\">способная просуществовать</a> больше четырех лет.</p><p>Так, возникают ситуации, подобные той, что <a href=\"https://www.technologyreview.com/2021/12/17/1042692/log4j-internet-open-source-hacking/\">произошла</a> с библиотекой журналирования Log4j. Команда занимается проектом на волонтерских началах и практически не получает денег за его поддержку. В конце прошлого года в коде библиотеки <a href=\"https://theconversation.com/what-is-log4j-a-cybersecurity-expert-explains-the-latest-internet-vulnerability-how-bad-it-is-and-whats-at-stake-173896\">нашли</a> уязвимость, которая существовала далеко не первый год. Она позволяла выполнить вредоносный код на сервере при помощи механизма <a href=\"https://ru.wikipedia.org/wiki/Java_Naming_and_Directory_Interface\">JNDI</a>.</p><p>Повезло, что в случае с Log4j разработчики занялись устранением недостатков. Но существуют тысячи других проектов, которые или заброшены, или не получают должного внимания со стороны <em>open source</em> сообщества. Эксперты Synopsys отмечают, что до 75% кодовых баз <a href=\"https://www.helpnetsecurity.com/2020/05/14/open-source-components-security/\">содержат</a> открытые компоненты с «непропатченными» уязвимостями.</p><p>В подавляющем большинстве случаев уязвимости в <em>open source</em> решениях — это результат ошибки мейнтейнера или сбой в сторонних компонентах. Но бывают ситуации, когда в исходники проекта намеренно встраивают вредоносный код. Так, в мае автор node-ipc <a href=\"https://security.snyk.io/vuln/SNYK-JS-NODEIPC-2426370\">добавил</a> в него зловреда, удаляющего все файлы с устройств с определёнными IP-адресами. Похожую акцию в начале года провел мейнтейнер пакетов faker.js и colors.js. Он <a href=\"https://www.revenera.com/blog/software-composition-analysis/the-story-behind-colors-js-and-faker-js/\">внедрил</a> в код бесконечный цикл, который выводил в консоль бессмысленную последовательность символов. В итоге была нарушена работа тысяч компаний по всему миру, включая ведущих облачных провайдеров.</p><p>Аналогичная история произошла еще в 2018 году с библиотекой Node.js — event-stream. Мейнтейнер решил переключиться на другие проекты, поэтому передал права на репозиторий добровольцу из сообщества. Через какое-то время тот <a href=\"https://www.trendmicro.com/vinfo/dk/security/news/cybercrime-and-digital-threats/hacker-infects-node-js-package-to-steal-from-bitcoin-wallets\">внедрил</a> в утилиту скрипт, ворующий данные криптовалютных кошельков у пользователей.</p><h2>Что с этим сделать</h2><p>Независимо от того, является код свободным или проприетарным, он нуждается в аудите и обслуживании, иначе возникает угроза безопасности для любого программного обеспечения, которое его использует. Первым делом имеет смысл <a href=\"https://startup.info/how-to-successfully-secure-open-source-software-applications/\">сформировать</a> каталог всех задействованных <em>open source</em> решений и библиотек. Там стоит отразить версии используемых продуктов и готовящиеся обновления. Такой подход позволит сформировать полную картину — какой открытый код использован на проекте (и где именно).</p><p>В то же время необходимо настроить инструменты для сканирования уязвимостей класса software composition analysis (SCA). Это — решения для поиска и устранения недостатков в коде и контроля внешних библиотек. Они анализируют версии, зависимости и другие отличительные характеристики, а затем сопоставляют их с базами данных уязвимостей — например, NVD. Системы SCA позволяют оценить серьезность уязвимости и её потенциальное влияние на бизнес-процессы, а также предлагают шаги для устранения проблем.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/c97/273/427/c97273427d0d5c36337095ff24fb75eb.jpg\" alt=\"/ Unsplash.com / Matthew Feeney\" title=\"/ Unsplash.com / Matthew Feeney\" width=\"1920\" height=\"1280\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c97/273/427/c97273427d0d5c36337095ff24fb75eb.jpg\" data-blurred=\"true\"/><figcaption>/ Unsplash.com / Matthew Feeney</figcaption></figure><p>Сканирование в рамках SCA достаточно легко <a href=\"https://www.aquasec.com/cloud-native-academy/devsecops/devsecops-tools/\">встраивается</a> в пайплайн CI/CD. Так, разработчики могут получать автоматические уведомления о проблемах с компонентами, которые они хотят подключить. Работа с уязвимостями на ранних этапах позволяет сэкономить — по некоторым оценкам, затраты на устранение ошибок после релиза возрастают в тридцать раз. Конечно, можно проводить сканирование, когда проект уже вышел в продакшн. Новые баги находят каждый день, а уведомление об инъекциях и уязвимостях 0-day минимизирует потенциальный ущерб.</p><p>Каждая компания может настроить такие инструменты самостоятельно, если обладает экспертизой App Sec. Но можно переложить эти вопросы на плечи облачного провайдера — например, необходимый инструментарий предлагаем мы в T1 Cloud. Платформа <a href=\"https://t1-cloud.ru/service/secure-development-platform/\">Cloud Secure Development Platform</a> умеет проводить анализ защищенности внешних компонентов (OST). Она сообщит об известных уязвимостях и других ограничениях в библиотеках и фреймворках.</p><p>Решение защищает от угроз, когда информация об уязвимости опубликована, но разработчики не успели устранить недостаток, либо патч уже выпущен, но в бизнес-процессах пока используется уязвимая версия компонента. Это особенно важно в контексте того, что у ИБ-специалистов все меньше времени на идентификацию уязвимостей — первый эксплойт вполне <a href=\"https://unit42.paloaltonetworks.com/state-of-exploit-development/\">может появиться</a> в течение недели. OST-система в облаке T1 Cloud построена на базе инструмента <a href=\"https://github.com/jeremylong/DependencyCheck\">DependencyCheck</a> в партнерстве со специалистами из компании SolidLab. Чтобы подключить услугу, нужно:</p><ul><li><p>Обратиться в техподдержку и заполнить анкету с указанием подключаемых к сервису продуктов.</p></li><li><p>Обсудить с инженерами SolidLab требования к процессу анализа внешних компонентов и определить стоимость внедрения. Она будет индивидуальной, так как зависит от масштабов и объемов приложений, числа сотрудников и других инфраструктурных особенностей.</p></li><li><p>Выполнить «карту готовности»: выделить необходимые ресурсы, предоставить доступы и так далее.</p></li><li><p>Подключить сервис и интегрировать OST-анализаторы с инструментами CI/CD.</p></li></ul><p>Наконец, остается обучить разработчиков работе со средствами анализа и разбора обнаруженных недостатков. С этими вопросами также помогут наши специалисты техподдержки и представители SolidLab.</p><hr/><p><strong>Серия публикаций о надежной разработке приложений:</strong></p><ul><li><p><a href=\"https://habr.com/ru/company/t1_cloud/blog/673052/\">Что такое Secure SDLC и на что обратить внимание</a></p></li><li><p><a href=\"https://habr.com/ru/company/t1_cloud/blog/675518/\">Взять и защитить SDLC — чем поможет облако</a></p></li></ul><p><strong>Дополнительное чтение в нашем блоге:</strong></p><ul><li><p><a href=\"https://habr.com/ru/company/t1_cloud/blog/677376/\">Что там с квантово-устойчивой криптографией</a></p></li><li><p><a href=\"https://habr.com/ru/company/t1_cloud/blog/669720/\">Взять и погрузиться в DevSecOps — ресурсы, которые помогут сделать это</a></p></li><li><p><a href=\"https://habr.com/ru/company/t1_cloud/blog/666636/\">Любит или не любит: парное программирование</a></p></li></ul></div>'),
(27, 'Telegram BOT API: добавляем кнопки к сообщениям и обрабатываем их на стороне сервера ', '/ru/post/678664/', '<div xmlns=\"http://www.w3.org/1999/xhtml\">Привет, HABR! В этой статье постараюсь показать маленький пример, использования клавиатуры под сообщением в Telegram. То есть мы с помощью бота будем отправлять пост в наш канал с использованием языка программирования PHP. Telegram BOT API неплохо документирован, но всё же остаются вопросы у новичков, как это всё собрать чтобы работало.<br/>  <br/>  <b>InlineKeyboardMarkup</b> — этот объект представляет встроенную клавиатуру, которая появляется под соответствующим сообщением.<br/>  <a name=\"habracut\"></a><br/>  <h2>Что мы хотим сделать?</h2><br/>  При публикации сообщение с использованием бота под сами сообщением вывести 5 кнопок (Нравиться, Ха-ха, Ух ты!, Сочувствую, Возмутительно) в виде смайликов. И цель их отображать количество людей, которые нажали на определённую кнопку.<br/>  <br/>  В сети уже много готовых библиотек на PHP по работе с Telegram BOT API. Для нашей задачи они не понадобятся. Итак приступаем.<br/>  <br/>  <h3>Нам понадобится</h3><br/>  <ol>  <li>Создать telegram канал;</li>  <li>Создать бота;</li>  <li>Добавить бота в telegram канал;</li>  <li>Хостинг на котором будет лежать файл обработки логики кнопок;</li>  <li>База данных в которой будем хранить id пользователей, которые нажал на кнопку.</li>  </ol><br/>  <h3>Логика</h3><br/>  При нажатии на определённую кнопку добавить счётчик в неё. Пользователь может нажать только на одну из 5-кнопок. В БД мы будем хранить ID сообщения и ID пользователей, которые уже отреагировали на сообщение.<br/>  <br/>  <h3>Структура файлов</h3><br/>  <ol>  <li>send.php — отправляем сообщение в Telegram канал</li>  <li>callback.php — обрабатываем клики кнопок получены из Telegram канала</li>  </ol><br/>  <h2>Содержание файла send.php</h2><br/>  <pre><code class=\"php\">&lt;?php    define( \'TOKEN\', \'&lt;token>\' );    define( \'CHAT_ID\', \'&lt;chat_id>\' ); // @name_chat    define( \'API_URL\', \'https://api.telegram.org/bot\' . TOKEN . \'/\' );        function request($method, $params = array()) {       if ( (!empty($params) ) {          $url = API_URL . $method . \"?\" . http_build_query($params);       } else {          $url = API_URL . $method;       }        return json_decode(file_get_contents($url), JSON_OBJECT_AS_ARRAY);    }     $keyboard = array(       array(          array(\'text\'=>\':like:\',\'callback_data\'=>\'{\"action\":\"like\",\"count\":0,\"text\":\":like:\"}\'),          array(\'text\'=>\':joy:\',\'callback_data\'=>\'{\"action\":\"joy\",\"count\":0,\"text\":\":joy:\"}\'),          array(\'text\'=>\':hushed:\',\'callback_data\'=>\'{\"action\":\"hushed\",\"count\":0,\"text\":\":hushed:\"}\'),          array(\'text\'=>\':cry:\',\'callback_data\'=>\'{\"action\":\"cry\",\"count\":0,\"text\":\":cry:\"}\'),          array(\'text\'=>\':rage:\',\'callback_data\'=>\'{\"action\":\"rage\",\"count\":0,\"text\":\":rage:\"}\')       )    );     request(\"sendMessage\", array(       \'chat_id\' => CHAT_ID,       \'text\' => \"hello world!\",       \'disable_web_page_preview\' => false,       \'reply_markup\' => json_encode(array(\'inline_keyboard\' => $keyboard))    )); </code></pre><br/>  Как видим по коду он очень просто и мы тут просто отправляем «Hello World!» сообщение и к нему добавляем 5 кнопок.<br/>  <br/>  Нам также нужно установить Webhook для бота. Это нужно для того, чтобы указать боту куда (http://site.ru/callback.php) отправлять результат обработки кнопок. Это очень просто сделать, в браузер соберите ссылку такого формата:<br/>  <br/>  <pre><code class=\"apache\">https://api.telegram.org/bot{my_bot_token}/setWebhook?url={url_to_send_updates_to}</code></pre><br/>  В ответ получите json примерно такого содержания:<br/>  <br/>  <pre><code class=\"json\">{\"ok\":true,\"result\":true,\"description\":\"Webhook was set\"}</code></pre><br/>  <h2>Содержание файла callback.php</h2><br/>  <pre><code class=\"php\">&lt;?php    define( \'TOKEN\', \'&lt;token>\' );    define( \'CHAT_ID\', \'&lt;chat_id>\' ); // @name_chat    define( \'API_URL\', \'https://api.telegram.org/bot\' . TOKEN . \'/\' );     function request($method, $params = array()) {       if ( (!empty($params) ) {          $url = API_URL . $method . \"?\" . http_build_query($params);       } else {          $url = API_URL . $method;       }        return json_decode(file_get_contents($url), JSON_OBJECT_AS_ARRAY);    }     function editMessageReplyMarkup($params){       //В этом цикле мы изменяем сами кнопки, а именно текст кнопки и значение параметра callback_data       foreach ( $params[\'inline_keyboard\'][0] as $key => $value ) {          $data_for = json_decode($value->callback_data, true); // изначально у нас callback_data храниться в виде json-а, декатируем в массив          if ( $params[\'data\'][\'action\'] == $data_for[\'action\'] ) { // определяем, на какую именно кнопку нажал пользователь под сообщением             $data_for[\'count\']++; //плюсуем единичку             $value->text = $data_for[\'text\'] . \" \" . $data_for[\'count\']; // Изменяем текст кнопки смайлик + количество лайков          }          $value->callback_data = json_encode($data_for); // callback_data кнопки кодируем в json          $params[\'inline_keyboard\'][0][$key] = (array)$value; // изменяем кнопку на новую       }        //Изменяем кнопки к сообщению       request(\"editMessageReplyMarkup\", array(          \'chat_id\' => CHAT_ID,          \'message_id\' => $params[\'message_id\'],          \'reply_markup\' => json_encode(array(\'inline_keyboard\' => $params[\'inline_keyboard\'])),       ));        //Выводим сообщение в чат       request(\"answerCallbackQuery\", array(          \'callback_query_id\' => $params[\'callback_query_id\'],          \'text\' => \"Спасибо! Вы поставили \" . $params[\'data\'][\'text\'],       )); }     $result = json_decode(file_get_contents(\'php://input\')); // получаем результат нажатия кнопки    $inline_keyboard = $result->callback_query->message->reply_markup->inline_keyboard; // текущее состояние кнопок при нажатии на одну из 5 кнопок    $data = json_decode($result->callback_query->data, true); // получаем значение с кнопки, а именно с параметра callback_data нажатой кнопки    $message_id = $result->callback_query->message->message_id; // ID сообщения в чате    $callback_query_id = $result->callback_query->id; //ID полученного результата    $user_id = $result->callback_query->from->id; // ID пользователя     $db_message = $db->super_query(\"SELECT * FROM bot_like WHERE message_id={$message_id}\"); //Ищем в БД ID сообщения     /*    Я использую библиотеку ($db = new db;) от CMS DLE для работы с БД.    super_query - этот метод возвращает первую найденную запись в виде массива    */     if ( $db_message === null ) {       // Если не нашли в БД ID сообщения, записываем в БД текущий ID сообщения и ID пользователя, который отреагировал (нажал на одну из 5 кнопок) на сообщение.        $db->query(\"INSERT INTO \" . PREFIX . \"_posting_tg_bot_like (message_id, users) VALUES (\'{$message_id}\', \'{$user_id}\')\");        editMessageReplyMarkup(array(          \'inline_keyboard\' => $inline_keyboard,          \'data\' => $data,          \'message_id\' => $message_id,          \'callback_query_id\' => $callback_query_id       ));    } else {       //Если в БД нашли сообщение       $users = explode(\",\", $db_message[\'users\']);              // Если нашли в БД пользователя, выводим сообщение \"Вы уже нажали на одну из 5 кнопок\"       if( in_array($user_id, $users) ) {          request(\"answerCallbackQuery\", array(             \'callback_query_id\' => $callback_query_id,             \'text\' => \"Вы уже отреагировали на новость\",          ));       }         // Если не нашли ID в БД изменяем одну из 5 кнопок и добавляем ID пользователя       else {          editMessageReplyMarkup(array(             \'inline_keyboard\' => $inline_keyboard,             \'data\' => $data,             \'message_id\' => $message_id,             \'callback_query_id\' => $callback_query_id          ));           array_push($users, $user_id);          $users = implode(\',\', $users);          $db->query(\"UPDATE bot_like SET users=\'{$users}\' WHERE message_id=\'{$message_id}\'\");     } } </code></pre><br/>  Вот и всё, такой маленький пример получился, за ранние извините, если код написан безобразно. Можно расширить этот код до нужной функциональности, это уже зависит от вашей задачи. Моя задача была показать маленький пример, и я надеюсь у меня это получилось. Спасибо за внимание, встретимся в комментариях.</div>');
INSERT INTO `articles` (`id`, `name`, `link`, `text`) VALUES
(28, 'Telegram Bot на Kotlin: Командуем ', '/ru/post/677624/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><a href=\"https://habr.com/ru/post/672488/\" rel=\"noopener noreferrer nofollow\">Предудыщая часть: Telegram Bot на Kotlin: Введение</a></p><p>Это промежуточная часть туториала о том, как можно создавать телеграм ботов на базе библиотек <a href=\"https://github.com/InsanusMokrassar/PlaguBot\" rel=\"noopener noreferrer nofollow\">plagubot</a> и <a href=\"https://github.com/InsanusMokrassar/TelegramBotAPI\" rel=\"noopener noreferrer nofollow\">tgbotapi</a>. Конкретно в данной получасти речь пойдет про достаточно простой по-сравнению с планируемыми <a href=\"https://github.com/InsanusMokrassar/PlaguBotCommandsPlugin\" rel=\"noopener noreferrer nofollow\">плагин для регистрации команд</a> на старте и их установке/очистке далее в рантайме.</p><p>Стоит сказать, что в этой статье будет представлен упрощенный код. С его помощью можно будет создать аналог того плагина, который в итоге получился, и, тем не менее, в статье он будет чуть более поверхностным. По-возможности я старался добавлять спойлеры там, где код в итоге другой, поэтому проблем возникнуть не должно.</p><h2>Итак, задача</h2><p>Как уже говорилось выше, задача у данного плагина очень простая - регистрировать команды бота на старте и иметь возможность менять набор команд в процессе работы. Само собой, хотелось бы для каждой команды иметь возможность уточнять полный спектр параметров, а именно:</p><ul><li><p><code>BotCommandScope</code></p></li><li><p><code>LanguageCode</code> (в идеале с возможностью использовать весь спектр <a href=\"https://en.wikipedia.org/wiki/IETF_language_tag\" rel=\"noopener noreferrer nofollow\">ietf кодов</a>)</p></li></ul><h2>Базовое решение</h2><p>Поскольку нам нужно на старте откуда-то брать команды, которые бот ставит изначально, самым простым вариантом будет использование <code>DI</code> для получения всех команд от других плагинов и частей приложения. При этом в этих самых других плагинах и частях приложения достаточно будет зарегистрировать команду с привязкой к нужному типу и рандомным идентификатором (чтобы <code>DI</code> не ругался на конфликт типов):</p><pre><code class=\"kotlin\">// Примерно так мы будем забирать команды внутри плагина с командами koin.getAll&lt;CommandType>().distinct()... // А так команды будут укладываться в DI в других плагинах single(named(uuid4().toString())) { /* Creating of CommandType */ }</code></pre><p>Кроме того, нужно будет обеспечить возможность добавлять/убирать текущие команды бота. Для этого можно будет использовать какой-то простой set/unset интерфейс вроде:</p><pre><code class=\"kotlin\">interface CommandsKeeper {   suspend fun addCommand(command: CommandType)   suspend fun removeCommand(command: CommandType) }</code></pre><details class=\"spoiler\"><summary>О конечном решении</summary><div class=\"spoiler__content\"><p>Если вы посмотрите итоговый <a href=\"https://github.com/InsanusMokrassar/PlaguBotCommandsPlugin/blob/44524d847ae1ab55e399d5005b18e6a83ec64072/src/main/kotlin/CommandsKeeper.kt\" rel=\"noopener noreferrer nofollow\">CommandsKeeper</a>, то увидите много <code>internal</code>. Это возможность языка ограничивать видимость элементов в рамках некоего модуля. Вкратце, например, <a href=\"https://github.com/InsanusMokrassar/PlaguBotCommandsPlugin/blob/44524d847ae1ab55e399d5005b18e6a83ec64072/src/main/kotlin/CommandsKeeper.kt#L18\" rel=\"noopener noreferrer nofollow\">onScopeChanged</a> будет доступен только для частей плагина</p></div></details><p>Ну и последнее - сам плагин. По-сути, на старте он должен собирать все команды, зарегистрированные в <code>DI</code> , самостоятельно класть их в <code>CommandsKeeper</code>  и как-то слушать изменения команд и их обновлять.</p><h2>Кусочки пазла</h2><p>Поскольку в самой <a href=\"https://core.telegram.org/bots/api\" rel=\"noopener noreferrer nofollow\">Telegram Bot API</a> нет сущности, которая содержала бы сразу и команду с описанием, и её скоуп, и код языка, такую сущность нам придётся сделать самим. По понятным причинам, это будет достаточно простой дата класс с тремя полями:</p><pre><code class=\"kotlin\">data class BotCommandFullInfo(     val command: BotCommand,     val scope: BotCommandScope = BotCommandScope.Default,     val languageCode: String? = null ) {     val key: Pair&lt;BotCommandScope, String?>? = if (scope == BotCommandScope.Default &amp;&amp; languageCode == null) {       	null     } else {       	Pair(scope, languageCode)     } }</code></pre><details class=\"spoiler\"><summary>На практике всё получилось немного сложнее</summary><div class=\"spoiler__content\"><p>Пришлось добавить <a href=\"https://github.com/InsanusMokrassar/PlaguBotCommandsPlugin/blob/44524d847ae1ab55e399d5005b18e6a83ec64072/src/main/kotlin/CommandsKeeperKey.kt#L16\" rel=\"noopener noreferrer nofollow\">value class CommandsKeeperKey</a> для ключей, который как раз включает всю нужную информацию для команды: <code>BotCommandScope</code> и код языка. Как итог, в плагине и его <code>API</code> все вызовы сводятся к вызовам с <code>CommandsKeeperKey</code></p></div></details><p>Для <code>CommandsKeeper</code>\'а можно сделать простейшую реализацию на базе мапы, в которой ключами будет контекст набора команд - command scope и language code. Пример базовой реализации на основании интерфейса, представленного выше:</p><pre><code class=\"kotlin\">class CommandsKeeper(     // Получаем в конструкторе команды для установки на старте     val preset: List&lt;BotCommandFullInfo> ) {     // Этот Flow можно будет использовать для получения обновлений набора команд для каждого ключевого набора     internal val onScopeChanged = MutableSharedFlow&lt;Pair&lt;BotCommandScope, String?>?>()      // Тут можно почитать про groupBy: https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/group-by.html     // Создаёт мапу с ключами из scope и languageCode и значениями - списками команд с этими ключами     private val scopesCommands: MutableMap&lt;Pair&lt;BotCommandScope, String?>?, MutableSet&lt;BotCommand>> = preset.groupBy {         it.key     }.mapValues { (_, v) -> // Заменяем значения в мапе         // Создаём список команд, доставая их из BotCommandFullInfo и превращаем в set для исключения повторений         v.map { it.command }.toMutableSet()     }.toMutableMap() // Превращаем в изменяемую мапу      // Этот Mutex будет использоваться для исключения параллельного доступа к scopesCommands     private val mutationsMutext = Mutex()      // Включение информации о команде     suspend fun addCommand (command: BotCommandFullInfo) {         val added = mutationsMutex.withLock { // Блокируем изменение набора команд             // Получаем существующий сет по ключу ЛИБО создаем новый сет, кладем его в мапу и используем этот сет             val set = scopesCommands.getOrPut(command.key) { mutableSetOf() }             // Добавляем команду в сет, add возвращает boolean             set.add(command.command)         }         if (added) {             // Уведомляем об изменении набора команд для ключа             onScopeChanged.emit(command.key)         }     }      suspend fun removeCommand (command: BotCommandFullInfo) {         val removed = mutationsMutex.withLock { // Блокируем изменение набора команд             // Получаем существующий сет по ключу             // ЛИБО считаем, что команду нельзя удалить и возвращаем из withLock false,             // который будет установлен в переменную removed             val set = scopesCommands.get(command.key) ?: return@withLock false             // Убираем команду из сета, remove возвращает boolean             set.remove(command.command)         }         if (removed) {             // Уведомляем об изменении набора команд для ключа             onScopeChanged.emit(command.key)         }     }  		internal fun getKeys(): List&lt;Pair&lt;BotCommandScope, String?>?> {         // Возвращаем ключи         return scopesCommands.keys.toList()     }      internal fun get(key: Pair&lt;BotCommandScope, String?>?): List&lt;BotCommand> {         // Получаем известные команды, конвертируем в список ЛИБО возвращаем пустой список         return scopesCommands.get(key) ?.toList() ?: emptyList()     } }</code></pre><p>По-сути у нас получился достаточно простой по своей сути класс: мы можем добавить (<code>addCommand</code>) или убрать (<code>removeCommand</code>) команду в других плагинах, а внутри проекта командного плагина мы можем получить набор команд для контекста и подписаться на изменения команд. Всё это приправляется синхронизациями в моменты установки/удаления команды</p><details class=\"spoiler\"><summary>Правда, это не совсем идиоматично :(</summary><div class=\"spoiler__content\"><p>А идиоматично было бы сделать <code>sealed interface</code> для типа задачи и пару <code>data class</code>\'ов для операций добавления/удаления команд, отправлять это всё в какой-то канал с вложением <code>Deferred</code>, из которого мы будем ждать результата. Как видно, из минусов такого подхода - он очень громоздкий. Из плюсов - у нас больше не будет синхронизаций и потенциально такой код будет проще для переваривания корутинами и, как следствие, в целом для их работы</p></div></details><h3>Самый жирный кусочек</h3><p>Как можно догадаться, самым жирным кусочком на этом пироге будет сам плагин. Тем не менее, по-сути, он очень простой: создание <code>CommandsKeeper</code> и регистрация в <code>DI</code>  , установка команд бота в момент начала его установки и их отслеживание во время работы бота. Далее представлен скелет нашего плагина:</p><pre><code class=\"kotlin\">@Serializable object CommandsPlugin : Plugin {     override fun Module.setupDI(database: Database, params: JsonObject) {}      override suspend fun BehaviourContext.setupBotPlugin(koin: Koin) {} }</code></pre><p>То есть в плагине у нас на базовом уровне плагину не нужно ничего, кроме переопределения методов плагина. А теперь добавим создание и регистрацию <code>CommandsKeeper</code> в <code>setupDI</code>:</p><pre><code class=\"kotlin\">override fun Module.setupDI(database: Database, params: JsonObject) {     // Регистрируем единственный CommandsKeeper инстанс     single {         // Создаем инстанс CommandsKeeperImpl         CommandsKeeper(             // Получаем все зарегистрированные экземпляры BotCommandFullInfo и исключаем повторения           	getAll&lt;BotCommandFullInfo>().distinct()         )     } }</code></pre><p>Больше в <code>DI</code> мы ничего регистрировать не будем. Поскольку мы обозначили актуализацию команд в двух местах, а именно при инициализации бота и изменении набора команд, будет уместно выделить установку команд и удаление команд при их отсутствии в отдельную функцию:</p><pre><code class=\"kotlin\">private suspend fun BehaviourContext.setScopeCommands(scope: BotCommandScope, languageCode: String?, commands: List&lt;BotCommand>) {     if (commands.isEmpty()) {         // Удаляем команды для scope и languageCode         deleteMyCommands(             scope,             languageCode         )     } else {         // Устанавливаем команды для scope и languageCode         setMyCommands(             // Берем только уникальные команды и берем первые 100 команд, если их больше           	commands.distinctBy { it.command }.take(botCommandsLimit.last + 1),           	scope,           	languageCode         )     } }</code></pre><details class=\"spoiler\"><summary>Как водится, на самом деле всё сложнее, хотя суть та же</summary><div class=\"spoiler__content\"><p>Есть несколько нюансов в конечной реализации:</p><ul><li><p>Желательно такой код обрамлять в <code>runCatching</code>/<code>trycatch</code></p></li><li><p>Список команд на входе нуллабельный, поскольку в реализации <code>CommandsKeeper</code> из <code>Github</code> метод <code>get</code> возвращает <code>null</code> когда набора команд нет</p></li></ul><p></p></div></details><p>Ну и работа в рамках бота:</p><pre><code class=\"kotlin\">override suspend fun BehaviourContext.setupBotPlugin(koin: Koin) {     // Получаем CommandsKeeper, который регистрировали в DI выше     val commandsKeeper = koin.get&lt;CommandsKeeper>()      // Подписываемся на изменения набора команд. it тут - Pair&lt;BotCommandScope, String?>?     commandsKeeper.onScopeChanged.subscribeSafelyWithoutExceptions(scope) {       // Получаем набор команд по ключам       val commands = commandsKeeper.getCommands(it)        // Устанавливаем команды       setScopeCommands(it, commands)     }      // Получаем известные на момент старта бота ключи (пары scope и languageCode) и для каждого актуализируем набор команд     commandsKeeper.getKeys().forEach {       // Получаем набор команд по ключам       val commands = commandsKeeper.getCommands(it)        // Устанавливаем команды       setScopeCommands(it, commands)     } }</code></pre><p>В целом, это всё :)</p><h2>Итоги</h2><p>В итоге мы создали достаточно простой плагин, позволяющий централизовано управлять командами бота. Полный код, инструкции по подключению и иная полезная информации лежат в <a href=\"https://github.com/InsanusMokrassar/PlaguBotCommandsPlugin\" rel=\"noopener noreferrer nofollow\">github репозитории</a>. Приятного пользования!</p><p></p></div>'),
(29, 'Воздух и суперспособности человека ', '/ru/post/678678/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Каждый день мы пропускаем через легкие до 40 килограммов воздуха. При этом мы почти никогда не задумываемся, чем мы дышим и откуда вообще этот воздух взялся. Знаете ли вы, например, можно ли дышать кожей? А почему нельзя сушить белье в квартире и использовать термальную воду в самолете? Откуда на Земле взялась атмосфера и для чего нужен углекислый газ? Обо всем этом я рассказала в своей книге \"Воздух. Неожиданные факты о том, без чего нельзя прожить\".</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/d58/e79/084/d58e79084260e1d9dc585125a035be89.jpg\" width=\"960\" height=\"1280\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d58/e79/084/d58e79084260e1d9dc585125a035be89.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>До \"входа в IT\" я проектировала вентиляцию. Сейчас я Qa engineer, поэтому мыслить инженерно мне все равно приходится. Да что там приходится, это мое любимое занятие. Я глубоко убеждена, что перед тем, как искать баги, надо разобраться как работает продукт.</p><p>Воздух - базовая вещь на Земле и мы все им пользуемся. А так ли хорошо его изучили? Мы точно знаем все его фичи? Хочу поделиться  фрагментом из своей книги и вдохновить Вас на то, чтобы изучать окружающий мир лучше :)</p><h3>Глава 12. Воздух и суперспособности человека</h3><p>Воздух не только дает нам возможность жить, но и добавляет удовольствия в эту жизнь. Он наполняет наши будни звуками, музыкой, различными ароматами. Мы можем общаться с другими людьми, читать стихи, петь. Представляете, за это все тоже надо сказать спасибо воздуху!</p><p>Шелест сухих листьев. Стук капель дождя по зонтику. Лай собаки. Вот где-то с грохотом проехал трамвай, а над ухом с характерным писком пролетел комар. Кстати, о комаре. Интересно, как ему удается так противно пищать? Быть может, у комара есть специальная «пищалка», чтобы издавать этот звук? Оказывается, нет: всему виной его маленькие крылья, которыми он очень часто ударяет по воздуху во время полета. Именно эти звуки мы и воспринимаем как писк.</p><h4>Звук</h4><p>Звук — это механические колебания, которые распространяются в твердых телах, жидкостях и газах. Воздух — отличная среда для того, чтобы передавать звук. У него, как и всех колебаний есть частота (высота), и амплитуда (громкость). Частота колебаний измеряется в герцах (Гц). Диапазон, который слышит человеческое ухо, находится в пределах от 16 Гц до 20 кГц. Громкость звука измеряется в логарифмических единицах — децибелах (дБ). Изучением звука занимается специальный раздел физики, акустика.</p><p>Человек может по-разному взаимодействовать со звуком, воспринимать его и производить звуки самостоятельно. Давайте рассмотрим, как это происходит.</p><p>Слух — способность слышать звук. Орган для улавливания звука — ухо. Звуковая волна попадает внутрь и вызывает колебания барабанной перепонки. Вы наверняка слышали, что таковая есть в нашем ухе. От нее по цепочке колебания доходят до окончаний слухового нерва, который, в свою очередь, передает сигнал в мозг. Именно так мы и слышим.</p><p>Голос человека — не что иное, как звуковые колебания, которые создают голосовые связки, расположенные в гортани. Воздух проходит через них как сквозь препятствие, от чего они вибрируют и порождают звуковую волну. От степени натяжения связок зависит высота звука, которую воспроизводит человек. С помощью голосовых связок мы можем говорить, петь, кричать и шептать. Кстати, колебаться голосовые связки могут только на выдохе.</p><p>Голосовые связки очень нежные и уязвимые. Они чувствительны к простуде и перенапряжению. Во время болезни у человека может осипнуть и даже пропасть голос — это происходит из-за воспаления связок. Они отекают, теряют свою эластичность, а значит, не могут свободно вибрировать от потока воздуха. Похожее происходит, если их перенапрячь, или, как еще говорят, «сорвать голос». Когда вы очень сильно кричите, поток воздуха в связках может достигать скорости 30̀км/ч, это настоящий ураган, который их повреждает и лишает возможности вибрировать, как раньше. Вопросом голоса и лечения связок занимается врач-фониатр. Это довольно редкий специалист, основные пациенты которого артисты и певцы.</p><h4>Необычное о звуке</h4><ul><li><p>Наверное, каждый из нас хотя бы однажды прикладывал ракушку к уху и слышал в ней шум моря. Однако тот шум— это вовсе не море, а звук тока крови в ваших собственных сосудах.</p></li><li><p>Мы можем слышать костями. Так происходит потому, что звук — это волна, которая может распространяться и в твердой среде. По такому принципу, например, работают наушники с костной проводимостью звука.</p></li><li><p>Многим людям не нравится звук собственного голоса на записях, а иногда они его даже не узнают. Дело в том, что, когда мы слышим себя в жизни, мы улавливаем звук собственного голоса еще и через ткани головы, а вот когда слушаем запись — тут уже восприятие идет только при помощи уха.</p></li><li><p>Гром и молния всегда имеют интервал, потому что скорость звука ниже скорости света почти в миллион раз. Я люблю шутку про то, что совет, данный родителями в детстве, доходит до нас только к тридцати годам, потому что скорость звука чертовски мала.</p></li><li><p>Влажность влияет на слышимость. Чем меньше влаги содержится в воздухе, тем легче распространяется звуковая волна, ведь на ее пути оказывается меньше помех. На количество влаги в воздухе влияет температура, поэтому можно смело заявить, что зимой слышимость лучше, потому что воздух суше.</p></li><li><p>Звуковая волна умеет отражаться от препятствий, которые она встречает на своем пути, иногда даже несколько раз, возвращаясь к ним. Это называется эхом. В горах его порождает звук, отраженный от скал, в лесу — от стволов деревьев, в вашей собственной квартире, если вынести из нее всю мебель, — от стен. По принципу эха работает громкоговоритель: отражает звуковую волну от своих стенок и концентрирует ее, поэтому звук получается мощнее и может распространяться на большие расстояния.</p></li></ul><h4>Запах</h4><p>Запахом называют присутствие в воздухе летучих пахучих веществ- одорантов. Благодаря специальным рецепторам на внутренней оболочке носа мы можем воспринимать и различать эти вещества. Способность чувствовать запахи называется обонянием. Давайте разберемся, как оно устроено.</p><p>Молекулы веществ проникают в нос через ноздри и попадают на обонятельный эпителий, расположенный глубоко в носу. Ранее полагали, что площадь обонятельного эпителия человека составляет порядка 10 см2 , но в более поздних исследованиях выяснилось, что всего 2–4 см2*. А вот у животных, например у собак, она может быть 200̀см2 , кстати, именно поэтому они чувствуют запахи намного острее, нежели люди.</p><p>Обонятельный эпителий, как и всякая слизистая, покрыт тонким слоем влажной слизи, в которой накапливаются и растворяются молекулы пахучих веществ, активируя специальные обонятельные рецепторы. Они, в свою очередь, передают сигналы в мозг. Обонятельные рецепторы — это клетки нервной системы, поэтому их иногда называют обонятельными нейронами.</p><p>Вы, наверное, слышали фразу, что «нервные клетки не восстанавливаются». Это не совсем так, и правильнее будет ее заменить на «не все нервные клетки восстанавливаются». Потому что как раз обонятельные нейроны принадлежат к тем клеткам нервной системы, которые постоянно обновляются. Они живут в среднем около месяца, и спустя это время на месте старых появляются новые.</p><p>Обоняние — это та область, в которой остается множество загадок и теорий. До сих пор никто не может точно ответить, почему каждый человек чувствует запахи немного по-разному и какой набор ароматов является «базовым». Какое максимальное количество запахов может различать человек — тоже неизвестно.</p><p>Кстати, обоняние тесно связано с вкусовым восприятием продуктов. При жевании пищи частички ароматных веществ попадают в носоглотку, а затем на обонятельные рецепторы. Это усиливает и проявляет вкус. Если вы не верите, что без обоняния практически нет вкуса, вспомните себя во время простуды. Когда человек страдает от насморка, клетки его обонятельного эпителия набухают, запахи вокруг кажутся приглушенными или вообще пропадают, поэтому привычная еда теряет вкус.</p><p>Попробуйте провести вкусовой эксперимент прямо сейчас. Возьмите, например, банан и перед тем, как откусить кусочек, плотно зажмите нос. Вы убедитесь, что так вкус практически не ощущается, вплоть до того, что вообще трудно понять, что именно вы едите.</p><p>Потеря обоняния называется аносмия. Она бывает временная и постоянная, частичная и тотальная, врожденная и приобретенная: например, после травмы носа или болезни.</p><p>Обоняние — самое первое чувство, которое развивается у человека. Сильнее всего оно проявлено у младенцев, а с возрастом — ухудшается. Кстати, обычно женщины более чувствительны к ароматам, нежели мужчины.</p><h4>Необычные ароматы</h4><ul><li><p>Радиация пахнет озоном. Хоть и считается, что она абсолютно неощутима для органов чувств человека, работники Чернобыльской АЭС отмечали, что при повышении радиоактивного фона до критического в воздухе начинало пахнуть как после грозы. Так происходит потому, что интенсивное ионизирующее излучение расщепляет молекулы кислорода в воздухе, что приводит к образованию озона с его специфическим запахом.</p></li><li><p>Мы выбираем того, кто нам нравится, по запаху. Исследования показывают, что человек при помощи обоняния может считывать генетическую совместимость с партнером, а также совместимость иммунных систем. Эксперименты порой выглядели комично: например, ученые из Шотландии предложили группе мужчин не мыться, не применять средств гигиены и не снимать футболки несколько дней, а затем группа женщин принюхивалась к этой поношенной одежде. Они выбирали наиболее симпатичный запах и решали, какой мужчина им нравится.</p></li><li><p>Существуют тренировки обоняния, цель которых — «научить» обонятельные рецепторы различать запахи. Их широко практикуют парфюмеры, виноделы и дегустаторы. Однако подобные тренировки в последнее время стали применять и для лечения пациентов с аносмией, в том числе вызванной COVID-19. Для этого необходимо использовать четыре сильных запаха и вдыхать их несколько раз в день. Лучше всего использовать эфирные масла, например гвоздики, корицы, бадьяна, эвкалипта, лимона, ванили или другие интенсивные ароматы.</p></li><li><p>Для особых ценителей существуют духи с нетипичными запахами, например сыра с плесенью, с ароматами гаража, свежих книг, пыли, стирального порошка и даже похоронного бюро.</p></li><li><p>Самый плохо пахнущий фрукт на планете — дуриан. Его запах очень въедлив и состоит из множества составляющих: сладкий, чесночный, гнилостный, тухлый. Несмотря на это, Воздух и человек он считается очень вкусным. В Юго- Восточной Азии, на его родине, есть закон, согласно которому дуриан запрещено проносить в общественные места и закрытые помещения.</p></li><li><p>Аромат выпечки, ванили и корицы считаются одними из самых приятных для человека. Их часто используют в качестве приманки, чтобы привлечь клиентов в кофейню или магазин и повысить продажи. Один риелтор рассказывал мне, что перед показом квартиры всегда кладет ванильный сахар и корицу на горячую плиту на кухне. Приятный запах наполняет комнаты, и квартира кажется покупателю более уютной.</p></li></ul><p>Любимая музыка, голос любимого человека, запах леса после дождя, аромат свежескошенной травы… Воздух определенно дает нам нечто большее в жизни, чем просто возможность дышать.</p></div>'),
(30, 'Собеседования за рубежом: основные барьеры для российских айтишников ', '/ru/company/netologyru/blog/678684/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Недавно мы <a href=\"https://habr.com/ru/company/netologyru/blog/677168/\">писали</a> о том, как меняется ИТ-рынок в России и чего ожидают от наших айтишников за рубежом. У всё большего числа русскоязычных ИТ-специалистов появляется опыт собеседований — успешных и не очень — в компаниях из разных уголков мира. Мы собрали истории соискателей и рекрутеров о приёме на работу за рубежом.</p><h3>Разница требований к навыкам соискателя: ищут сеньоров со свободным английским</h3><p>По данным мартовского <a href=\"https://habr.com/ru/article/657179/\">опроса</a> Хабр Карьеры, треть айтишников ищет работу в компаниях с возможностью переезда. По данным 2021 года, самые популярные страны для релокейта — это США, Великобритания, Германия.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/4e3/4b9/f70/4e34b9f7094a694d5ec212b7eb0699f1.png\" alt=\"Источник: ADELT Agency\" title=\"Источник: ADELT Agency\" width=\"1600\" height=\"1055\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/4e3/4b9/f70/4e34b9f7094a694d5ec212b7eb0699f1.png\"/><figcaption>Источник: ADELT Agency</figcaption></figure><p>С первого квартала 2022 года ситуация изменилась. Многие ИТ-гиганты <a href=\"https://www.bloomberg.com/news/articles/2022-07-24/world-s-key-workers-threaten-to-hit-economy-where-it-will-hurt\">переходят</a> в режим экономии и сокращают приём резюме — это касается и таких компаний, как Apple, Google и Amazon. Планы по найму новых сотрудников снижены на 10–30%.  Стали популярными такие направления, как Грузия, Израиль, Турция.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e23/8a4/1bc/e238a41bcac0425ff9fe6eea621c3a75.png\" width=\"730\" height=\"584\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e23/8a4/1bc/e238a41bcac0425ff9fe6eea621c3a75.png\"/><figcaption></figcaption></figure><blockquote><p>Иностранным организациям сейчас не интересны джуниор- и миддл-специалисты. У них всегда был фокус на сеньор-уровень.</p><p><a href=\"https://habr.com/ru/company/netologyru/blog/677168/\"><strong>Мария Азизова</strong></a><strong>, Staff Executive to CEO, Percona</strong></p></blockquote><p>Далеко не всегда отказ в приёме на работу свидетельствует о недостаточной квалификации соискателя. Вполне возможно, что человек просто не подходит под конкретные требования, а отрицательный опыт поможет ему понять направление для развития как в плане географии, так и профессиональных навыков. </p><p>У кого-то могут не совпадать пожелания насчёт режима работы, особенно если взаимодействовать приходится в разных часовых поясах или соискатель совмещает несколько проектов. Кто-то может не пройти собеседование из-за иностранного языка, даже если владеет им: профессиональная коммуникация в межнациональной команде на постоянной основе требует больших усилий, чем эпизодическое чтение литературы и обращение к иноязычной терминологии. Наличие сертификата IELTS, TOEFL, CAE не всегда важно — но не для специалистов высокого уровня. Работа на позиции сеньора предполагает, что у сотрудника будут подчинённые, а ещё ему, возможно, придётся общаться с руководителями — обычного intermediate недостаточно.</p><blockquote><p>Я проходила собеседование в голландской компании год назад как ИТ-рекрутер. Эмигрировать в Нидерланды я не собиралась, планировала работать из России на удалёнке и совмещать это со своей частной психологической практикой. На первых этапах работы предполагалось обучение, и меня спрашивали, готова ли я учиться новому и как я буду поступать в разных ситуациях.</p><p>В итоге мне отказали, сказав, что мой английский не дотягивает до их требований, и слишком много времени занято другими проектами. Хотя в этом году я вполне успешно защитила на английском магистерскую диссертацию в университете на Кипре. Думаю, в моей сфере, не связанной напрямую с техническими навыками, требования зависят не столько от страны, сколько от компании. </p><p><strong>Анна Аникина, психолог и ИТ-рекрутер, Москва</strong></p></blockquote><h3>Разница методик: стандартные вопросы и необычные задачи </h3><p>Многие методики, по которым оценивают соискателей, разработаны в США и Европе, информация о них приходит в Россию с некоторым опозданием. Люди, переехавшие в эти страны, отмечают предсказуемость всех процедур и внимание к определённым навыкам на собеседованиях. В Азии российских айтишников, наряду с другими европейцами, чаще берут работать в компании, где условия приближены к западным.</p><p>Многие стандартные вопросы, которые вызывают бурную негативную реакцию в России, все ещё распространены за рубежом на уровне первых этапов интервью. Это классические «Почему мы должны выбрать вас?» и «Назовите свои сильные и слабые стороны». Только если в России это фильтр для компаний — многие готовы отказаться от работы в организации после таких вопросов — то для найма за рубеж это ближе к проверке навыков коммуникации и уровня языка. Но это вопросы знакомы, а столкновение с новой методикой может вызвать удивление или ступор.</p><blockquote><p>В России я работала менеджером проектов в ИТ. Сначала в родном Саратове, потом в Москве. Двенадцать лет назад переехала в Америку. На момент переезда я не говорила по-английски. Сначала я пошла изучать язык в языковую школу, затем устроилась на работу, где надо было общаться, и это оказалось очень ценным с точки зрения практики. Потом родились дети, и когда они подросли, а я выучила язык до свободного уровня, то вернулась в профессию, и сейчас работаю в Amazon.</p><p>В моей сфере собеседования проходят по методике STAR: ситуация → задание → действие → результат. По каждому из пунктов соискатель должен ответить 3–5 предложениями, а в конце сформулировать вопросы к потенциальному работодателю. Эта методика широко используется и в Штатах, и в Европе, сейчас это стандарт в ИТ. </p></blockquote><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a0c/a62/2b5/a0ca622b5ce9d2674f0038c64952ea39.png\" alt=\"Как проходить собеседование по такой методике. Источник: vawizard.org\" title=\"Как проходить собеседование по такой методике. Источник: vawizard.org\" width=\"650\" height=\"321\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a0c/a62/2b5/a0ca622b5ce9d2674f0038c64952ea39.png\"/><figcaption>Как проходить собеседование по такой методике. Источник: vawizard.org</figcaption></figure><blockquote><p>Основное же отличие американских собеседований от российских заключается в большем формализме: тут всё чётко структурировано и предсказуемо. С другой стороны, в России, когда мне отказывали, то, как правило, объясняли почему. В США давать обратную связь в случае отрицательного ответа не принято.</p><p><strong>Ирина Молодцова, PM, Сиэтл (США)</strong></p></blockquote><p>Для компаний норма — как следует готовиться к интервью и приглашать на собеседование только тех кандидатов, которые прошли несколько этапов проверки на соответствие требованиям. Для этого применяют <a href=\"https://habr.com/ru/company/netologyru/blog/583646/\">многоступенчатые собеседования</a>, которые в целом могут занимать несколько месяцев, а также <a href=\"https://www.businessnewsdaily.com/hr/background-check-types\">используют</a> специальные сервисы поиска данных и отзывы с прошлых мест работы. Это как «проверки службы безопасности» в России, только в широком смысле, вплоть до изучения социальных сетей и штрафов от дорожной полиции.</p><h3>Разница отношений: стереотипы и культурные различия</h3><p>Коммуникация между людьми, деловой этикет и специфика общения очень зависит от страны. На Западе идеальной практикой взаимодействия между людьми считается разговор напрямую и индивидуальный подход к каждому сотруднику, на Востоке внимание уделяют ритуалам, этикету и соблюдению приличий.</p><p>В большинстве стран стандартная рабочая неделя длится с понедельника по пятницу, то в Израиле — с воскресенья по четверг. В Китае или Гонконге шестидневная рабочая неделя или работа до полуночи <a href=\"https://habr.com/ru/company/getmatch/blog/578610/\">не редкость</a>. В Японии не принято уходить домой раньше коллег, что часто приводит к переработкам. Во Франции, наоборот, за сотрудником закреплено право не проверять корпоративную почту и мессенджеры после рабочего дня.</p><blockquote><p>Я нашла на LinkedIn вакансию из Нидерландов, прошла два собеседования, но меня не взяли. Международные компании радуют непринуждённой и свободной обстановкой на итервью по сравнению с российскими, даже если встреча проходит дистанционно. Потенциальный руководитель из Нидерландов в основном говорил сам. Рассказал про свою семью, упомянул, что у него жена русская, тёща тоже переехала из Петербурга в Амстердам. И хоть с работой и не сложилось, впечатление у меня осталось приятное.</p><p>Зато в компанию, где я работаю сейчас, взяли сразу на позицию middle. Мой непосредственный начальник — русский, но уже несколько лет живёт и работает в Словакии, клиент находится в США, головной офис компании — в Израиле, я пока что работаю удалённо из Москвы. При устройстве я сделала тестовое задание от словацкого коллеги, а потом общалась на английском с израильским боссом: он оценил мое знание языка, остался доволен и ещё раз переспросил про умения и навыки. Всё собеседование заняло 10–15 минут, без промежуточных этапов и «мы вам перезвоним»: в России всё обычно проходит гораздо дольше<em>.</em></p><p><strong><em>Ирина Платонова, QA, Москва</em></strong></p></blockquote><p>В международных коллективах большую роль играет человеческий фактор. Дискриминация по национальному и религиозному признаку в международных компаниях <a href=\"https://www.businessnewsdaily.com/4037-illegal-interview-questions.html\">запрещена</a>, но уровень образования и опыт любого соискателя, в том числе технические навыки и владение английским, оценивают всегда. А эти параметры связаны с местом рождения и проживания. Полностью пренебречь национальной, географической и культурной спецификой <a href=\"https://habr.com/ru/company/netologyru/blog/591635/\">не получится</a>.</p><blockquote><p>Я уже восемь лет работаю в международной компании с головными офисами в США и Великобритании. Начинал в Петербурге, переехал в Болгарию, а полгода назад — в Англию. Сейчас живу в небольшом городке Альфретон неподалёку от Дерби. Я часто собеседую соискателей из разных стран: США, государств Европы и Азии, России и бывшего СССР. Само собеседование, как правило, не занимает много времени. Через 5–10 минут разговора уже понятно, с кем имеешь дело. А вот человеческих наблюдений накопилось достаточно.</p><p>В Великобританию едет работать много индийцев, и они очень разные по уровню. Есть действительно квалифицированные специалисты, есть откровенно слабые. Есть те, для кого английский язык родной, и те, кто изучал его как иностранный. Некоторые нарочито стараются говорить как британцы, но получается не всегда убедительно. А кто-то, наоборот, пытается сохранить индийский акцент.</p><p>Самые сильные программисты с точки зрения именно ИТ-навыков — бывшие соотечественники. Возможно, мне везёт. В России, если ты программист, то это не просто работа, а в какой-то степени часть твоей идентичности, некая одержимость. Плюс неплохая математическая и техническая база, полученная в вузе. В Москве и Петербурге с этим всё очень хорошо. В США подход к ИТ-образованию у людей более прагматичный: заплатил за колледж, научили тому и этому, пошёл искать работу. А вот с английским у россиян по-разному: один русский коллега до сих пор говорит с сильным акцентом, хотя уже несколько лет занимается с преподавателем, а другой владеет почти на уровне носителя и утверждает, что ничего для этого не делает, кроме общения с местными в неформальной обстановке.</p><p><strong>Алексей, senior full stack developer, Альфретон (Великобритания)</strong></p></blockquote><p>Стереотипы бывают и позитивными. Например, ещё в 2016 году компания Hackerrank, которая специализируется на рекрутинге, составила рейтинг стран с самыми сильными программистами. Этот топ-лист до сих пор <a href=\"https://www.sayonetech.com/blog/which-country-has-best-computer-programmers-and-developers/\">публикуют</a> в свежих статьях: где в качестве основного материала, где-то стараются его <a href=\"https://distantjob.com/blog/countries-to-find-best-programmers/\">опровергнуть</a> по всем параметрам.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/7d6/f99/723/7d6f9972348b0716a4d843e0078223ef.png\" width=\"839\" height=\"688\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/7d6/f99/723/7d6f9972348b0716a4d843e0078223ef.png\"/><figcaption></figcaption></figure><p>Сам факт существования таких карт и списков говорит о том, что кандидатов за рубежом будут оценивать в том числе с точки зрения устоявшихся представлений о стране, в которой жил соискатель. Отрицательный стереотип о российских программистах — слабые гибкие навыки: работа в команде, неформальное общение. Возможно, на собеседовании вам зададут несколько дополнительных вопросов именно на эти темы.</p><h3>Вопросы, которые зададут, и как на них отвечать</h3><p>Техническая часть, особенно для сеньоров, будет индивидуальной и творческой. А вот вопросы, связанные с переездом, одинаковы во всех странах.</p><p><strong>Почему вы решили приехать именно в эту страну?</strong></p><p>Отвечать нужно подробно и честно, даже если вам кажется, что причины очевидны. Рекрутер, который может быть коренным жителем, не знает, как выглядит компания с вашей стороны границы. Безопасный вариант — рассказывать про карьерные перспективы и личные долгосрочные цели, вплоть до желания жить в хорошем климате. Завуалировано этот вопрос звучит как «Кем вы видите себя через N лет?» — только в данном случае работодатель хочет услышать, что у вас серьёзные планы и вы рассчитываете остаться в стране. Плохие ответы:</p><ul><li><p>у меня нет уверенности, куда переехать;</p></li><li><p>всё равно, лишь бы переехать;</p></li><li><p>я ненадолго.</p></li></ul><p><strong>Какой у вас международный опыт?</strong></p><p>Вопрос с подвохом, потому что отвечать «никакой» не стоит. Возможно, вы не работали за границей, но общались с иностранными клиентами. Отпуск, путешествие, учёба, конференции, даже простой культурный интерес и любовь к национальному кинематографу — это тоже относится к международному опыту и добавляет плюсов в глазах рекрутера.</p><p><strong>Работали ли вы с людьми из разных культур?</strong></p><p>Вопрос похож на предыдущий, может прозвучать в крупных международных корпорациях. При ответе на него также сто́ит рассказывать о жизненном опыте, если рабочего недостаточно.</p><p><strong>Какие навыки помогут вам адаптироваться за границей?</strong></p><p>Это вопрос на проверку гибких навыков, в нехватке которых обвиняют российских специалистов. Показать их можно, упомянув об изучении иностранных языков — не только английского или не только языка страны переезда. Пригодятся любые примеры управления проектами, навыки чтения документации и инструкций, истории о найденных решениях в сложных ситуациях. Также сто́ит рассказать о подготовке к переезду: разрешении на работу, визе, жилье и так далее. Предполагается, что с документами у вас всё в порядке.</p><hr/><p>Национальная и географическая специфика при приёме на работу существует, но соискатели воспринимают её по-разному. Зачастую непривычным оказывается сам подход к сотруднику. Немалую роль играет языковой барьер, хотя в интернациональных компаниях эти нюансы часто сглаживаются. Поделитесь опытом международных собеседований в комментариях.</p><p></p></div>');
INSERT INTO `articles` (`id`, `name`, `link`, `text`) VALUES
(31, 'Установка OpenSSL для проекта на С++ ', '/ru/post/678698/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><h3>Введение</h3><p>Решая в целом тривиальные задачи, приходится сталкиваться с нетривиальными проблемами, и эта история, собственно, об этом.</p><p>В кои-то веки, решив написать код для себя любимого, проработал проект, установил окружение, прописал в проекте boost и пошёл писать модули.</p><p>Ничто не предвещало беды, но в процессе написания кода было обнаружено, что модуль, который запрашивал у интернета погоду, получал вместо описанного в API json\'а следующее: \"<strong>400 The plain HTTP request was sent to HTTPS port</strong>\". Уж чем руководствовался разработчик сайта, не перенаправивший запрос без персональных данных, не знаю, но видимо хакеры хотят украсть сведения о погоде в деревне так сильно, что спать и есть не могут.</p><p>И тут я сделал манёвр, который стоил мне 50 лет. Точнее, пары бессонных ночей, так как работать тоже надо. Ничтоже сумнящийся, подключил boost::asio::ssl, написал тестовый код, который должен был проверить что теперь есть контакт, но тут моя бровь поднялась вверх в первый раз: проект перестал собираться, потому что в системе не было OpenSSL.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/71c/712/649/71c712649e8a305b6a30b6aa2bd11edc.png\" alt=\"Примерно такой код способен показать вам всю боль и страдания при работе с тестовым проектом.\" title=\"Примерно такой код способен показать вам всю боль и страдания при работе с тестовым проектом.\" width=\"887\" height=\"851\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/71c/712/649/71c712649e8a305b6a30b6aa2bd11edc.png\"/><figcaption>Примерно такой код способен показать вам всю боль и страдания при работе с тестовым проектом.</figcaption></figure><p>Совсем открытием это конечно не было. В рабочих проектах мы писали код с использованием этого чуда, но сборкой занимался сервак, так как за каждым чихом перекомпилировать и пересобрать кодовую базу на рабочих станциях никто не желал, а на сервере всё заботливо было установлено. Все это позволяло пользоваться хедерами и лениться в плане ручной компиляции... Штош, дома нет сисадмина Лёхи, пришлось решать проблему ручками.</p><h3>Что вас ждёт</h3><ol><li><p>Поиски.</p></li><li><p>Установка неожиданных вещей.</p></li><li><p>Настройка зоопарка.</p></li><li><p>Планирование установки.</p></li><li><p>Компиляция (много компиляции).</p></li><li><p>Причёсывание установки.</p></li><li><p>Интеграция в проект.</p></li></ol><h3>Поиски</h3><p>Описываю, чтобы не пришлось этим заниматься вам. При поиске обнаружите два стула. На одном - сайты, испещерённые рекламой конкурентов оранжевого ютуба и обещаниями того, что в бинарниках вирусов нет (в установщиках кнопка доната есть, а цифровых подписей, чтоб антивирь не ругался, нет). На другом - официальный репозиторий, размещённый на официальном сайте проекта, вызывающий вьетнамские флешбэки о красноглазой студенческой молодости, но внушающий какое-то доверие.</p><p>Я предлагаю тебе взять <a href=\"https://github.com/openssl/openssl\" rel=\"noopener noreferrer nofollow\">красную таблетку</a> и пройти за мной в кроличью нору.</p><p>Найди удобное место, открой консоль, склонируй репозиторий и погнали.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/11b/0cb/134/11b0cb1342ab073ec5f5e9c400996610.png\" alt=\"git clone https://github.com/openssl/openssl.git\" title=\"git clone https://github.com/openssl/openssl.git\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/11b/0cb/134/11b0cb1342ab073ec5f5e9c400996610.png\"/><figcaption>git clone https://github.com/openssl/openssl.git</figcaption></figure><h3>Установка неожиданных вещей</h3><p>Изучив <a href=\"https://github.com/openssl/openssl/blob/master/README.md\" rel=\"noopener noreferrer nofollow\">крайне информативную инструкцию</a>, вы с толкнётесь с парочкой мыслей:</p><ul><li><p>в 2022 году кто-то использует perl в успешном и развивающемся до сих пор проекте;</p></li><li><p>для проекта написанного на языке Си необходим ассемблер, ибо без него собирается не так споро;</p></li><li><p>о makefile создатели знают, но вместо них сборкой занимается perl, и тестированием, может быть ещё тапки приносит но это не точно.</p></li></ul><p>В этот момент я отошёл за кофе и, когда пришёл в себя эмоционально, вернулся к процессу. Довольно приличным для себя нашёл <a href=\"https://strawberryperl.com/\" rel=\"noopener noreferrer nofollow\">Strwberry Pearl</a>, предлагаемый в инструкции, да и <a href=\"https://www.nasm.us/\" rel=\"noopener noreferrer nofollow\">NASM</a> упомянутый в инструкции установился легко.</p><p>Веселье ждало позже.</p><h3>Настройка зоопарка</h3><p>Установив программки я выяснил ряд подводных камней:</p><ol><li><p>Система не видит NASM.</p></li><li><p>Система знает про пути perl\'а но тот perl который пытается выполнить ваши скрипы - это не тот perl который вы установили.</p></li></ol><p>У меня были эти проблемы, и если вам что есть по этому поводу сказать, то приглашаю в комментарии.</p><p>Нам нужно поправить заблуждения системы о системных переменных.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/c86/d8c/a5c/c86d8ca5c0b4e624306bfc7014ceb448.png\" alt=\"Сотрудники Microsoft даровали нам поиск так почему бы не воспользоваться\" title=\"Сотрудники Microsoft даровали нам поиск так почему бы не воспользоваться\" width=\"784\" height=\"632\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c86/d8c/a5c/c86d8ca5c0b4e624306bfc7014ceb448.png\"/><figcaption>Сотрудники Microsoft даровали нам поиск так почему бы не воспользоваться</figcaption></figure><p>Первая беда будет ждать в path системы:</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/827/215/713/8272157130ee7abb4b52b017172dff1f.png\" alt=\"То как должно быть и как гарантированно не было изначально\" title=\"То как должно быть и как гарантированно не было изначально\" width=\"619\" height=\"538\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/827/215/713/8272157130ee7abb4b52b017172dff1f.png\"/><figcaption>То как должно быть и как гарантированно не было изначально</figcaption></figure><ul><li><p>NASM в процессе установки не умеет прописывать себя в путях так что третья строка снизу была добавлена вручную;</p></li><li><p>Perl умеет себя прописывать в путях системы но по какой то причине полностью рабочий исполняемы файл perl\'а валяется в пользовательских бинарниках у git\'а и вызывается вперёд нужного;</p></li><li><p>многие скрипты, необходимые perl\'у, имеют в своём же расположении тёзку с расширением .bat и не вызываются нормально.</p></li></ul><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/70c/1bc/b15/70c1bcb15e7e69686ce2478f25027edf.png\" alt=\"Выделенный фрагмент нужно сделать именно в таком порядке\" title=\"Выделенный фрагмент нужно сделать именно в таком порядке\" width=\"653\" height=\"165\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/70c/1bc/b15/70c1bcb15e7e69686ce2478f25027edf.png\"/><figcaption>Выделенный фрагмент нужно сделать именно в таком порядке</figcaption></figure><p>Последнее решается размещением расширения .pl в переменной pathext и перемещением его перед расширением .bat.</p><p>Далее понадобится перезапустить ПК, так как до сих пор это единственный путь, который гарантирует что переменные системы обновились.</p><p>На этом можем проверить факт того, что наши штуки установлены и настроены.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e7d/8ae/09d/e7d8ae09dfdf8132cd6a9133084bfd4c.png\" alt=\"Ассемблер на месте\" title=\"Ассемблер на месте\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e7d/8ae/09d/e7d8ae09dfdf8132cd6a9133084bfd4c.png\"/><figcaption>Ассемблер на месте</figcaption></figure><p>К сожалению, такой же прикол с перлом не пройдёт, так как помним, что в гите живёт его злобный брат-близнец, и надо убедится, что запускается нужный.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/144/63c/bc5/14463cbc54fdaf78c84b9ea6a346f174.png\" alt=\"Шаг 1\" title=\"Шаг 1\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/144/63c/bc5/14463cbc54fdaf78c84b9ea6a346f174.png\"/><figcaption>Шаг 1</figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/5be/bf4/61a/5bebf461a7f50be1de2e8457fbf6e9b8.png\" alt=\"шаг 2\" title=\"шаг 2\" width=\"1113\" height=\"626\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/5be/bf4/61a/5bebf461a7f50be1de2e8457fbf6e9b8.png\"/><figcaption>шаг 2</figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/21b/3dc/9a5/21b3dc9a500058f54b8a06c87b2dcb05.png\" alt=\"шаг 3\" title=\"шаг 3\" width=\"1111\" height=\"624\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/21b/3dc/9a5/21b3dc9a500058f54b8a06c87b2dcb05.png\"/><figcaption>шаг 3</figcaption></figure><p>Если результат дальнейших действий как на картинках выше - успех</p><p>По шагам:</p><ol><li><p>Запускаем перл в консоли.</p></li><li><p>В диспетчере задач находим процесс перла и заказываем подсмотреть где он живёт (мне удобнее через вкладку \"подробности\").</p></li><li><p>Если открывается путь, куда мы устанавливали его - радуемся.</p></li></ol><p>А теперь можно прийти к последнему шагу настройки странных вещей - дополнительные пакеты perl:</p><ul><li><p>Text::Template необходим для того, чтобы компилятор справился со своей работой;</p></li><li><p>Test::More нужен для того, чтобы можно было проверить: проходят ли полученные бинарники тесты.</p></li></ul><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/0b5/ad4/c2c/0b5ad4c2c71b6e372be19d7182ceccc5.png\" alt=\"cpan install Text::Template\" title=\"cpan install Text::Template\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/0b5/ad4/c2c/0b5ad4c2c71b6e372be19d7182ceccc5.png\"/><figcaption>cpan install Text::Template</figcaption></figure><p>Не стоит обманываться сообщением о том, что модуль уже есть. Скорее всего, он будет скачиваться и устанавливаться.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/cae/e9c/3b2/caee9c3b2d870b4bf1d7c4d76d1a4f51.png\" alt=\"cpan install Test::More\" title=\"cpan install Test::More\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/cae/e9c/3b2/caee9c3b2d870b4bf1d7c4d76d1a4f51.png\"/><figcaption>cpan install Test::More</figcaption></figure><p>Ставить ли модуль тестов, это, конечно, дело индивидуальное, но если тесты есть, то зачем ими пренебрегать?</p><h3>Планирование установки</h3><p>Этап не обязательный, но лучше о нём подумать сразу, а не когда будет каша на диске.</p><p>Так как мы думаем про серьёзный проект, то понадобятся варианты, как на статической, так и на динамической сборке. Варианты для отладки и для разных систем - всё это надо как то складывать.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/01a/bf6/198/01abf6198a1f797ebd62b3021e49f3aa.png\" alt=\"Вид снаружи в проводнике\" title=\"Вид снаружи в проводнике\" width=\"1111\" height=\"624\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/01a/bf6/198/01abf6198a1f797ebd62b3021e49f3aa.png\"/><figcaption>Вид снаружи в проводнике</figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b55/f20/ba4/b55f20ba45c5cf6e00b440ee95ee49c6.png\" alt=\"Общая структура папок для наглядности\" title=\"Общая структура папок для наглядности\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b55/f20/ba4/b55f20ba45c5cf6e00b440ee95ee49c6.png\"/><figcaption>Общая структура папок для наглядности</figcaption></figure><p>Для других платформ, например ARM, нужно будет создать дополнительные каталоги и выполнить команды по аналогии.</p><p>Сам же каталог скорее временный, так как библиотеки удобнее хранить в одном месте, и лично в моём случае, openssl переедет поближе к boost и другим используемым библиотеками, но позже.</p><h3>Компиляция (много компиляции)</h3><p>Дальше пойдут инструкции по сборке под конкретные варианты компиляции. При необходимости вы можете пролистать до нужных вам.</p><h4>x64 Release dll</h4><p>Здесь и в дальнейшем буду пользоваться приложением терминала Microsoft, но все терминалы, которые нужны для компиляции, доступны из меню Пуск в разделе установленной Visual Studio.</p><p>Для начала нужно открыть Терминал разработчика для x64 платформы и перейти в каталог репозитория, скачанного в самом начале.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a12/a31/422/a12a31422fd1eb2062ccce8dbfef8745.png\" alt=\"cd /d E:\\soft\\libs\\openssl\\openssl\" title=\"cd /d E:\\soft\\libs\\openssl\\openssl\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a12/a31/422/a12a31422fd1eb2062ccce8dbfef8745.png\"/><figcaption>cd /d E:\\soft\\libs\\openssl\\openssl</figcaption></figure><p>А теперь понадобится perl. С помощью него настроим переменные сборки и подставим подготовленные каталоги для складирования данных компилятором.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/7e6/c8f/cf4/7e6c8fcf44348a19f52360c758838b8f.png\" alt=\"perl Configure VC-WIN64A --prefix=E:\\soft\\libs\\movebox\\dll\\x64\\release --openssldir=E:\\soft\\libs\\movebox\\SSL\" title=\"perl Configure VC-WIN64A --prefix=E:\\soft\\libs\\movebox\\dll\\x64\\release --openssldir=E:\\soft\\libs\\movebox\\SSL\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/7e6/c8f/cf4/7e6c8fcf44348a19f52360c758838b8f.png\"/><figcaption>perl Configure VC-WIN64A --prefix=E:\\soft\\libs\\movebox\\dll\\x64\\release --openssldir=E:\\soft\\libs\\movebox\\SSL</figcaption></figure><p>Не нужно забывать, что пути нужно подставлять свои, и будет счастье. На следующем шаге возможно познать дзен, так как компилироваться это будет достаточно долго.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/823/31f/0de/82331f0de09832e60851bdbbbced4c89.png\" alt=\"nmake \" title=\"nmake \" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/823/31f/0de/82331f0de09832e60851bdbbbced4c89.png\"/><figcaption>nmake </figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/2d0/76d/130/2d076d1303a3f917d84e253ad0c7dd14.png\" alt=\"До этого кадра пришлось ждать 35 минут\" title=\"До этого кадра пришлось ждать 35 минут\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/2d0/76d/130/2d076d1303a3f917d84e253ad0c7dd14.png\"/><figcaption>До этого кадра пришлось ждать 35 минут</figcaption></figure><p>После команды nmake пройдёт ориентировочно 40 минут компиляции. Между первым и вторым кадром прошло 35 минут.</p><p>Дальше запуск тестов.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f32/716/bf9/f32716bf9deb368492d35fb66c8939b2.png\" alt=\"nmake test\" title=\"nmake test\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f32/716/bf9/f32716bf9deb368492d35fb66c8939b2.png\"/><figcaption>nmake test</figcaption></figure><p>Чудные 20-30 минут тестов стоит провести за чем-нибудь более приятным, чем рябь от консоли.</p><p>Теперь нужно решить проблему девственно чистых папок, заготовленных под готовые библиотеки и дать команду компилятору.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/343/e55/70d/343e5570dc0e42294698c20cedf23796.png\" alt=\"nmake install\" title=\"nmake install\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/343/e55/70d/343e5570dc0e42294698c20cedf23796.png\"/><figcaption>nmake install</figcaption></figure><p>Ждать на этом процессе меньше, но это не финал мытарств со сборкой данной версии. Надо прибрать за собой.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/c82/0b9/680/c820b96800356f5a83ff575b6aa68bb6.png\" alt=\"nmake clean\" title=\"nmake clean\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c82/0b9/680/c820b96800356f5a83ff575b6aa68bb6.png\"/><figcaption>nmake clean</figcaption></figure><p>Вот теперь мы как пионеры - поработали и прибрали за собой.</p><h4>x64 Release lib</h4><p>Для статической библиотеки, находясь в каталоге репозитория, ввести настройки конфигурации для новой сборки. Как и в прошлый раз пользуемся перлом.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ab7/7e3/733/ab77e3733ba13195863d1dd475f5baac.png\" alt=\"perl Configure VC-WIN64A --prefix=E:\\soft\\libs\\movebox\\lib\\x64\\release --openssldir=E:\\soft \\libs\\movebox\\SSL no-shared\" title=\"perl Configure VC-WIN64A --prefix=E:\\soft\\libs\\movebox\\lib\\x64\\release --openssldir=E:\\soft \\libs\\movebox\\SSL no-shared\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ab7/7e3/733/ab77e3733ba13195863d1dd475f5baac.png\"/><figcaption>perl Configure VC-WIN64A --prefix=E:\\soft\\libs\\movebox\\lib\\x64\\release --openssldir=E:\\soft \\libs\\movebox\\SSL no-shared</figcaption></figure><p>Необходимо указать каталог выходных файлов и добавить в конце ключ no-shared, это позволит собрать библиотеку для статической линковки.</p><p>Дальше шаги повторяют сборку динамической версии.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/fc2/8be/794/fc28be79418b641a4252dda536851b85.png\" alt=\"nmake\" title=\"nmake\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/fc2/8be/794/fc28be79418b641a4252dda536851b85.png\"/><figcaption>nmake</figcaption></figure><p>После команды nmake чем-нибудь займите себя, так как время сборки кардинально меньшим не станет.</p><p>Хотя в этом случае звёзды благоволили и сборка прошла за 20 минут, но никто не отменял тесты.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/9f3/1d1/7d0/9f31d17d0627ff9ab0d49bec863c9411.png\" alt=\"nmake test\" title=\"nmake test\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/9f3/1d1/7d0/9f31d17d0627ff9ab0d49bec863c9411.png\"/><figcaption>nmake test</figcaption></figure><p>Тесты пройдены, пора устанавливать.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/5b7/1dc/91d/5b71dc91d31f13bdad39357a8489582d.png\" alt=\"nmake install_sw\" title=\"nmake install_sw\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/5b7/1dc/91d/5b71dc91d31f13bdad39357a8489582d.png\"/><figcaption>nmake install_sw</figcaption></figure><p>Команда установки обзавелась дополнительным суффиксом и хоть сработает и без него, но полученный результат не сработает в проекте так как надо.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/b3c/e48/604/b3ce4860415b9651c7e72a1e47a8d3eb.png\" alt=\"\" title=\"\" width=\"1111\" height=\"624\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b3c/e48/604/b3ce4860415b9651c7e72a1e47a8d3eb.png\"/><figcaption></figcaption></figure><p>Можно по выполнении команды убедиться что всё переместилось в нужный нам каталог.</p><p>Побираемся, так как нефиг захламляться, да и последующим сборкам мешать будет.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/c24/550/9be/c245509be6343bf2ec627ef80697031f.png\" alt=\"nmake clean\" title=\"nmake clean\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/c24/550/9be/c245509be6343bf2ec627ef80697031f.png\"/><figcaption>nmake clean</figcaption></figure><h4>x64 Debug dll</h4><p>Процесс в целом довольно длительный и требует терпения, так что в этот раз, весь набор команд, необходимых для работы с конкретным вариантом сборки, я отправил в один пайплайн, который получился довольно увесистым.</p><p>perl Configure VC-WIN64A --debug --prefix=E:\\soft\\libs\\movebox\\dll\\x64\\debug --openssldir=E:\\soft\\libs\\movebox\\SSL &amp;&amp; nmake &amp;&amp; nmake test &amp;&amp; nmake install_sw &amp;&amp; nmake clean</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/af6/c39/1b6/af6c391b61031e8a47ce7ccaf0735d80.png\" alt=\"Введён пайплайн\" title=\"Введён пайплайн\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/af6/c39/1b6/af6c391b61031e8a47ce7ccaf0735d80.png\"/><figcaption>Введён пайплайн</figcaption></figure><p>Всё что выше - одна строка, и одной строкой же отправляется в консоль разработчика. При этом обратите внимание, что появился ключ debug в первой команде, и мы поменяли выходной каталог для библиотеки. Ключ для статической библиотеки здесь убран.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/205/2c2/9f3/2052c29f33b624cf54a23e1ab4d20629.png\" alt=\"Начало работы\" title=\"Начало работы\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/205/2c2/9f3/2052c29f33b624cf54a23e1ab4d20629.png\"/><figcaption>Начало работы</figcaption></figure><p>Вообще пайплайны устроены так, что если указан &amp;&amp; между командами, то программы по данным меду собой не связаны, но следующие запускаются только если предыдущие выполнились без ошибок, что позволяет узнать когда процесс пошёл не туда. С учётом того, что почти все команды, объединенные в пайп, длительные, и ловить каждые пару минут, закончилось оно или нет бывает проблематично, то запустить и забыть на часик другой про окно - довольно удобно.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d6d/d1f/52a/d6dd1f52a34d93226462404b519ee6a5.png\" alt=\"Немного ожидания и всё готово\" title=\"Немного ожидания и всё готово\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d6d/d1f/52a/d6dd1f52a34d93226462404b519ee6a5.png\"/><figcaption>Немного ожидания и всё готово</figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/8ac/888/ecf/8ac888ecf29ee04c77ddbbe8fff6b1e3.png\" alt=\"\" title=\"\" width=\"1111\" height=\"624\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/8ac/888/ecf/8ac888ecf29ee04c77ddbbe8fff6b1e3.png\"/><figcaption></figcaption></figure><p>Что приятно, так это то, что последующие шаги мы так же упростим а текущая команда подготовила место для работы после себя.</p><h4>x64 Debug lib</h4><p>Надеюсь, к этому моменту вы прониклись ленивостью, так как четвёртая компиляция пройдёт в такой же ускоренной манере.</p><p>perl Configure VC-WIN64A --debug --prefix=E:\\soft\\libs\\movebox\\lib\\x64\\debug --openssldir=E:\\soft\\libs\\movebox\\SSL no-shared &amp;&amp; nmake &amp;&amp; nmake test &amp;&amp; nmake install_sw &amp;&amp; nmake clean</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/49d/55b/711/49d55b711f483b4d30f2db50137a7cef.png\" alt=\"Погнали\" title=\"Погнали\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/49d/55b/711/49d55b711f483b4d30f2db50137a7cef.png\"/><figcaption>Погнали</figcaption></figure><p>В командах поменялись пути и добавлен ключ статической библиотеки, остаётся ждать.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/15b/03a/5e0/15b03a5e0ba838406c98acd104fa3b82.png\" alt=\"дожидаемся окончания очистки\" title=\"дожидаемся окончания очистки\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/15b/03a/5e0/15b03a5e0ba838406c98acd104fa3b82.png\"/><figcaption>дожидаемся окончания очистки</figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/369/7e7/302/3697e7302a6b4eb33f671b33baa3df4d.png\" alt=\"проверяем что всё собралось\" title=\"проверяем что всё собралось\" width=\"1111\" height=\"624\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/369/7e7/302/3697e7302a6b4eb33f671b33baa3df4d.png\"/><figcaption>проверяем что всё собралось</figcaption></figure><p>Теперь мы закончили с билдом x64 платформы полностью и можно переходить к x86.</p><h4>X86 all in one</h4><p>Всё что нужно проделать для x86 платформы объединим в один скрипт.</p><p>perl Configure VC-WIN32 --debug --prefix=E:\\soft\\libs\\movebox\\lib\\x86\\debug --openssldir=E:\\soft\\libs\\movebox\\SSL no-shared &amp;&amp; nmake &amp;&amp; nmake test &amp;&amp; nmake install_sw &amp;&amp; nmake clean &amp;&amp; perl Configure VC-WIN32 --prefix=E:\\soft\\libs\\movebox\\lib\\x86\\release --openssldir=E:\\soft\\libs\\movebox\\SSL no-shared &amp;&amp; nmake &amp;&amp; nmake test &amp;&amp; nmake install_sw &amp;&amp; nmake clean &amp;&amp; perl Configure VC-WIN32 --debug --prefix=E:\\soft\\libs\\movebox\\dll\\x86\\debug --openssldir=E:\\soft\\libs\\movebox\\SSL &amp;&amp; nmake &amp;&amp; nmake test &amp;&amp; nmake install_sw &amp;&amp; nmake clean &amp;&amp; perl Configure VC-WIN32 --prefix=E:\\soft\\libs\\movebox\\dll\\x86\\release --openssldir=E:\\soft\\libs\\movebox\\SSL &amp;&amp; nmake &amp;&amp; nmake test &amp;&amp; nmake install_sw &amp;&amp; nmake clean</p><p>Мешанина выше - это однострочный скрипт, который сделает всю необходимую работу по компиляции к размещению готового варианта библиотек. Но убедитесь, что запускаете вы его из под нужной консоли разработчика и в директории репозитория open ssl</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/338/e92/948/338e92948e64c4b7a84c8651f591ed4b.png\" alt=\"cd /d E:\\soft\\libs\\openssl\\openssl\" title=\"cd /d E:\\soft\\libs\\openssl\\openssl\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/338/e92/948/338e92948e64c4b7a84c8651f591ed4b.png\"/><figcaption>cd /d E:\\soft\\libs\\openssl\\openssl</figcaption></figure><p>И только после того, как убедитесь, что все условия соблюдены, запускаете нашу лошадку вывозить компиляцию.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/58b/9cc/578/58b9cc578618961ad917294ad4011c0b.png\" alt=\"Ждать долго\" title=\"Ждать долго\" width=\"1115\" height=\"628\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/58b/9cc/578/58b9cc578618961ad917294ad4011c0b.png\"/><figcaption>Ждать долго</figcaption></figure><p>Tips: Для большинства проектов достаточно собрать пару debug-release для конкретно вашей платформы и только в одном формате dll или lib.</p><p>Теперь пустых директорий в заготовленной папке у нас нет. Можно приступить к следующему шагу.</p><h3>Причёсывание установки</h3><p>После полностью прошедшего процесса установки и компиляции стоит почистить временные файлы</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/054/874/c1c/054874c1c79505d4b62990d08eedf6bf.png\" alt=\"Пропустить сложно, но всё таки\" title=\"Пропустить сложно, но всё таки\" width=\"1111\" height=\"624\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/054/874/c1c/054874c1c79505d4b62990d08eedf6bf.png\"/><figcaption>Пропустить сложно, но всё таки</figcaption></figure><p>Папка ssl более не понадобится. Следующим шагом следует переместить библиотеку на постоянное место жительства. В случае с текущим компом, подобные библиотеки находятся в стандартном каталоге visual studio</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/de6/7f3/a26/de67f3a26180da39d03bec912fb251fc.png\" alt=\"%homedrive%%homepath%\\source\" title=\"%homedrive%%homepath%\\source\" width=\"1200\" height=\"626\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/de6/7f3/a26/de67f3a26180da39d03bec912fb251fc.png\"/><figcaption>%homedrive%%homepath%\\source</figcaption></figure><p>Ну и библиотеки будут жить в папке libs</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/5c6/233/df5/5c6233df5998facfdf9ad597dccbc6a7.png\" alt=\"Заходим не стесняемся\" title=\"Заходим не стесняемся\" width=\"1200\" height=\"626\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/5c6/233/df5/5c6233df5998facfdf9ad597dccbc6a7.png\"/><figcaption>Заходим не стесняемся</figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/5f8/d36/21b/5f8d3621b9e099ce221312447bbf9e6c.png\" alt=\"создаём папку под библиотеку\" title=\"создаём папку под библиотеку\" width=\"1200\" height=\"626\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/5f8/d36/21b/5f8d3621b9e099ce221312447bbf9e6c.png\"/><figcaption>создаём папку под библиотеку</figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ce2/20b/df7/ce220bdf72ea62a001dfc1e54eaf494d.png\" alt=\"Вот этих ребят переименовал в dynamic и static соответственно\" title=\"Вот этих ребят переименовал в dynamic и static соответственно\" width=\"1200\" height=\"626\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ce2/20b/df7/ce220bdf72ea62a001dfc1e54eaf494d.png\"/><figcaption>Вот этих ребят переименовал в dynamic и static соответственно</figcaption></figure><p>Переносим из временной папки библиотеки в заботливо созданную под это дело папку с названием библиотеки и версии. Так же переименуем папки с версиями для статической и динамической линковки - будет труднее запутаться так как lib и dll файлы будут фигурировать довольно часто, независимо от версии.</p><h3>Интеграция в проект</h3><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d05/8d9/676/d058d9676460911d0e614db57af8ddfc.png\" alt=\"Страх от которого надо избавиться\" title=\"Страх от которого надо избавиться\" width=\"737\" height=\"853\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d05/8d9/676/d058d9676460911d0e614db57af8ddfc.png\"/><figcaption>Страх от которого надо избавиться</figcaption></figure><p>Как видим, факт наших мучений с компиляцией не сильно впечатлил VIsual Studio, и нужно показать расположения вожделенных документов.</p><p>Так как в одном проекте нельзя одновременно подключать и статическую и динамическую версии одной и той же библиотеки, продемонстрирую пример подключения динамической версии, так как для отладки это может быть удобнее.</p><p>Нужно залезть в свойства проекта и перейти в настройки с/с++ и изменить настройки дополнительных включаемых каталогов.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/dba/c40/d3e/dbac40d3e2336d7d4edce304a49ab4de.png\" alt=\"Правой кнопкой мыши по проекту -> пункт свойства\" title=\"Правой кнопкой мыши по проекту -> пункт свойства\" width=\"1010\" height=\"544\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/dba/c40/d3e/dbac40d3e2336d7d4edce304a49ab4de.png\"/><figcaption>Правой кнопкой мыши по проекту -> пункт свойства</figcaption></figure><p>В окне изменения с помощью магии макросов Visual Studio создадим универсальный путь включения.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d7d/b17/d8c/d7db17d8c431b2271431d6b83249e94d.png\" alt=\"C:\\Users\\Varkmort-mainPC\\source\\libs\\OpenSSL-master10.07.22\\dynamic\\$(PlatformTarget)\\$(Configuration)\\include\" title=\"C:\\Users\\Varkmort-mainPC\\source\\libs\\OpenSSL-master10.07.22\\dynamic\\$(PlatformTarget)\\$(Configuration)\\include\" width=\"1008\" height=\"544\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d7d/b17/d8c/d7db17d8c431b2271431d6b83249e94d.png\"/><figcaption>C:\\Users\\Varkmort-mainPC\\source\\libs\\OpenSSL-master10.07.22\\dynamic\\$(PlatformTarget)\\$(Configuration)\\include</figcaption></figure><p>Макросы помогут не один раз. Самое время проверить что теперь думает Visual Studio.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e75/831/d7c/e75831d7c6eefab6c33750f56099c68c.png\" alt=\"Что-то на линковщицком\" title=\"Что-то на линковщицком\" width=\"983\" height=\"889\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e75/831/d7c/e75831d7c6eefab6c33750f56099c68c.png\"/><figcaption>Что-то на линковщицком</figcaption></figure><p>Ругаться стали по-другому. Теперь ошибки возникают не на уровне компиляции, а при линковке. Приблизились нас на шаг к победе.  </p><p>Теперь нужно научит проект видеть исполняемые файлы dll и подключать в наш исполняемый файл вызовы нужной библиотеки.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/99b/e57/5b8/99be575b8e7749eef58af031478807d4.png\" alt=\"C:\\Users\\Varkmort-mainPC\\source\\libs\\OpenSSL-master10.07.22\\dynamic\\$(PlatformTarget)\\$(Configuration)\\lib\" title=\"C:\\Users\\Varkmort-mainPC\\source\\libs\\OpenSSL-master10.07.22\\dynamic\\$(PlatformTarget)\\$(Configuration)\\lib\" width=\"1011\" height=\"544\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/99b/e57/5b8/99be575b8e7749eef58af031478807d4.png\"/><figcaption>C:\\Users\\Varkmort-mainPC\\source\\libs\\OpenSSL-master10.07.22\\dynamic\\$(PlatformTarget)\\$(Configuration)\\lib</figcaption></figure><p>Перво-наперво поясним компоновщику где лежат файлы вызовов функций. Добавим запись в дополнительные каталоги библиотек. Затем перейдя из вкладки общее в ввод дополним дополнительные зависимости.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f2e/ead/ec1/f2eeadec1b6b936632159dcbc05504d8.png\" alt=\"лезем в свойства \" title=\"лезем в свойства \" width=\"1010\" height=\"544\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/f2e/ead/ec1/f2eeadec1b6b936632159dcbc05504d8.png\"/><figcaption>лезем в свойства </figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ebe/703/82b/ebe70382bf96c827f1f7bf6554c742c7.png\" alt=\"вносим изменения\" title=\"вносим изменения\" width=\"1011\" height=\"544\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ebe/703/82b/ebe70382bf96c827f1f7bf6554c742c7.png\"/><figcaption>вносим изменения</figcaption></figure><p>libcrypto.lib;libssl.lib; - разделены ; которые нельзя забывать так что лучше через меню изменения</p><p>Теперь решение собирается и мы можем проверить что работает.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/73e/a08/4cd/73ea084cd6e9bf87728a90016e234427.png\" alt=\"Обманчивый успех\" title=\"Обманчивый успех\" width=\"677\" height=\"220\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/73e/a08/4cd/73ea084cd6e9bf87728a90016e234427.png\"/><figcaption>Обманчивый успех</figcaption></figure><p>Отладка или релиз - не важно программа выдаёт:</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ec4/d59/5ad/ec4d595ad52cbdb6f6f076c0a5d57da7.png\" alt=\"Приступ слепоты у программы \" title=\"Приступ слепоты у программы \" width=\"397\" height=\"159\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ec4/d59/5ad/ec4d595ad52cbdb6f6f076c0a5d57da7.png\"/><figcaption>Приступ слепоты у программы </figcaption></figure><p>Так как не научили проект знать о местоположении исполняемых файлов. Надо открыть свойства проекта и перейти в каталоги vс++</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/bd6/ac8/c38/bd6ac8c389b2ac7d31fe136b8077edde.png\" alt=\"Выделенный пункт надо настроить\" title=\"Выделенный пункт надо настроить\" width=\"786\" height=\"544\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/bd6/ac8/c38/bd6ac8c389b2ac7d31fe136b8077edde.png\"/><figcaption>Выделенный пункт надо настроить</figcaption></figure><p>Нужный раздел - каталоги исполняемых файлов. Именно туда вписывают пути до библиотек dll.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/130/3be/31e/1303be31e2b6b6c27dcc4539c894d5af.png\" alt=\"C:\\Users\\Varkmort-mainPC\\source\\libs\\OpenSSL-master10.07.22\\dynamic\\$(PlatformTarget)\\$(Configuration)\\bin\\\" title=\"C:\\Users\\Varkmort-mainPC\\source\\libs\\OpenSSL-master10.07.22\\dynamic\\$(PlatformTarget)\\$(Configuration)\\bin\\\" width=\"1011\" height=\"544\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/130/3be/31e/1303be31e2b6b6c27dcc4539c894d5af.png\"/><figcaption>C:\\Users\\Varkmort-mainPC\\source\\libs\\OpenSSL-master10.07.22\\dynamic\\$(PlatformTarget)\\$(Configuration)\\bin\\</figcaption></figure><p>И вуаля - работает.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/bea/428/dd5/bea428dd5c076bbfdbfe137b3ffe8a0c.png\" alt=\"Успешный успех на 146%\" title=\"Успешный успех на 146%\" width=\"1140\" height=\"778\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/bea/428/dd5/bea428dd5c076bbfdbfe137b3ffe8a0c.png\"/><figcaption>Успешный успех на 146%</figcaption></figure><p>Теперь можно успокоится и со спокойным разумом продолжить работу над проектом, а не над войной со строптивой библиотекой.</p><h3>Заключение</h3><p>В процессе работы несколько раз были очень подлые моменты, например, что брандмауэр системы, на пару с антивирусом, просыпались из отключки и ломали компиляцию. x86 до рабочего состояния вовсе собралась раза с 4, и в конечном счёте была доустановлена только ради гайда. В данной статье постарался осветить возможные проблемы при работе и проведении процесса. Сколько я не искал на просторах рунета нормальных инструкций по развёртыванию open ssl, не нашёл таковых, и надеюсь на отклик со стороны читателей, а также на то, что статья будет полезна хотя бы ещё паре человек на этой планете. Успехов.</p></div>'),
(32, 'Kinesis advantage: заменяем функциональные клавиши на механические ', '/ru/post/678708/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>На Хабре уже были статьи про клавиатуру Kinesis Advantage.</p><p>У первой модели этой клавиатуры F-клавиши были резиновыми, и нажимать их было не очень удобно. Потом вышла вторая модель, где эти клавиши стали механическими, также обновилась прошивка, увеличился объём памяти.</p><p>Я по случаю приобрёл первую модель этой клавиатуры, как раз с резиновыми F-клавишами. Надо сказать, что от частого использования и времени, становится трудно нажимать клавиши. Например, самая часто используемая кнопка - ESC - нажималась только с третьего раза. Будучи вимером, я всё равно перенастроил ESC на CapsLock, но некоторые из F-клавиш тоже очень трудно нажимались.</p><p>Как самое простое решение, я купил внешнюю numpad USB клавиатуру, и программно переназначил на ней клавиши 1,2,3... соответственно на F1,F2,F3..F12</p><p>Недостатки такого решения:</p><ul><li><p>Выглядит не очень</p></li><li><p>Занимает лишнее место</p></li><li><p>Нужен программный ремаппинг клавиш. В некоторых компаниях бывает трудно установить подобный софт</p></li></ul><p>Я обратился в официальную службу поддержки Kinesis, с просьбой прислать мне замену для резиновых клавиш. Даже новые, они не идеальны, но они хотя бы работают. Но оказалось, что их уже сняли с производства.</p><p>Тогда я попросил, могу ли купить у них механические клавиши от новой модели, на что получил отказ.</p><p>В итоге, я нашёл <a href=\"https://geekhack.org/index.php?topic=36195.msg2304294#msg2304294\" rel=\"noopener noreferrer nofollow\">пример</a>, как самому заменить кнопки на механические. Вместо колпачков идеально подходят кубики Lego. Дополнительный бонус - их можно сделать разноцветными. Если автор того поста сейчас читает эту статью, хочу выразить ему огромную благодарность за идею!</p><p>Для переключателей используются <a href=\"https://deskthority.net/wiki/Cherry_ML\" rel=\"noopener noreferrer nofollow\">Cherry ML</a>. Их вполне можно найти в продаже, но оказалось очень сложно найти подходящие колпачки. В итоге я купил старую клавиатуру на этих свичах, и отпилил существующие колпачки по размеру. Дальше приклеил к ним кубики Lego.</p><p>Как вариант, можно было бы клеить кубики прямо к переключателям.</p><p>Ниже привожу картинки процесса сборки.</p><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/8c5/3e4/da6/8c53e4da657b0c662b8d4523d40260f4.jpg\" alt=\"Потребовался реверс-инжениринг схемы подключения клавиш. Схему я не сохранил, к сожалению\" title=\"Потребовался реверс-инжениринг схемы подключения клавиш. Схему я не сохранил, к сожалению\" width=\"4160\" height=\"1499\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/8c5/3e4/da6/8c53e4da657b0c662b8d4523d40260f4.jpg\" data-blurred=\"true\"/><figcaption>Потребовался реверс-инжениринг схемы подключения клавиш. Схему я не сохранил, к сожалению</figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/5f6/755/22f/5f675522faf02cd6cd73316007e908d9.jpg\" alt=\"От другого проекта остались контакты, решил их здесь использовать\" title=\"От другого проекта остались контакты, решил их здесь использовать\" width=\"3631\" height=\"1981\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/5f6/755/22f/5f675522faf02cd6cd73316007e908d9.jpg\" data-blurred=\"true\"/><figcaption>От другого проекта остались контакты, решил их здесь использовать</figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/1c7/45d/f16/1c745df1655b7ab2f3b4ee6f35e9e0b7.jpg\" alt=\"Паяем провода напрямую к плате\" title=\"Паяем провода напрямую к плате\" width=\"4024\" height=\"2518\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1c7/45d/f16/1c745df1655b7ab2f3b4ee6f35e9e0b7.jpg\" data-blurred=\"true\"/><figcaption>Паяем провода напрямую к плате</figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/590/2a0/ae9/5902a0ae9efebf3aca719a041e6c3af2.jpg\" alt=\"Примеряем плату в корпус\" title=\"Примеряем плату в корпус\" width=\"4160\" height=\"1510\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/590/2a0/ae9/5902a0ae9efebf3aca719a041e6c3af2.jpg\" data-blurred=\"true\"/><figcaption>Примеряем плату в корпус</figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/ba0/ae7/ac9/ba0ae7ac97ae9df141d44c6bf4f3189c.jpg\" alt=\"Подключаем\" title=\"Подключаем\" width=\"3553\" height=\"2377\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ba0/ae7/ac9/ba0ae7ac97ae9df141d44c6bf4f3189c.jpg\" data-blurred=\"true\"/><figcaption>Подключаем</figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/78a/266/aa9/78a266aa9f12c7d0d881a9a644a20b9a.jpg\" alt=\"Крепим на термоклей\" title=\"Крепим на термоклей\" width=\"4160\" height=\"1446\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/78a/266/aa9/78a266aa9f12c7d0d881a9a644a20b9a.jpg\" data-blurred=\"true\"/><figcaption>Крепим на термоклей</figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/2c6/0a8/d33/2c60a8d333b0e4c546f9da4f6c162701.jpg\" alt=\"Вот так выглядят Cherry ML с другой стороны после закрепления платы в корпусе. Как вариант, прямо к ним можно уже клеить Lego\" title=\"Вот так выглядят Cherry ML с другой стороны после закрепления платы в корпусе. Как вариант, прямо к ним можно уже клеить Lego\" width=\"3603\" height=\"2013\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/2c6/0a8/d33/2c60a8d333b0e4c546f9da4f6c162701.jpg\" data-blurred=\"true\"/><figcaption>Вот так выглядят Cherry ML с другой стороны после закрепления платы в корпусе. Как вариант, прямо к ним можно уже клеить Lego</figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/ea6/b52/f60/ea6b52f60663d1dce32badf2c4111f95.jpg\" alt=\"Отпиливаем колпачки по размеру\" title=\"Отпиливаем колпачки по размеру\" width=\"2491\" height=\"1786\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ea6/b52/f60/ea6b52f60663d1dce32badf2c4111f95.jpg\" data-blurred=\"true\"/><figcaption>Отпиливаем колпачки по размеру</figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/ece/49a/468/ece49a468d653881301baa09a63b2ad7.jpg\" alt=\"Устанавливаем колпачки\" title=\"Устанавливаем колпачки\" width=\"4160\" height=\"1856\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ece/49a/468/ece49a468d653881301baa09a63b2ad7.jpg\" data-blurred=\"true\"/><figcaption>Устанавливаем колпачки</figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/b16/201/dc0/b16201dc0ad1cf2cc57b126074fca435.jpg\" alt=\"Клеим Lego на термоклей. Я решил использовать чёрные кубики\" title=\"Клеим Lego на термоклей. Я решил использовать чёрные кубики\" width=\"4160\" height=\"1980\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/b16/201/dc0/b16201dc0ad1cf2cc57b126074fca435.jpg\" data-blurred=\"true\"/><figcaption>Клеим Lego на термоклей. Я решил использовать чёрные кубики</figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/ff5/868/5bd/ff58685bd57c9ada37c34319026d2351.jpg\" alt=\"Клеим надписи. 1 соответствует F1\" title=\"Клеим надписи. 1 соответствует F1\" width=\"3170\" height=\"2271\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ff5/868/5bd/ff58685bd57c9ada37c34319026d2351.jpg\" data-blurred=\"true\"/><figcaption>Клеим надписи. 1 соответствует F1</figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/d7d/654/2dd/d7d6542dde11f85a469d1b66949ace13.jpg\" width=\"3507\" height=\"1400\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d7d/654/2dd/d7d6542dde11f85a469d1b66949ace13.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><figure class=\"full-width\"><img src=\"https://habrastorage.org/r/w780q1/getpro/habr/upload_files/338/51f/5b5/33851f5b523718950b5c173074a7eae8.jpg\" width=\"4160\" height=\"2214\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/338/51f/5b5/33851f5b523718950b5c173074a7eae8.jpg\" data-blurred=\"true\"/><figcaption></figcaption></figure><p>Вот так это выглядит в сборе. Посередине ещё остались липучки от внешней цифровой клавиатуры. ИМХО чёрные кубики Lego неплохо подходят по цвету к остальным клавишам.</p><p>Механические клавиши намного лучше старых резиновых, они хотя бы работают с первого нажатия. Но всё-таки они не такие удобные, как остальные клавиши на клавиатуре. Если нажать ближе к краю, то ходят с трудом. Возможно, это вызвано слишком большой высотой кубика Lego + колпачка. У меня не было возможности пощупать оригинальную вторую модель Kinesis Advangage 2, так что не могу сравнить.</p><p>Если кто владеет этой клавиатурой, пишите в комментариях. Планируете ли какие-нибудь модификации, или уже сделали?</p></div>');
INSERT INTO `articles` (`id`, `name`, `link`, `text`) VALUES
(33, 'Хостеры с оплатой российскими картами и серверами за границей ', '/ru/post/678458/', '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Всем привет! Меня зовут Леонид, я владелец сервиса Поиск VPS. Весной я уже опубликовал две статьи по оплате услуг иностранных хостеров при помощи <a href=\"https://habr.com/ru/post/657639/\" rel=\"noopener noreferrer nofollow\">SWIFT</a> и <a href=\"https://habr.com/ru/post/658879/\" rel=\"noopener noreferrer nofollow\">криптовалют</a>. К сожалению, карты, выпущенные российскими банками, все еще не работают в большинстве стран мира, да и не у всех есть желание и возможность оплачивать услуги указанными выше способами, поэтому сегодня я хочу предложить выборку хостеров, принимающих оплату российскими картами и предоставляющих виртуальные серверы не в России.</p><p>При составлении списка я ориентировался на количество стран, в которых возможно заказать наиболее универсальную услугу, а именно виртуальные серверы, а также минимальную цену не выше 300 рублей, 5 долларов или 5 евро в месяц. У большинства хостеров возможен заказ услуг в России, а там, где это возможно, приведена ссылка на точки Looking Glass.</p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/dbb/db1/6c2/dbbdb16c2e97f7f37b80a4081bf80ee9.png\" width=\"300\" height=\"104\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/dbb/db1/6c2/dbbdb16c2e97f7f37b80a4081bf80ee9.png\"/><figcaption></figcaption></figure><p><a href=\"https://pq.hosting\" rel=\"noopener noreferrer nofollow\">pq.hosting</a></p><ul><li><p>Компания зарегистрирована в Молдове.</p></li><li><p>Страны расположения оборудования - Болгария, Великобритания, Венгрия, Германия, Гонконг, Израиль, Канада, Латвия, Молдова, Нидерланды, Польша, Португалия, Румыния, США, Словакия, Турция, Украина, Финляндия, Чехия.</p></li><li><p>Цены на VPS/VDS, от 3.77€ за 15 GB NVMe SSD / 1 GB RAM / 1 vCPU.</p></li><li><p>Цены на выделенные серверы, от 150€ за 2x Intel Xeon E5-2680v2 / 32 GB RAM / 2x 480 GB SSD.</p></li><li><p> Looking Glass -   <a href=\"https://looking.house/company.php?id=105\" rel=\"noopener noreferrer nofollow\">20 точек</a>.</p></li></ul><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/8ab/5f3/38d/8ab5f338d82368258ba1a79d08cb25c7.png\" width=\"265\" height=\"60\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/8ab/5f3/38d/8ab5f338d82368258ba1a79d08cb25c7.png\"/><figcaption></figcaption></figure><p><a href=\"https://friendhosting.net\" rel=\"noopener noreferrer nofollow\">friendhosting.net</a></p><ul><li><p>Компания зарегистрирована в Болгарии.</p></li><li><p>Страны расположения оборудования - Болгария, Латвия, Нидерланды, Польша, США, Украина, Чехия, Швейцария.</p></li><li><p>Цены на VPS/VDS, от 2.99€ за 5 GB SSD / 0.5 GB RAM / 1 vCPU.</p></li><li><p>Цены на выделенные серверы, от 99.99€ за Intel Xeon E3 / 32 GB RAM / 2x 250 GB SSD.</p></li></ul><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/7f1/17f/7e9/7f117f7e90e5c67f9f8f87a6d5ed454e.png\" width=\"300\" height=\"53\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/7f1/17f/7e9/7f117f7e90e5c67f9f8f87a6d5ed454e.png\"/><figcaption></figcaption></figure><p><a href=\"https://firstbyte.ru\" rel=\"noopener noreferrer nofollow\">firstbyte.ru</a></p><ul><li><p>Компания зарегистрирована в РФ.</p></li><li><p>Страны расположения оборудования - Болгария, Германия, Нидерланды, Сингапур, США, Финляндия.</p></li><li><p>Цены на VPS/VDS, от 222 рублей за 5 GB SSD / 0.5 GB RAM / 1 vCPU.</p></li><li><p>Looking Glass - <a href=\"https://looking.house/company.php?id=78\" rel=\"noopener noreferrer nofollow\">3 точки</a>.</p></li></ul><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/aa6/5df/799/aa65df799c8c09b144704e4a82fe6b24.png\" width=\"300\" height=\"69\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/aa6/5df/799/aa65df799c8c09b144704e4a82fe6b24.png\"/><figcaption></figcaption></figure><p><a href=\"https://webhost1.ru\" rel=\"noopener noreferrer nofollow\">webhost1.ru</a></p><ul><li><p>Компания зарегистрирована в РФ.</p></li><li><p>Страны расположения оборудования - Израиль, Молдова, Нидерланды, США.</p></li><li><p>Цены на VPS/VDS, от 160 рублей за 10 GB SSD / 1 GB RAM / 1 vCPU.</p></li><li><p>Looking Glass - <a href=\"https://looking.house/company.php?id=114\" rel=\"noopener noreferrer nofollow\">4 точки</a>.</p></li></ul><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ea2/baf/09b/ea2baf09bb16cb1a7bd9cf70d2563d92.png\" width=\"300\" height=\"75\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ea2/baf/09b/ea2baf09bb16cb1a7bd9cf70d2563d92.png\"/><figcaption></figcaption></figure><p><a href=\"https://kvmka.ru\" rel=\"noopener noreferrer nofollow\">kvmka.ru</a></p><ul><li><p>Компания зарегистрирована в РФ.</p></li><li><p>Страны расположения оборудования - Нидерланды, США, Финляндия.</p></li><li><p>Цены на VPS/VDS, от 220 рублей за 10 GB NVMe SSD / 0.5 GB RAM / 1 vCPU.</p></li><li><p>Looking Glass - <a href=\"https://looking.house/company.php?id=254\" rel=\"noopener noreferrer nofollow\">3 точки</a>.</p></li></ul><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/1e6/120/518/1e61205180603b4b8a72f28e12f12b5d.png\" width=\"300\" height=\"59\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/1e6/120/518/1e61205180603b4b8a72f28e12f12b5d.png\"/><figcaption></figcaption></figure><p><a href=\"https://www.eserver.ru\" rel=\"noopener noreferrer nofollow\">eserver.ru</a></p><ul><li><p>Компания зарегистрирована в РФ.</p></li><li><p>Страны расположения оборудования - Гонконг, Словакия.</p></li><li><p>Цены на VPS/VDS, от 3.75€ за 10 GB HDD+SSD / 0.5 GB RAM / 1 vCPU.</p></li><li><p>Цены на выделенные серверы, от 69€ за Intel Xeon E3-1230v2 / 8 GB RAM / 1000 GB HDD.</p></li><li><p>Looking Glass - <a href=\"https://looking.house/company.php?id=81\" rel=\"noopener noreferrer nofollow\">2 точки</a>.</p></li></ul><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/25a/617/4ed/25a6174edd801c571ca96d3dce77744c.png\" width=\"300\" height=\"89\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/25a/617/4ed/25a6174edd801c571ca96d3dce77744c.png\"/><figcaption></figcaption></figure><p><a href=\"https://www.kingservers.com\" rel=\"noopener noreferrer nofollow\">kingservers.com</a></p><ul><li><p>Компания зарегистрирована в РФ.</p></li><li><p>Страны расположения оборудования - Нидерланды, США.</p></li><li><p>Цены на VPS/VDS, от $4 за 25 GB SSD / 2 GB RAM / 1 vCPU.</p></li><li><p>Цены на выделенные серверы, от $136 за AMD EPYC 7302P / 64 GB RAM / 2x 480 GB SSD.</p></li><li><p>Looking Glass - <a href=\"https://looking.house/company.php?id=4\" rel=\"noopener noreferrer nofollow\">4 точки</a>.</p></li></ul><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/d23/8f5/8a2/d238f58a20bf30809cbc6d7d563becb3.png\" width=\"300\" height=\"89\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/d23/8f5/8a2/d238f58a20bf30809cbc6d7d563becb3.png\"/><figcaption></figcaption></figure><p><a href=\"https://llhost-inc.eu/ru\" rel=\"noopener noreferrer nofollow\">llhost-inc.eu</a></p><ul><li><p>Компания зарегистрирована в Румынии.</p></li><li><p>Страны расположения оборудования - Нидерланды, Польша.</p></li><li><p>Цены на VPS/VDS, от 2.99€ за 25 GB SSD / 1 GB RAM / 1 vCPU.</p></li></ul><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/186/d30/da3/186d30da3b802532c0328c091ca5f366.png\" width=\"208\" height=\"63\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/186/d30/da3/186d30da3b802532c0328c091ca5f366.png\"/><figcaption></figcaption></figure><p><a href=\"https://mgnhost.ru\" rel=\"noopener noreferrer nofollow\">mgnhost.ru</a></p><ul><li><p>Компания зарегистрирована в РФ.</p></li><li><p>Страны расположения оборудования - Нидерланды, США.</p></li><li><p>Цены на VPS/VDS, от 210 рублей за 6 GB SSD / 0.5 GB RAM / 1 vCPU.</p></li><li><p>Цены на выделенные серверы, от $40 за AMD Athlon 64 X2 3400+ / 4 GB RAM / 2x 320 GB HDD.</p></li><li><p>Looking Glass - <a href=\"https://looking.house/company.php?id=49\" rel=\"noopener noreferrer nofollow\">4 точки</a>.</p></li></ul><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e74/542/bfc/e74542bfc0706611792c7ba8ad0309b3.png\" width=\"299\" height=\"80\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/e74/542/bfc/e74542bfc0706611792c7ba8ad0309b3.png\"/><figcaption></figcaption></figure><p><a href=\"https://serv-tech.ru\" rel=\"noopener noreferrer nofollow\">serv-tech.ru</a></p><ul><li><p>Компания зарегистрирована в РФ.</p></li><li><p>Страны расположения оборудования - Нидерланды, США.</p></li><li><p>Цены на VPS/VDS, от 220 рублей за 15 GB SSD / 1 GB RAM / 1 vCPU.</p></li><li><p>Looking Glass - <a href=\"https://looking.house/company.php?id=77\" rel=\"noopener noreferrer nofollow\">3 точки</a>.</p></li></ul><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a9e/9d6/5ff/a9e9d65ff8cdfc4ecbbafb0988506c1a.png\" width=\"300\" height=\"56\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/a9e/9d6/5ff/a9e9d65ff8cdfc4ecbbafb0988506c1a.png\"/><figcaption></figcaption></figure><p><a href=\"https://www.cishost.ru\" rel=\"noopener noreferrer nofollow\">cishost.ru</a></p><ul><li><p>Компания зарегистрирована в РФ.</p></li><li><p>Страны расположения оборудования - Болгария.</p></li><li><p>Цены на VPS/VDS, от 250 рублей за 10 GB SSD / 0.5 GB RAM / 1 vCPU.</p></li><li><p>Looking Glass - <a href=\"https://looking.house/company.php?id=14\" rel=\"noopener noreferrer nofollow\">2 точки</a>.</p></li></ul><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/ddd/ee2/70c/dddee270c6acf0159493618f16a30abb.png\" width=\"300\" height=\"56\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/ddd/ee2/70c/dddee270c6acf0159493618f16a30abb.png\"/><figcaption></figcaption></figure><p><a href=\"https://hexcore.ru\" rel=\"noopener noreferrer nofollow\">hexcore.ru</a></p><ul><li><p>Компания зарегистрирована в РФ.</p></li><li><p>Страны расположения оборудования - Эстония.</p></li><li><p>Цены на VPS/VDS, от 292 рублей за 10 GB NVMe SSD / 1 GB RAM / 1 vCPU.</p></li><li><p>Looking Glass - <a href=\"https://looking.house/company.php?id=23\" rel=\"noopener noreferrer nofollow\">3 точки</a>.</p></li></ul><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/10e/6ac/71e/10e6ac71e091ef6d6f0a8e4916b33113.png\" width=\"300\" height=\"149\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/10e/6ac/71e/10e6ac71e091ef6d6f0a8e4916b33113.png\"/><figcaption></figcaption></figure><p><a href=\"https://www.ihor.ru\" rel=\"noopener noreferrer nofollow\">ihor.ru</a></p><ul><li><p>Компания зарегистрирована в РФ.</p></li><li><p>Страны расположения оборудования - Финляндия.</p></li><li><p>Цены на VPS/VDS, от 240 рублей за 5 GB SSD / 0.5 GB RAM / 1 vCPU.</p></li></ul><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/702/f7c/86b/702f7c86b0c768a85f8080b5139b04f7.png\" width=\"300\" height=\"95\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/702/f7c/86b/702f7c86b0c768a85f8080b5139b04f7.png\"/><figcaption></figcaption></figure><p><a href=\"https://justhost.ru\" rel=\"noopener noreferrer nofollow\">justhost.ru</a></p><ul><li><p>Компания зарегистрирована в РФ.</p></li><li><p>Страны расположения оборудования - США.</p></li><li><p>Цены на VPS/VDS, от 70 рублей за 5 GB HDD+SSD / 0.5 GB RAM / 1 vCPU.</p></li><li><p>Looking Glass - <a href=\"https://looking.house/company.php?id=34\" rel=\"noopener noreferrer nofollow\">7 точек</a>.</p></li></ul><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/9fd/1ec/4b7/9fd1ec4b7e04398fdbfb01c3e3924ed0.png\" width=\"300\" height=\"81\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/9fd/1ec/4b7/9fd1ec4b7e04398fdbfb01c3e3924ed0.png\"/><figcaption></figcaption></figure><p><a href=\"https://www.robovps.biz\" rel=\"noopener noreferrer nofollow\">robovps.biz</a></p><ul><li><p>Компания зарегистрирована в РФ.</p></li><li><p>Страны расположения оборудования - Германия.</p></li><li><p>Цены на VPS/VDS, от 249 рублей за 10 GB SSD / 0.5 GB RAM / 1 vCPU.</p></li><li><p>Цены на выделенные серверы, от 40€ за Intel Xeon E3-1270v2 / 16 GB RAM / 2x 1000 GB HDD.</p></li><li><p>Looking Glass - <a href=\"https://looking.house/company.php?id=32\" rel=\"noopener noreferrer nofollow\">1 точка</a>.</p></li></ul><p><strong>UPD:</strong></p><figure class=\"\"><img src=\"https://habrastorage.org/r/w1560/getpro/habr/upload_files/efa/19e/af2/efa19eaf267fea3306b95a7dc9f2067c.png\" width=\"300\" height=\"57\" data-src=\"https://habrastorage.org/getpro/habr/upload_files/efa/19e/af2/efa19eaf267fea3306b95a7dc9f2067c.png\"/><figcaption></figcaption></figure><p><a href=\"https://vdsina.ru\" rel=\"noopener noreferrer nofollow\">vdsina.ru</a></p><ul><li><p>Компания зарегистрирована в РФ.</p></li><li><p>Страны расположения оборудования - Нидерланды.</p></li><li><p>Цены на VPS/VDS, от 198 рублей за 30 GB NVMe SSD / 1 GB RAM / 1 vCPU.</p></li><li><p>Looking Glass - <a href=\"https://looking.house/company.php?id=101\" rel=\"noopener noreferrer nofollow\">2 точки</a>.</p></li></ul></div>');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `articles`
--
ALTER TABLE `articles`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `link` (`link`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `articles`
--
ALTER TABLE `articles`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=34;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
